-- VERSION 0.3 STARTDATE:06/08/2014 ENDDATE:06/08/2014 ISSUE NO: 836  DESC:IMPLEMENTED AMOUNT VALIDATION. DONE BY :RAJA
-- VERSION 0.2 STARTDATE:05/08/2014 ENDDATE:05/08/2014 ISSUE NO: 836  DESC:IMPLEMENTED CHECK CONSTRAINTS TRIGGER ERROR MSG GET FROM CONFIG TABLE. DONE BY :RAJA
-- VERSION:0.1 -- STARTDATE:25/06/2014 -- ENDDATE:25/06/2014 -- ISSUE NO:595 -- COMMENT NO:89 -- DESC CREATING TRIGGER SP FOR INSERTING AND UPDATING IN EXPENSE_STAFF_SALARY -- DONE BY:BHAVANI.R
DROP PROCEDURE IF EXISTS SP_TRG_STAFFDLY_SALARY_VALIDATION;
CREATE PROCEDURE SP_TRG_STAFFDLY_SALARY_VALIDATION(
IN NEW_INVOICE_DATE DATE,
IN NEW_FROM_PERIOD DATE,
IN NEW_TO_PERIOD DATE,
IN NEW_CPF_AMOUNT INTEGER,
IN NEW_LEVY_AMOUNT INTEGER,
IN NEW_SALARY_AMOUNT INTEGER,
IN PROCESS TEXT)
BEGIN
  DECLARE ERRORMSG TEXT;
	DECLARE MESSAGE_TEXT VARCHAR(50);
	-- IF INSERTION THEN CHK THE CONDITION FOR THROWING ERROR MESSAGE
	IF(PROCESS = 'INSERT') THEN
		IF((NEW_INVOICE_DATE IS NOT NULL) OR (NEW_FROM_PERIOD IS NOT NULL) OR (NEW_TO_PERIOD IS NOT NULL)) THEN
			IF(NEW_INVOICE_DATE > CURDATE()) THEN
        SET ERRORMSG=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=474);
				SIGNAL SQLSTATE '45000'
				SET MESSAGE_TEXT = ERRORMSG;
			END IF;
			IF(NEW_FROM_PERIOD >= NEW_INVOICE_DATE) THEN
				SET ERRORMSG=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=512);
        SIGNAL SQLSTATE '45000'
				SET MESSAGE_TEXT = ERRORMSG;
			END IF;
			IF(NEW_TO_PERIOD < NEW_FROM_PERIOD) THEN
				SET ERRORMSG=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=513);
        SIGNAL SQLSTATE '45000'
				SET MESSAGE_TEXT = ERRORMSG;
			END IF;
			IF  (NEW_TO_PERIOD >= NEW_INVOICE_DATE) THEN
				SET ERRORMSG=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=514);
        SIGNAL SQLSTATE '45000'
				SET MESSAGE_TEXT = ERRORMSG;
			END IF;
      IF (NEW_CPF_AMOUNT IS NOT NULL) THEN
        SET @CPF_AMT=(SELECT SUBSTRING_INDEX(NEW_CPF_AMOUNT, '.', 1));
        -- CHECKING THE LENGTH OF THE AMOUNT
        IF(LENGTH(@CPF_AMT)>5) THEN
  				SET ERRORMSG=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=567);
          SET ERRORMSG=(SELECT REPLACE (ERRORMSG,'[DIGIT]','5'));
          SIGNAL SQLSTATE '45000'
  				SET MESSAGE_TEXT = ERRORMSG;
        END IF;
			END IF;
      IF (NEW_LEVY_AMOUNT IS NOT NULL) THEN
        SET @LEVY_AMT=(SELECT SUBSTRING_INDEX(NEW_LEVY_AMOUNT, '.', 1));
        -- CHECKING THE LENGTH OF THE AMOUNT
        IF(LENGTH(@LEVY_AMT)>5) THEN
  				SET ERRORMSG=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=567);
          SET ERRORMSG=(SELECT REPLACE (ERRORMSG,'[DIGIT]','5'));
          SIGNAL SQLSTATE '45000'
  				SET MESSAGE_TEXT = ERRORMSG;
        END IF;
			END IF;
      IF (NEW_SALARY_AMOUNT IS NOT NULL) THEN
        SET @SALARY_AMT=(SELECT SUBSTRING_INDEX(NEW_SALARY_AMOUNT, '.', 1));
        -- CHECKING THE LENGTH OF THE AMOUNT
        IF(LENGTH(@SALARY_AMT)>5) THEN
  				SET ERRORMSG=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=567);
          SET ERRORMSG=(SELECT REPLACE (ERRORMSG,'[DIGIT]','5'));
          SIGNAL SQLSTATE '45000'
  				SET MESSAGE_TEXT = ERRORMSG;
        END IF;
			END IF;
		END IF;
	END IF;
  -- IF UPDATION THEN CHK THE CONDITION FOR THROWING ERROR MESSAGE
	IF(PROCESS = 'UPDATE') THEN
		IF((NEW_INVOICE_DATE IS NOT NULL) OR (NEW_FROM_PERIOD IS NOT NULL) OR (NEW_TO_PERIOD IS NOT NULL)) THEN
			IF(NEW_INVOICE_DATE > CURDATE()) THEN
				SET ERRORMSG=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=474);
				SIGNAL SQLSTATE '45000'
				SET MESSAGE_TEXT = ERRORMSG;
			END IF;
			IF(NEW_FROM_PERIOD >= NEW_INVOICE_DATE) THEN
				SET ERRORMSG=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=512);
        SIGNAL SQLSTATE '45000'
				SET MESSAGE_TEXT = ERRORMSG;
			END IF;			
			IF(NEW_TO_PERIOD < NEW_FROM_PERIOD) THEN
				SET ERRORMSG=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=513);
        SIGNAL SQLSTATE '45000'
				SET MESSAGE_TEXT = ERRORMSG;
			END IF;
			IF  (NEW_TO_PERIOD >= NEW_INVOICE_DATE) THEN
				SET ERRORMSG=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=514);
        SIGNAL SQLSTATE '45000'
				SET MESSAGE_TEXT = ERRORMSG;
			END IF;
      IF (NEW_CPF_AMOUNT IS NOT NULL) THEN
        SET @CPF_AMT=(SELECT SUBSTRING_INDEX(NEW_CPF_AMOUNT, '.', 1));
        -- CHECKING THE LENGTH OF THE AMOUNT
        IF(LENGTH(@CPF_AMT)>5) THEN
  				SET ERRORMSG=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=567);
          SET ERRORMSG=(SELECT REPLACE (ERRORMSG,'[DIGIT]','5'));
          SIGNAL SQLSTATE '45000'
  				SET MESSAGE_TEXT = ERRORMSG;
        END IF;
			END IF;
      IF (NEW_LEVY_AMOUNT IS NOT NULL) THEN
        SET @LEVY_AMT=(SELECT SUBSTRING_INDEX(NEW_LEVY_AMOUNT, '.', 1));
        -- CHECKING THE LENGTH OF THE AMOUNT
        IF(LENGTH(@LEVY_AMT)>5) THEN
  				SET ERRORMSG=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=567);
          SET ERRORMSG=(SELECT REPLACE (ERRORMSG,'[DIGIT]','5'));
          SIGNAL SQLSTATE '45000'
  				SET MESSAGE_TEXT = ERRORMSG;
        END IF;
			END IF;
      IF (NEW_SALARY_AMOUNT IS NOT NULL) THEN
        SET @SALARY_AMT=(SELECT SUBSTRING_INDEX(NEW_SALARY_AMOUNT, '.', 1));
        -- CHECKING THE LENGTH OF THE AMOUNT
        IF(LENGTH(@SALARY_AMT)>5) THEN
  				SET ERRORMSG=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=567);
          SET ERRORMSG=(SELECT REPLACE (ERRORMSG,'[DIGIT]','5'));
          SIGNAL SQLSTATE '45000'
  				SET MESSAGE_TEXT = ERRORMSG;
        END IF;
			END IF;
		END IF;
	END IF;
END;