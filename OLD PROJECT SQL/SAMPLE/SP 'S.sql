-- WRITE SEPERATE SP FOR CREATE , INSERT & UPDATE

1) Fields are unit_id integer auto_increment , unitno unique integer (table name sample unit)

2) Fields are rt_id integer , roomtype char(30) (table name roomtype)

3) Fields are id integer auto_increment , unit_id foreignkey from sample unit table ,

startdate date,enddate date, rt_id foreignkey from roomtype detail table (table name sample unit detail)

-- 1. CREATE, INSERT, UPDATE SP FOR SAMPLE UNIT:

DROP PROCEDURE IF EXISTS SAMPLE_UNIT_CREATE;
CREATE PROCEDURE SAMPLE_UNIT_CREATE()
  BEGIN 
    DROP TABLE IF EXISTS SAMPLE_UNIT;
    CREATE TABLE SAMPLE_UNIT (
    UNIT_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
    UNIT_NO INTEGER NOT NULL UNIQUE );
  END;

CALL SAMPLE_UNIT_CREATE();

SELECT*FROM SAMPLE_UNIT

DROP PROCEDURE IF EXISTS SAMPLE_UNIT_INSERT;
CREATE PROCEDURE SAMPLE_UNIT_INSERT(IN UID INTEGER,IN UNO INTEGER)
  BEGIN
  INSERT INTO SAMPLE_UNIT (UNIT_ID, UNIT_NO) VALUES (UID, UNO);
  SELECT*FROM SAMPLE_UNIT;
  END;
  
CALL SAMPLE_UNIT_INSERT(NULL,129);
CALL SAMPLE_UNIT_INSERT(NULL,124);
CALL SAMPLE_UNIT_INSERT(NULL,125);
CALL SAMPLE_UNIT_INSERT(NULL,127);

SELECT*FROM SAMPLE_UNIT;

DROP PROCEDURE IF EXISTS SAMPLE_UNIT_UPDATE;
CREATE PROCEDURE SAMPLE_UNIT_UPDATE(IN UID INTEGER, IN UNO INTEGER)
    BEGIN 
      UPDATE SAMPLE_UNIT SET UNIT_NO= UNO 
      WHERE UNIT_ID = UID;
      SELECT * FROM SAMPLE_UNIT WHERE UNIT_NO= UNO;
      SELECT*FROM SAMPLE_UNIT;
    END;

CALL SAMPLE_UNIT_UPDATE(3,121);


-- 2. CREATE, INSERT, UPDATE SP FOR ROOM_TYPE:

DROP PROCEDURE IF EXISTS ROOM_CREATE;
CREATE PROCEDURE ROOM_CREATE()
  BEGIN 
    DROP TABLE IF EXISTS ROOM;
    CREATE TABLE ROOM (
    ROOM_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
    ROOM_TYPE CHAR(20) NOT NULL );
  END;

CALL ROOM_CREATE();

SELECT*FROM ROOM;

DROP PROCEDURE IF EXISTS ROOM_INSERT;
CREATE PROCEDURE ROOM_INSERT(IN RID INTEGER,IN RTYPE CHAR(20))
  BEGIN
  INSERT INTO ROOM(ROOM_ID, ROOM_TYPE) VALUES (RID, RTYPE);
  SELECT*FROM ROOM;
  END;
  
CALL ROOM_INSERT(NULL,'SINGLE');
CALL ROOM_INSERT(NULL,'DOUBLE');
CALL ROOM_INSERT(NULL,'LUXERY');
CALL ROOM_INSERT(NULL,'DELUX');

SELECT*FROM ROOM;

DROP PROCEDURE IF EXISTS ROOM_UPDATE;
CREATE PROCEDURE ROOM_UPDATE(IN RID INTEGER, IN RTYPE CHAR(20))
    BEGIN 
      UPDATE ROOM SET ROOM_TYPE= RTYPE 
      WHERE ROOM_ID = RID;
      SELECT * FROM ROOM WHERE ROOM_TYPE= RTYPE;
      SELECT*FROM ROOM;
    END;

CALL ROOM_UPDATE(4,'ULTRA');

-- 3.  CREATE, INSERT, UPDATE SP FOR SAMPLE UNIT DETAIL:

DROP PROCEDURE IF EXISTS SAMPLE_UNIT_DETAIL_CREATE;
CREATE PROCEDURE SAMPLE_UNIT_DETAIL_CREATE()
  BEGIN
    CREATE TABLE SAMPLE_UNIT_DETAIL(
    SUD_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
    UNIT_ID INTEGER NOT NULL,
    ROOM_ID INTEGER NOT NULL,
    SUD_START_DATE date NOT NULL,
    SUD_END_DATE date NOT NULL,
    CONSTRAINT SAMPLE_UNIT_DETAIL_1 FOREIGN KEY (UNIT_ID) REFERENCES SAMPLE_UNIT (UNIT_ID),
    CONSTRAINT SAMPLE_UNIT_DETAIL_2 FOREIGN KEY (ROOM_ID) REFERENCES ROOM(ROOM_ID)
    );
  END;
 
 CALL SAMPLE_UNIT_DETAIL_CREATE;
 
 SELECT*FROM SAMPLE_UNIT_DETAIL;
 
 DROP PROCEDURE IF EXISTS SAMPLE_UNIT_DETAIL_INSERT;
CREATE PROCEDURE SAMPLE_UNIT_DETAIL_INSERT(IN SID INTEGER, IN UID INTEGER, IN RID INTEGER, SSD DATE , SED DATE)
  BEGIN
    INSERT INTO SAMPLE_UNIT_DETAIL(
    SUD_ID,
    UNIT_ID,
    ROOM_ID,
    SUD_START_DATE,
    SUD_END_DATE)
    VALUES (SID, (select UNIT_ID FROM sample_unit WHERE UNIT_ID= UID),(SELECT ROOM_ID FROM room WHERE ROOM_ID= RID),SSD,SED);
  END;
 
 CALL SAMPLE_UNIT_DETAIL_INSERT(NULL,1,2,'2014-03-04','2014-04-02');
 
 CALL SAMPLE_UNIT_DETAIL_INSERT(NULL,3,3,'2014-03-04','2014-04-02');
 
 CALL SAMPLE_UNIT_DETAIL_INSERT(NULL,4,4,'2014-03-04','2014-04-02');
 
 CALL SAMPLE_UNIT_DETAIL_INSERT(NULL,5,2,'2014-03-04','2014-04-02');
 
 SELECT*FROM SAMPLE_UNIT_DETAIL
 
 DROP PROCEDURE IF EXISTS SAMPLE_UNIT_DETAIL_UPDATE;
CREATE PROCEDURE SAMPLE_UNIT_DETAIL_UPDATE(IN SID INTEGER, IN UID INTEGER, IN RID INTEGER, SSD DATE , SED DATE)
  BEGIN
    UPDATE SAMPLE_UNIT_DETAIL SET UNIT_ID=UID, ROOM_ID=RID, SUD_START_DATE=SSD, SUD_END_DATE=SED
    WHERE SUD_ID=SID;
    SELECT*FROM SAMPLE_UNIT_DETAIL WHERE SUD_ID=SID;
    SELECT*FROM SAMPLE_UNIT_DETAIL;
  END;
 
 CALL SAMPLE_UNIT_DETAIL_UPDATE(1,4,3,'2014-03-04','2014-04-03')
 
 SELECT*FROM SAMPLE_UNIT_DETAIL  
 
UACD_ID
UNIT_ID
UACD_ACC_NO
UACD_ACC_NAME
UACD_BANK_CODE
UACD_BRANCH_CODE
UACD_BANK_ADDRESS


DROP PROCEDURE IF EXISTS UNIT_ACCOUNT_DETAILS_ALL;
CREATE PROCEDURE UNIT_ACCOUNT_DETAILS_ALL(
  IN UNITNO INTEGER,
  IN UACDACCNO INTEGER,
  IN UACDACCNAME VARCHAR(20),
  IN UACDBANKCODE VARCHAR(20),
  IN UACDBRANCHCODE VARCHAR(20),
  IN UACDBANKADDRESS VARCHAR(30))
  BEGIN
    -- INSERT
      IF(UACDACCNO IS NOT NULL OR UACDACCNAME IS NOT NULL OR UACDBANKCODE IS NOT NULL OR UACDBRANCHCODE IS NOT NULL OR UACDBANKADDRESS IS NOT NULL)THEN
        IF NOT EXISTS (SELECT UNIT_ID FROM UNIT_ACCOUNT_DETAILS WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO))THEN
          INSERT INTO UNIT_ACCOUNT_DETAILS(
          UNIT_ID,
          UACD_ACC_NO,
          UACD_ACC_NAME,
          UACD_BANK_CODE,
          UACD_BRANCH_CODE,
          UACD_BANK_ADDRESS) 
          VALUES ((SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO),
          UACDACCNO,
          UACDACCNAME,
          UACDBANKCODE,
          UACDBRANCHCODE,
          UACDBANKADDRESS);
        END IF;
      END IF;
    -- UPDATE
      IF(UACDACCNO IS NOT NULL OR UACDACCNAME IS NOT NULL OR UACDBANKCODE IS NOT NULL OR UACDBRANCHCODE IS NOT NULL OR UACDBANKADDRESS IS NOT NULL)THEN
        IF EXISTS (SELECT UNIT_ID FROM UNIT_ACCOUNT_DETAILS WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO))THEN
          UPDATE UNIT_ACCOUNT_DETAILS
          SET UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO),
          UACD_ACC_NO=UACDACCNO,
          UACD_ACC_NAME=UACDACCNAME,
          UACD_BANK_CODE=UACDBANKCODE,
          UACD_BRANCH_CODE=UACDBRANCHCODE,
          UACD_BANK_ADDRESS=UACDBANKADDRESS WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO);
          SELECT*FROM UNIT_ACCOUNT_DETAILS WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO);
        END IF;
      END IF;
    -- DELETE
      IF ((UACDACCNO IS NULL OR UACDACCNO='')
        AND (UACDACCNAME IS NULL OR UACDACCNAME='')
        AND (UACDBANKCODE IS NULL OR UACDBANKCODE='')
        AND (UACDBRANCHCODE IS NULL OR UACDBRANCHCODE='')
        AND (UACDBANKADDRESS IS NULL OR UACDBANKADDRESS=''))THEN
        DELETE FROM UNIT_ACCOUNT_DETAILS WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO);
      END IF;
  END;
   
CALL UNIT_ACCOUNT_DETAILS_ALL(401,885743,'RAM','UBISF','LKJL','DELHI');
 
SELECT *FROM UNIT_ACCOUNT_DETAILS;

