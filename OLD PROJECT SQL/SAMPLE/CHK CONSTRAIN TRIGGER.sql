DROP PROCEDURE IF EXISTS SP_TRG_CUSTOMER_LP_DETAILS;
CREATE PROCEDURE SP_TRG_CUSTOMER_LP_DETAILS(
IN NEWCUSTOMERID INTEGER,
IN NEWRECVER INTEGER,
IN NEWUASDID INTEGER,
IN NEWSTARTDATE DATE,
IN NEWENDDATE DATE,
IN PROCESS TEXT)
BEGIN
DECLARE UNITID INTEGER;
DECLARE UNITSTARTDATE DATE;
DECLARE ENDDATE DATE;
DECLARE UNITENDDATE DATE;
DECLARE MESSAGE_TEXT VARCHAR(50);
SET UNITID=(SELECT UNIT_ID FROM CUSTOMER_ENTRY_DETAILS WHERE CUSTOMER_ID=NEWCUSTOMERID AND CED_REC_VER=NEWRECVER);
SET UNITSTARTDATE=(SELECT UD_START_DATE FROM UNIT_DETAILS WHERE UNIT_ID=UNITID);
SET ENDDATE=(SELECT UD_END_DATE FROM UNIT_DETAILS WHERE UNIT_ID=UNITID);
SET UNITENDDATE=(SELECT DATE_SUB(ENDDATE,INTERVAL 1 DAY));
    IF(PROCESS = 'INSERT') OR (PROCESS='UPDATE') THEN
        IF NEWUASDID IS NOT NULL THEN
            IF NOT EXISTS(SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ID=NEWUASDID) THEN
                SIGNAL SQLSTATE '45000'
                SET MESSAGE_TEXT = 'UASD_ID NOT IN UNIT_ACCESS_STAMP_DETAILS';
            END IF;
        END IF;
        IF NEWENDDATE<NEWSTARTDATE THEN
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'ENDDATE SHOULD GREATER THAN STARTDATE';
        END IF;    
        IF NEWSTARTDATE<STARTDATE THEN
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'STARTDATE SHOULD GREATER THAN UNIT STARTDATE';
        END IF;    
        IF NEWENDDATE>UNITENDDATE THEN
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'ENDDATE SHOULD LESS THAN UNIT ENDDATE';
        END IF;    
    END IF;
    -- IF(PROCESS = 'UPDATE') THEN
        -- IF NEWUASDID IS NOT NULL THEN

            -- IF NOT EXISTS(SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ID=NEWUASDID) THEN
                -- SIGNAL SQLSTATE '45000'
                -- SET MESSAGE_TEXT = 'UASD_ID NOT IN UNIT_ACCESS_STAMP_DETAILS';
            -- END IF;
        -- END IF;
        -- IF NEWENDDATE<NEWSTARTDATE THEN
            -- SIGNAL SQLSTATE '45000'
            -- SET MESSAGE_TEXT = 'ENDDATE SHOULD GREATER THAN STARTDATE';
        -- END IF;    
        -- IF NEWSTARTDATE<STARTDATE THEN
            -- SIGNAL SQLSTATE '45000'
            -- SET MESSAGE_TEXT = 'STARTDATE SHOULD GREATER THAN UNIT STARTDATE';
        -- END IF;    
        -- IF NEWENDDATE>UNITENDDATE THEN
            -- SIGNAL SQLSTATE '45000'
            -- SET MESSAGE_TEXT = 'ENDDATE SHOULD LESS THAN UNIT ENDDATE';
        -- END IF;    
    -- END IF;
END;


DROP TRIGGER IF EXISTS TRG_CUSTOMER_LP_DETAILS_INSERT;
CREATE TRIGGER TRG_CUSTOMER_LP_DETAILS_INSERT
BEFORE INSERT ON CUSTOMER_LP_DETAILS
FOR EACH ROW
BEGIN
    CALL SP_TRG_CUSTOMER_LP_DETAILS(NEW.CUSTOMER_ID,NEW.CED_REC_VER,NEW.UASD_ID,NEW.CLP_STARTDATE,NEW.CLP_ENDDATE,'INSERT');
END;

DROP TRIGGER IF EXISTS TRG_CUSTOMER_LP_DETAILS_UPDATE;
CREATE TRIGGER TRG_CUSTOMER_LP_DETAILS_UPDATE
BEFORE UPDATE ON CUSTOMER_LP_DETAILS
FOR EACH ROW
BEGIN
    CALL SP_TRG_CUSTOMER_LP_DETAILS(NEW.CUSTOMER_ID,NEW.CED_REC_VER,NEW.UASD_ID,NEW.CLP_STARTDATE,NEW.CLP_ENDDATE,'PAYMENT');
END;