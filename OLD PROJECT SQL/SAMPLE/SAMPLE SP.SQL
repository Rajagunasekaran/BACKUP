DROP PROCEDURE IF EXISTS SP_PAYMENT_UPDATE_REC_VERSION;
CREATE PROCEDURE SP_PAYMENT_UPDATE_REC_VERSION(IN DESTINATIONSCHEMA VARCHAR(50),IN PART INTEGER,IN MINCUSTOMERID INTEGER,IN MAXCUSTOMERID INTEGER)
BEGIN
DECLARE MINID INTEGER;
DECLARE MAXID INTEGER;
DECLARE RECVER INTEGER;
DECLARE FORPERIOD DATE;
DECLARE STARTDATE DATE;
DECLARE ENDDATE DATE;
DECLARE EXRECVER INTEGER;
DECLARE MINPAYMENTID INTEGER;
DECLARE MAXPAYMENTID INTEGER;
DECLARE PRETERMINATEDATE DATE;
DECLARE PPID INTEGER;
DECLARE EXTENSIONFLAG CHAR(1);
DECLARE UNITID INTEGER;
DECLARE CUSTOMERID INTEGER;
DECLARE PDAMOUNT DECIMAL(7,2);
DECLARE PAIDDATE DATE;
DECLARE HIGHLIGHTFLAG CHAR(1);
DECLARE COMMENTS TEXT;
DECLARE USERSTAMP VARCHAR(50);
DECLARE PREUNITID INTEGER;
DECLARE NEXTUNITID INTEGER;
DECLARE PAYMENT_TIMESTAMP TIMESTAMP;
DECLARE RECHECKINFLAG CHAR(1);
DECLARE CHECKRECVER INTEGER;
DECLARE SAMEUNITID INTEGER;
DECLARE PAYMENTID INTEGER;
DECLARE AMOUNTCOUNT INTEGER;
DECLARE LP_STARTDATE DATE;
DECLARE CLEANINGFEEID INTEGER;
DECLARE LP_MONTH INTEGER;
DECLARE LP_YEAR INTEGER;
DECLARE LP_FUTURE_MONTH DATE;
DECLARE STARTTIME TIME;
DECLARE ENDTIME TIME;
DECLARE DURATION TIME;
SET STARTTIME=(SELECT CURTIME());
IF PART=1 THEN
DROP TABLE IF EXISTS TEMP_PAYMENT_ENTRY_DETAILS;
CREATE TABLE TEMP_PAYMENT_ENTRY_DETAILS(
ID INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
UNIT_ID INTEGER,
CUSTOMER_ID INTEGER,
PP_ID INTEGER,
CED_REC_VER INTEGER,
PD_AMOUNT DECIMAL(7,2),
PD_FOR_PERIOD DATE,
PD_PAID_DATE DATE,
PD_HIGHLIGHT_FLAG CHAR(1),
PD_COMMENTS TEXT,
PD_USERSTAMP VARCHAR(50),
PD_TIMESTAMP VARCHAR(50));
SET @INSERT_TEMP_PAYMENT_ENTRY=(SELECT CONCAT('INSERT INTO TEMP_PAYMENT_ENTRY_DETAILS(UNIT_ID,CUSTOMER_ID,PP_ID,CED_REC_VER,PD_AMOUNT,
PD_FOR_PERIOD,PD_PAID_DATE,PD_HIGHLIGHT_FLAG,PD_COMMENTS,PD_USERSTAMP,PD_TIMESTAMP)
SELECT UNIT_ID,CUSTOMER_ID,PP_ID,CED_REC_VER,PD_AMOUNT,PD_FOR_PERIOD,PD_PAID_DATE,PD_HIGHLIGHT_FLAG,PD_COMMENTS,PD_USERSTAMP,PD_TIMESTAMP FROM ',DESTINATIONSCHEMA,'.TEMP_PAYMENT_DETAILS ORDER BY CUSTOMER_ID,PP_ID,PD_FOR_PERIOD'));
PREPARE INSERT_TEMP_PAYMENT_ENTRY_STMT FROM @INSERT_TEMP_PAYMENT_ENTRY;
EXECUTE INSERT_TEMP_PAYMENT_ENTRY_STMT;
END IF;
UPDATE TEMP_PAYMENT_ENTRY_DETAILS SET CED_REC_VER=NULL WHERE CUSTOMER_ID BETWEEN MINCUSTOMERID AND MAXCUSTOMERID;
WHILE MINCUSTOMERID<=MAXCUSTOMERID DO
	SET MINID=(SELECT MIN(ID) FROM TEMP_PAYMENT_ENTRY_DETAILS WHERE CUSTOMER_ID=MINCUSTOMERID);
	SET MAXID=(SELECT MAX(ID) FROM TEMP_PAYMENT_ENTRY_DETAILS WHERE CUSTOMER_ID=MINCUSTOMERID);
		WHILE MINID<=MAXID DO
			DROP TABLE IF EXISTS TEMP_PAYMENT_CUSTOMER;
			CREATE TABLE TEMP_PAYMENT_CUSTOMER(ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,CUSTOMER_ID INTEGER,
			CED_REC_VER INTEGER,UNIT_ID INTEGER,CED_STARTDATE DATE,CED_ENDDATE DATE,CED_PRETERMINATE_DATE DATE,CED_EXTENSION CHAR(1),CED_RECHECKIN CHAR(1));
			SET @INSERT_PAYMENT_CUSTOMER=(SELECT CONCAT('INSERT INTO TEMP_PAYMENT_CUSTOMER(CUSTOMER_ID,CED_REC_VER,UNIT_ID,CED_STARTDATE,CED_ENDDATE,CED_PRETERMINATE_DATE,CED_EXTENSION,CED_RECHECKIN) 
			SELECT CUSTOMER_ID,CED_REC_VER,UNIT_ID,CED_STARTDATE,CED_ENDDATE,CED_PRETERMINATE_DATE,CED_EXTENSION,CED_RECHECKIN FROM ',DESTINATIONSCHEMA,'.TEMP_CUSTOMER_ENTRY_DETAILS WHERE CUSTOMER_ID=',MINCUSTOMERID,' AND IF(CED_PRETERMINATE_DATE IS NOT NULL,CED_PRETERMINATE_DATE>CED_STARTDATE,CED_ENDDATE>CED_STARTDATE)'));
			PREPARE INSERT_PAYMENT_CUSTOMER_STMT FROM @INSERT_PAYMENT_CUSTOMER;
			EXECUTE INSERT_PAYMENT_CUSTOMER_STMT;
			UPDATE TEMP_PAYMENT_CUSTOMER SET CED_STARTDATE=(SELECT ADDDATE(LAST_DAY(SUBDATE(CED_STARTDATE, INTERVAL 1 MONTH)), 1));
			SET MINPAYMENTID=(SELECT MIN(ID) FROM TEMP_PAYMENT_CUSTOMER);
			SET MAXPAYMENTID=(SELECT MAX(ID) FROM TEMP_PAYMENT_CUSTOMER);
				WHILE MINPAYMENTID<=MAXPAYMENTID DO
					SET LP_STARTDATE=(SELECT CED_STARTDATE FROM TEMP_PAYMENT_CUSTOMER WHERE ID=MINPAYMENTID);
					SET LP_MONTH=(SELECT MONTH(LP_STARTDATE));
					IF LP_MONTH=12 THEN
					SET LP_MONTH=1;
					SET LP_YEAR=(SELECT YEAR(LP_STARTDATE)+1);
					ELSE
					SET LP_MONTH=(SELECT MONTH(LP_STARTDATE)+1);
					SET LP_YEAR=(SELECT YEAR(LP_STARTDATE));
					END IF;
					SET LP_FUTURE_MONTH=(SELECT CONCAT(LP_YEAR,'-',LP_MONTH,'-','01'));
					UPDATE TEMP_PAYMENT_CUSTOMER SET CED_STARTDATE=(SELECT ADDDATE(LAST_DAY(SUBDATE(CED_STARTDATE, INTERVAL 1 MONTH)), 1)) WHERE ID=MINPAYMENTID;
					SET FORPERIOD=(SELECT PD_FOR_PERIOD FROM TEMP_PAYMENT_ENTRY_DETAILS WHERE ID=MINID);
					SET PPID=(SELECT PP_ID FROM TEMP_PAYMENT_ENTRY_DETAILS WHERE ID=MINID);
					SET STARTDATE=(SELECT CED_STARTDATE FROM TEMP_PAYMENT_CUSTOMER WHERE ID=MINPAYMENTID);
					SET PRETERMINATEDATE=(SELECT CED_PRETERMINATE_DATE FROM TEMP_PAYMENT_CUSTOMER WHERE ID=MINPAYMENTID);
					SET EXTENSIONFLAG=(SELECT CED_EXTENSION FROM TEMP_PAYMENT_CUSTOMER WHERE ID=MINPAYMENTID);
					SET RECHECKINFLAG=(SELECT CED_RECHECKIN FROM TEMP_PAYMENT_CUSTOMER WHERE ID=MINPAYMENTID);
						IF PRETERMINATEDATE IS NOT NULL THEN
							SET ENDDATE=(SELECT CED_PRETERMINATE_DATE FROM TEMP_PAYMENT_CUSTOMER WHERE ID=MINPAYMENTID);
						ELSE
							SET ENDDATE=(SELECT CED_ENDDATE FROM TEMP_PAYMENT_CUSTOMER WHERE ID=MINPAYMENTID);
						END IF;
						IF FORPERIOD BETWEEN STARTDATE AND ENDDATE THEN
							SET RECVER=(SELECT CED_REC_VER FROM TEMP_PAYMENT_CUSTOMER WHERE ID=MINPAYMENTID);
								SET PREUNITID=(SELECT UNIT_ID FROM TEMP_PAYMENT_CUSTOMER WHERE CUSTOMER_ID=MINCUSTOMERID AND CED_REC_VER=RECVER);
								SET NEXTUNITID=(SELECT UNIT_ID FROM TEMP_PAYMENT_CUSTOMER WHERE CUSTOMER_ID=MINCUSTOMERID AND CED_REC_VER=(RECVER-1));
								IF (EXTENSIONFLAG IS NOT NULL) AND (PPID=1 OR PPID=4) AND (FORPERIOD=STARTDATE) AND ((PREUNITID=NEXTUNITID)OR(PREUNITID!=NEXTUNITID)) THEN
									IF NOT EXISTS(SELECT PD_FOR_PERIOD FROM TEMP_PAYMENT_ENTRY_DETAILS WHERE CUSTOMER_ID=MINCUSTOMERID AND PD_FOR_PERIOD=FORPERIOD AND PP_ID=1 AND ID>MINID)THEN
										IF NOT EXISTS(SELECT CED_REC_VER FROM TEMP_PAYMENT_ENTRY_DETAILS WHERE CUSTOMER_ID=MINCUSTOMERID AND PD_FOR_PERIOD=FORPERIOD AND PP_ID=1 AND CED_REC_VER=RECVER)THEN
											IF LP_STARTDATE<LP_FUTURE_MONTH THEN
											IF PPID=1 THEN
													IF PREUNITID!=NEXTUNITID THEN
														SET UNITID=(SELECT UNIT_ID FROM TEMP_PAYMENT_CUSTOMER WHERE CUSTOMER_ID=MINCUSTOMERID AND CED_REC_VER=RECVER);
													ELSE
														SET UNITID=(SELECT DISTINCT UNIT_ID FROM TEMP_PAYMENT_ENTRY_DETAILS WHERE CUSTOMER_ID=MINCUSTOMERID AND CED_REC_VER=(RECVER-1)AND PP_ID=1 AND PD_FOR_PERIOD=FORPERIOD);
													END IF;											
											SET CUSTOMERID=(SELECT DISTINCT CUSTOMER_ID FROM TEMP_PAYMENT_ENTRY_DETAILS WHERE CUSTOMER_ID=MINCUSTOMERID AND CED_REC_VER=(RECVER-1)AND PP_ID=1 AND PD_FOR_PERIOD=FORPERIOD);
											SET PDAMOUNT=(SELECT DISTINCT PD_AMOUNT FROM TEMP_PAYMENT_ENTRY_DETAILS WHERE CUSTOMER_ID=MINCUSTOMERID AND CED_REC_VER=(RECVER-1)AND PP_ID=1 AND PD_FOR_PERIOD=FORPERIOD);
											SET PAIDDATE=(SELECT DISTINCT PD_PAID_DATE FROM TEMP_PAYMENT_ENTRY_DETAILS WHERE CUSTOMER_ID=MINCUSTOMERID AND CED_REC_VER=(RECVER-1)AND PP_ID=1 AND PD_FOR_PERIOD=FORPERIOD);
											SET HIGHLIGHTFLAG=(SELECT DISTINCT PD_HIGHLIGHT_FLAG FROM TEMP_PAYMENT_ENTRY_DETAILS WHERE CUSTOMER_ID=MINCUSTOMERID AND CED_REC_VER=(RECVER-1)AND PP_ID=1 AND PD_FOR_PERIOD=FORPERIOD);
											SET COMMENTS=(SELECT DISTINCT PD_COMMENTS FROM TEMP_PAYMENT_ENTRY_DETAILS WHERE CUSTOMER_ID=MINCUSTOMERID AND CED_REC_VER=(RECVER-1)AND PP_ID=1 AND PD_FOR_PERIOD=FORPERIOD);
											SET USERSTAMP=(SELECT DISTINCT PD_USERSTAMP FROM TEMP_PAYMENT_ENTRY_DETAILS WHERE CUSTOMER_ID=MINCUSTOMERID AND CED_REC_VER=(RECVER-1)AND PP_ID=1 AND PD_FOR_PERIOD=FORPERIOD);
											SET PAYMENT_TIMESTAMP=(SELECT DISTINCT PD_TIMESTAMP FROM TEMP_PAYMENT_ENTRY_DETAILS WHERE CUSTOMER_ID=MINCUSTOMERID AND CED_REC_VER=(RECVER-1)AND PP_ID=1 AND PD_FOR_PERIOD=FORPERIOD);
											INSERT INTO TEMP_PAYMENT_ENTRY_DETAILS(UNIT_ID,CUSTOMER_ID,PP_ID,CED_REC_VER,PD_AMOUNT,PD_FOR_PERIOD,PD_PAID_DATE,PD_HIGHLIGHT_FLAG,PD_COMMENTS,PD_USERSTAMP,PD_TIMESTAMP)
											VALUES(UNITID,CUSTOMERID,1,RECVER,PDAMOUNT,FORPERIOD,PAIDDATE,HIGHLIGHTFLAG,COMMENTS,USERSTAMP,PAYMENT_TIMESTAMP);
											SET AMOUNTCOUNT=(SELECT COUNT(*) FROM TEMP_PAYMENT_ENTRY_DETAILS WHERE PD_FOR_PERIOD=FORPERIOD AND CUSTOMER_ID=MINCUSTOMERID AND PP_ID=1);
											UPDATE TEMP_PAYMENT_ENTRY_DETAILS SET PD_AMOUNT=(PD_AMOUNT/AMOUNTCOUNT) WHERE CUSTOMER_ID=MINCUSTOMERID AND PP_ID=1 AND PD_FOR_PERIOD=FORPERIOD;
											END IF;
											IF PPID=4 THEN
												IF PREUNITID!=NEXTUNITID THEN
													SET UNITID=(SELECT UNIT_ID FROM TEMP_PAYMENT_CUSTOMER WHERE CUSTOMER_ID=MINCUSTOMERID AND CED_REC_VER=RECVER);
												ELSE
												SET UNITID=(SELECT DISTINCT UNIT_ID FROM TEMP_PAYMENT_ENTRY_DETAILS WHERE CUSTOMER_ID=MINCUSTOMERID AND CED_REC_VER=(RECVER-1)AND PP_ID=4 AND PD_FOR_PERIOD=FORPERIOD);
												END IF;												SET CUSTOMERID=(SELECT DISTINCT CUSTOMER_ID FROM TEMP_PAYMENT_ENTRY_DETAILS WHERE CUSTOMER_ID=MINCUSTOMERID AND CED_REC_VER=(RECVER-1)AND PP_ID=4 AND PD_FOR_PERIOD=FORPERIOD);
												SET PDAMOUNT=(SELECT DISTINCT PD_AMOUNT FROM TEMP_PAYMENT_ENTRY_DETAILS WHERE CUSTOMER_ID=MINCUSTOMERID AND CED_REC_VER=(RECVER-1)AND PP_ID=4 AND PD_FOR_PERIOD=FORPERIOD);
												SET PAIDDATE=(SELECT DISTINCT PD_PAID_DATE FROM TEMP_PAYMENT_ENTRY_DETAILS WHERE CUSTOMER_ID=MINCUSTOMERID AND CED_REC_VER=(RECVER-1)AND PP_ID=4 AND PD_FOR_PERIOD=FORPERIOD);
												SET HIGHLIGHTFLAG=(SELECT DISTINCT PD_HIGHLIGHT_FLAG FROM TEMP_PAYMENT_ENTRY_DETAILS WHERE CUSTOMER_ID=MINCUSTOMERID AND CED_REC_VER=(RECVER-1)AND PP_ID=4 AND PD_FOR_PERIOD=FORPERIOD);
												SET COMMENTS=(SELECT DISTINCT PD_COMMENTS FROM TEMP_PAYMENT_ENTRY_DETAILS WHERE CUSTOMER_ID=MINCUSTOMERID AND CED_REC_VER=(RECVER-1)AND PP_ID=4 AND PD_FOR_PERIOD=FORPERIOD);
												SET USERSTAMP=(SELECT DISTINCT PD_USERSTAMP FROM TEMP_PAYMENT_ENTRY_DETAILS WHERE CUSTOMER_ID=MINCUSTOMERID AND CED_REC_VER=(RECVER-1)AND PP_ID=4 AND PD_FOR_PERIOD=FORPERIOD);
												SET PAYMENT_TIMESTAMP=(SELECT PD_TIMESTAMP FROM TEMP_PAYMENT_ENTRY_DETAILS WHERE CUSTOMER_ID=MINCUSTOMERID AND CED_REC_VER=(RECVER-1)AND PP_ID=4 AND PD_FOR_PERIOD=FORPERIOD);
												INSERT INTO TEMP_PAYMENT_ENTRY_DETAILS(UNIT_ID,CUSTOMER_ID,PP_ID,CED_REC_VER,PD_AMOUNT,PD_FOR_PERIOD,PD_PAID_DATE,PD_HIGHLIGHT_FLAG,PD_COMMENTS,PD_USERSTAMP,PD_TIMESTAMP)
												VALUE(UNITID,CUSTOMERID,4,RECVER,PDAMOUNT,FORPERIOD,PAIDDATE,HIGHLIGHTFLAG,COMMENTS,USERSTAMP,PAYMENT_TIMESTAMP);
												SET AMOUNTCOUNT=(SELECT COUNT(*) FROM TEMP_PAYMENT_ENTRY_DETAILS WHERE PD_FOR_PERIOD=FORPERIOD AND CUSTOMER_ID=MINCUSTOMERID AND PP_ID=4);
												UPDATE TEMP_PAYMENT_ENTRY_DETAILS SET PD_AMOUNT=(PD_AMOUNT/AMOUNTCOUNT) WHERE CUSTOMER_ID=MINCUSTOMERID AND PP_ID=4 AND PD_FOR_PERIOD=FORPERIOD;
											END IF;
										END IF;
									END IF;
									ELSE
										SET PAYMENTID=(SELECT MIN(ID) FROM TEMP_PAYMENT_ENTRY_DETAILS WHERE CUSTOMER_ID=MINCUSTOMERID AND PD_FOR_PERIOD=FORPERIOD AND PP_ID=1 AND ID>MINID AND CED_REC_VER IS NULL);
										IF PAYMENTID IS NOT NULL THEN
											UPDATE TEMP_PAYMENT_ENTRY_DETAILS SET CED_REC_VER=RECVER WHERE ID=PAYMENTID;
										END IF;
									END IF;
								ELSE	
									SET CHECKRECVER=(SELECT CED_REC_VER FROM TEMP_PAYMENT_ENTRY_DETAILS WHERE ID=MINID);
										IF CHECKRECVER IS NULL THEN
											UPDATE TEMP_PAYMENT_ENTRY_DETAILS SET CED_REC_VER=RECVER WHERE ID=MINID;
										END IF;
									IF(RECHECKINFLAG IS NOT NULL)THEN
											UPDATE TEMP_PAYMENT_ENTRY_DETAILS SET CED_REC_VER=RECVER WHERE ID=MINID;
											SET SAMEUNITID=(SELECT ID FROM TEMP_PAYMENT_ENTRY_DETAILS WHERE PD_FOR_PERIOD=FORPERIOD AND PP_ID=1 AND ID!=MINID AND CED_REC_VER=RECVER AND CUSTOMER_ID=MINCUSTOMERID);
											IF SAMEUNITID IS NOT NULL THEN
												UPDATE TEMP_PAYMENT_ENTRY_DETAILS SET CED_REC_VER=(RECVER-1) WHERE ID=SAMEUNITID;
											END IF;
									END IF;
									END IF;
								END IF;
						SET MINPAYMENTID=MINPAYMENTID+1;
					END WHILE;
		SET MINID=MINID+1;
		END WHILE;
	SET MINCUSTOMERID=MINCUSTOMERID+1;
END WHILE;
DROP TABLE IF EXISTS TEMP_PAYMENT_CUSTOMER;
SET ENDTIME=(SELECT CURTIME());
SET DURATION=(SELECT TIMEDIFF(ENDTIME,STARTTIME));
IF PART=1 THEN
DROP TABLE IF EXISTS TEMP_DURATION_PAYMENT_PART4;
CREATE TABLE TEMP_DURATION_PAYMENT_PART4(ID INTEGER PRIMARY KEY AUTO_INCREMENT,SPLITTING_DURATION4 TIME);
INSERT INTO TEMP_DURATION_PAYMENT_PART4(SPLITTING_DURATION4)VALUES(DURATION);
ELSE
INSERT INTO TEMP_DURATION_PAYMENT_PART4(SPLITTING_DURATION4)VALUES(DURATION);
END IF;
END;
							