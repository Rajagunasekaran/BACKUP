-- VER:0.3 --SDATE:08/08/2014 --EDATE:08/08/2014 --ISSUE:831 --DESC:MODIFIED PATCH AND SPLITTED THE SP INTO TWO PARTS. DONE BY: RAJA
-- VER:0.2 --SDATE:31/07/2014 --EDATE:31/07/2014 --ISSUE:831 --DESC:MODIFIED PATCH FOR ACCESS_CARD_DETAILS 
-- VER:0.1 --SDATE:22/07/2014 --EDATE:25/07/2014 --ISSUE:831 --DESC:PATCH FOR ACCESS_CARD_DETAILS --DONEBY:SKL AND RAJA
DROP PROCEDURE IF EXISTS SP_UPDATE_CUSTOMER_ACCESS_CARD_DETAILS;
CREATE PROCEDURE SP_UPDATE_CUSTOMER_ACCESS_CARD_DETAILS(
IN FILENAME TEXT,
IN USERSTAMP VARCHAR(50),
OUT SUCCESS_MESSAGE TEXT)
BEGIN
	--  VARIABLE DECLARATION
	DECLARE FAILURE_ECN_DATA TEXT;
	DECLARE FAIL_ECNDATA TEXT;
	DECLARE SUCCESS_ECNDATA TEXT;
	DECLARE FAILURE_ECNDATA TEXT;
	DECLARE SUCCESSECNDATA TEXT;
	DECLARE FAILUREECNDATA TEXT;
	DECLARE PATCHFILENAME VARCHAR(100);
	DECLARE PHSTATUS TINYINT;
	--  QUERY FOR ROLLBACK COMMAND
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
		ROLLBACK;
		INSERT INTO PATCH_HISTORY(PO_ID,PH_FILE_NAME,PH_STATUS,ULD_ID) VALUES (6,FILENAME,0,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=USERSTAMP));
	END;
	START TRANSACTION;
	SET FOREIGN_KEY_CHECKS = 0;
	SET AUTOCOMMIT=0;
	--  QUERY FOR GET ERROR MESSGAE FROM ERROR_MESSAGE_CONFIGURATION TABLE
	SET SUCCESS_ECNDATA =  (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=469);
	SET FAILURE_ECNDATA =  (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=470);
	SET FAILURE_ECN_DATA = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=473);
	--  QUERY FOR REPLACE [FILENAME]
	SET SUCCESSECNDATA = (SELECT REPLACE(SUCCESS_ECNDATA,'[FILENAME]',FILENAME));
	SET FAILUREECNDATA = (SELECT REPLACE(FAILURE_ECNDATA,'[FILENAME]',FILENAME));
	SET FAIL_ECNDATA = (SELECT REPLACE(FAILURE_ECN_DATA,'[FILENAME]',FILENAME));
	--  QUERY FOR CHECK THE PASSING FILE NAME EXISTS IN PATCH_HISTORY TABLE
	IF EXISTS(SELECT PH_FILE_NAME FROM PATCH_HISTORY WHERE PH_FILE_NAME = FILENAME AND PH_STATUS = 1) THEN
		SET SUCCESS_MESSAGE = FAILUREECNDATA;
	END IF;
	--  QUERY FOR CHECK THE PASSING FILE NAME NOT EXISTS IN PATCH_HISTORY TABLE
	SET PATCHFILENAME = (SELECT PH_FILE_NAME FROM PATCH_HISTORY WHERE PH_FILE_NAME = FILENAME);
	SET PHSTATUS = (SELECT PH_STATUS FROM PATCH_HISTORY WHERE PH_FILE_NAME = FILENAME AND PH_STATUS = 0);
	IF ((PATCHFILENAME IS NOT NULL) AND (PHSTATUS = 0)) OR (PATCHFILENAME IS NULL)THEN
  
		CALL SP_UPDATE_CUSTOMER_ACCESS_CARD_DETAILS_PART_1(USERSTAMP);
		CALL SP_UPDATE_CUSTOMER_ACCESS_CARD_DETAILS_PART_2(USERSTAMP);
	
		-- QUERY FOR INSERT VALUES IN PATCH_HISTORY
		INSERT INTO PATCH_HISTORY(PO_ID,PH_FILE_NAME,PH_STATUS,ULD_ID) VALUES (6,FILENAME,1,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=USERSTAMP));
		SET SUCCESS_MESSAGE = SUCCESSECNDATA;
		SET FOREIGN_KEY_CHECKS = 1;
	END IF;
	COMMIT;
END;
/*
CALL SP_UPDATE_CUSTOMER_ACCESS_CARD_DETAILS('SP_UPDATE_CUSTOMER_ACCESS_CARD_DETAILS','expatsintegrated@gmail.com',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE;
SELECT * FROM PATCH_HISTORY;
TRUNCATE TICKLER_HISTORY;
TRUNCATE PATCH_HISTORY;
*/