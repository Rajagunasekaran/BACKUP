-- version 1.1 -- sdate:13/06/2014 -- edate:13/06/2014 -- issue:738 -- commentno:#27 -- desc:IMPLEMENTING TRIGGER CHANGES FOR NOT UPDATING ULD_ID,TIMESTAMP IN TICKLER_HISTORY BY: RAJA
-- version 1.0 -- sdate:12/06/2014 -- edate:12/06/2014 -- issue:738 -- commentno:#18 -- desc:IMPLEMENTING TRIGGER CHANGES FOR NOT UPDATING PRIMARY KEY IN TICKLER_HISTORY BY: RAJA
-- VERSION :0.9, TRACKER: 529, START DATE: 05-06-2014, END DATE: 05-06-2014, DESC: ADDED USERSTAMP AND TIMESTAMP OLD_VALUE IN TICKLER_HISTORY TABLE   DONE BY: DHIVYA.A
-- version:0.8 -- sdate:07/04/2014 -- edate:07/04/2014 -- issue:797 -- COMMENT NO:28-- desc:REPLACED TABLENAME AND HEADERNAME-- doneby:SASIKALA.D
-- version:0.7 -- sdate:26/02/2014 -- edate:26/02/2014 -- issue:529 -- commentno:132 -- done by:RL
-- version:0.6 -- sdate:10/02/2014 -- edate:10/02/2014 -- issue:529 -- desc:add comma after 1 header value is completed -- doneby:RL
-- version:0.5 -- sdate:07/02/2014 -- edate:07/02/2014 -- issue:738 -- desc:ADDED ONE CONDITION FOR NOT CREATING NULL ROW IN TICKLER_HISTORY -- doneby:RL
-- version 0.4 -- sd:08/11/2013/2013 end date:10/10/2013-- >issueno:636 -- >desc:changed variable name O as old_value and N as new_value and added comments
-- >doneby:dhivya -- ed:08/11/2013 -- issue:636 -- commentno:47 -- desc:trigger name changed by rl
-- version 0.3 -- >start date:07/10
-- > version 0.2 -- >date:02/08/2013 -- >issueno:529 -- >commentno:23 -- >desc:added one condition for null fields
-- >doneby:dhivya

-- after update on EMAIL_LIST  table this trigger will be executed
DROP TRIGGER IF EXISTS TRG_EMAIL_LIST_UPDATE;
CREATE TRIGGER TRG_EMAIL_LIST_UPDATE  
AFTER UPDATE ON EMAIL_LIST 
FOR EACH ROW
BEGIN 
-- declaration for old_value and new_value to store it in TICKLER_HISTORY table
DECLARE OLD_VALUE TEXT DEFAULT '';
DECLARE NEW_VALUE TEXT DEFAULT '';
IF ((OLD.EP_ID!= NEW.EP_ID) OR (OLD.EL_EMAIL_ID!= NEW.EL_EMAIL_ID)) THEN  
  SET OLD_VALUE = CONCAT(OLD_VALUE,'EL_ID=', OLD.EL_ID,','); 
END IF;
-- get the OLD VALUE & NEW_VALUE for EP_ID to store it in TICKLER_HISTORY table
IF (OLD.EP_ID!= NEW.EP_ID) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'EP_ID=', OLD.EP_ID,','); 
END IF;
IF (OLD.EP_ID!= NEW.EP_ID) THEN SET 
NEW_VALUE = CONCAT(NEW_VALUE,'EP_ID=', NEW.EP_ID,','); 
END IF;
-- get the OLD VALUE & NEW_VALUE for EL_EMAIL_ID to store it in TICKLER_HISTORY table
IF (OLD.EL_EMAIL_ID!= NEW.EL_EMAIL_ID) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'EL_EMAIL_ID=', OLD.EL_EMAIL_ID,','); 
END IF;
IF (OLD.EL_EMAIL_ID!= NEW.EL_EMAIL_ID) THEN SET 
NEW_VALUE = CONCAT(NEW_VALUE,'EL_EMAIL_ID=', NEW.EL_EMAIL_ID,','); 
END IF;
IF ((OLD.EP_ID!= NEW.EP_ID) OR (OLD.EL_EMAIL_ID!= NEW.EL_EMAIL_ID)) THEN
IF (OLD.ULD_ID!= NEW.ULD_ID) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'ULD_ID=', OLD.ULD_ID,','); 
END IF;
IF (OLD.EL_TIMESTAMP!= NEW.EL_TIMESTAMP) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'EL_TIMESTAMP=', OLD.EL_TIMESTAMP,','); 
END IF;
END IF;
-- inserting old_values and new_values in the TICKLER_HISTORY table with their corresponding TTIP_ID in TICKLER_TABID_PROFILE
IF (OLD_VALUE!='' AND NEW_VALUE!='') THEN
IF(OLD_VALUE != NEW_VALUE)THEN
SET OLD_VALUE = SUBSTRING(OLD_VALUE,1,CHAR_LENGTH(OLD_VALUE)-1);
SET NEW_VALUE = SUBSTRING(NEW_VALUE,1,CHAR_LENGTH(NEW_VALUE)-1);
INSERT INTO TICKLER_HISTORY
(ULD_ID,TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE)VALUES
((SELECT ULD_ID FROM EMAIL_LIST  WHERE EL_ID=NEW.EL_ID),
(SELECT TP_ID FROM TICKLER_PROFILE WHERE TP_TYPE='UPDATION'),
(SELECT TTIP_ID FROM TICKLER_TABID_PROFILE WHERE TTIP_DATA='EMAIL_LIST'),OLD_VALUE,NEW_VALUE);
END IF;
END IF;
END;
