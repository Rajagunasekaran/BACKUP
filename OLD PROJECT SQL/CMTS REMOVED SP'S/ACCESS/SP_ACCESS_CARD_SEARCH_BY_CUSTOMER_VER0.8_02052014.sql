DROP PROCEDURE IF EXISTS SP_ACCESS_CARD_SEARCH_BY_CUSTOMER;
CREATE PROCEDURE SP_ACCESS_CARD_SEARCH_BY_CUSTOMER(IN CUSTOMER_NO INTEGER,IN USERSTAMP VARCHAR(50),OUT TEMP_ACCESS_CARD_CUSTOMER TEXT)
BEGIN
DECLARE MAX_CARD INT;
DECLARE ACCESS_CARD_COUNT INT DEFAULT 1;
DECLARE ACCESS_CARD_INCREMENT INT ;
DECLARE ACCESS_ACTIVE_ID INTEGER;
DECLARE ACCESS_LOST_ID INTEGER;
DECLARE D_ACCESS TEXT;
DECLARE ACCESS TEXT;
DECLARE D_TEMP_ACCESS_CARD_CUSTOMER TEXT;
DECLARE ACCESSID INTEGER;
DECLARE CARDNO INTEGER;
DECLARE ACTIVE_INCREMENT_ID INTEGER;
DECLARE LOST_INCREMENT_ID INTEGER;
DECLARE USERSTAMP_ID INTEGER;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN 
ROLLBACK;
END;
START TRANSACTION;
CALL SP_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULDID);
SET USERSTAMP_ID=(SELECT @ULDID);
SET D_ACCESS=(SELECT CONCAT('ACCESS','_',SYSDATE()));
SET D_ACCESS=(SELECT REPLACE(D_ACCESS,' ',''));
SET D_ACCESS=(SELECT REPLACE(D_ACCESS,'-',''));
SET D_ACCESS=(SELECT REPLACE(D_ACCESS,':',''));
SET ACCESS=(SELECT CONCAT(D_ACCESS,'_',USERSTAMP_ID));
SET @CREATE_ACCESS=(SELECT CONCAT('CREATE TABLE ',ACCESS,'
(ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,ACCESS_CARD VARCHAR(7))'));
PREPARE CREATE_ACCESS_STMT FROM @CREATE_ACCESS;
EXECUTE CREATE_ACCESS_STMT;
SET D_TEMP_ACCESS_CARD_CUSTOMER=(SELECT CONCAT('TEMP_ACCESS_CARD_CUSTOMER','_',SYSDATE()));
SET D_TEMP_ACCESS_CARD_CUSTOMER=(SELECT REPLACE(D_TEMP_ACCESS_CARD_CUSTOMER,' ',''));
SET D_TEMP_ACCESS_CARD_CUSTOMER=(SELECT REPLACE(D_TEMP_ACCESS_CARD_CUSTOMER,'-',''));
SET D_TEMP_ACCESS_CARD_CUSTOMER=(SELECT REPLACE(D_TEMP_ACCESS_CARD_CUSTOMER,':',''));
SET TEMP_ACCESS_CARD_CUSTOMER=(SELECT CONCAT(D_TEMP_ACCESS_CARD_CUSTOMER,'_',USERSTAMP_ID));
SET @CREATE_TEMP_ACCESS_CUS=(SELECT CONCAT('CREATE TABLE ',TEMP_ACCESS_CARD_CUSTOMER,'
(
   ID int PRIMARY KEY NOT NULL AUTO_INCREMENT,
   ACTIVE_CARD int,
   OLD_CARD int,
   REASON varchar(20),
   COMMENTS TEXT
   
)'));
PREPARE CREATE_TEMP_ACCESS_CUS_STMT FROM @CREATE_TEMP_ACCESS_CUS;
EXECUTE CREATE_TEMP_ACCESS_CUS_STMT;
SET @INSERT_ACCESS=(SELECT CONCAT('INSERT INTO ',ACCESS,'(ACCESS_CARD)SELECT U.UASD_ACCESS_CARD FROM UNIT_ACCESS_STAMP_DETAILS U,CUSTOMER_ACCESS_CARD_DETAILS CACD
WHERE  U.UASD_ID=CACD.UASD_ID AND CACD.CUSTOMER_ID=',CUSTOMER_NO,' AND(CACD.ACN_ID!=4 OR CACD.ACN_ID IS NULL)'));
PREPARE INSERT_ACCESS_STMT FROM @INSERT_ACCESS;
EXECUTE INSERT_ACCESS_STMT;
SET @SET_MAX_CARD=(SELECT CONCAT('SELECT MAX(ID) INTO @MAXCARD FROM ',ACCESS));
PREPARE SET_MAX_CARD_STMT FROM @SET_MAX_CARD;
EXECUTE SET_MAX_CARD_STMT;
SET MAX_CARD=@MAXCARD;
	WHILE (MAX_CARD>=ACCESS_CARD_COUNT) DO
		SET @SET_ACCESS_CARD=(SELECT CONCAT('SELECT ACCESS_CARD INTO @CARD_NO FROM ',ACCESS,' WHERE ID=',ACCESS_CARD_COUNT ));
		PREPARE SET_ACCESS_CARD_STMT FROM @SET_ACCESS_CARD;
		EXECUTE SET_ACCESS_CARD_STMT;
		SET CARDNO=@CARD_NO ;
		SET @CREATE_ID=(SELECT CONCAT('SELECT ID INTO @ACCESS_ID FROM ',TEMP_ACCESS_CARD_CUSTOMER,' WHERE ID =1'));
		PREPARE CREATE_ID_STMT FROM @CREATE_ID;
		EXECUTE CREATE_ID_STMT;
		SET ACCESSID=@ACCESS_ID;
		IF EXISTS (SELECT CACD.UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS UASD  JOIN CUSTOMER_ACCESS_CARD_DETAILS CACD
		ON UASD.UASD_ACCESS_CARD=CARDNO AND CACD.CUSTOMER_ID=CUSTOMER_NO AND CACD.CACD_VALID_TILL IS NULL AND UASD.UASD_ID=CACD.UASD_ID) THEN
			SET @CREATE_ACTIVE_CARD_INCREMENT= (SELECT CONCAT('SELECT ID INTO @ACTIVE_INCREMENT FROM ',TEMP_ACCESS_CARD_CUSTOMER,' WHERE ACTIVE_CARD IS NOT NULL ORDER BY ID DESC LIMIT 1'));
			PREPARE CREATE_ACTIVE_CARD_INCREMENT_STMT FROM @CREATE_ACTIVE_CARD_INCREMENT;
			EXECUTE CREATE_ACTIVE_CARD_INCREMENT_STMT;
			SET ACTIVE_INCREMENT_ID=@ACTIVE_INCREMENT;
				IF ACTIVE_INCREMENT_ID IS NOT NULL THEN
					SET ACCESS_CARD_INCREMENT=@ACTIVE_INCREMENT+1;
					SET @CREATE_ACTIVE_INCREMENT_ID= (SELECT CONCAT('SELECT ID INTO @ACTIVE_INC_ID FROM ',TEMP_ACCESS_CARD_CUSTOMER,' WHERE ID=',ACCESS_CARD_INCREMENT));
					PREPARE CREATE_ACTIVE_INCREMENT_ID_STMT FROM @CREATE_ACTIVE_INCREMENT_ID;
					EXECUTE CREATE_ACTIVE_INCREMENT_ID_STMT;
					SET ACCESS_ACTIVE_ID=@ACTIVE_INC_ID;
						IF ACCESS_ACTIVE_ID IS NOT NULL THEN
							SET @UPDATE_TEMP_ACTIVE_ACCESS_CUSTOMER=(SELECT CONCAT('UPDATE ',TEMP_ACCESS_CARD_CUSTOMER,' SET ACTIVE_CARD=',CARDNO,' WHERE ID=',ACCESS_CARD_INCREMENT));
							PREPARE UPDATE_TEMP_ACTIVE_ACCESS_CUSTOMER_STMT FROM @UPDATE_TEMP_ACTIVE_ACCESS_CUSTOMER;
							EXECUTE UPDATE_TEMP_ACTIVE_ACCESS_CUSTOMER_STMT;
						ELSE
							SET @INSERT_TEMP_ACTIVE_ACCESS_CUSTOMER=(SELECT CONCAT('INSERT INTO ',TEMP_ACCESS_CARD_CUSTOMER,'(ACTIVE_CARD) VALUES(',CARDNO,')'));
							PREPARE INSERT_TEMP_ACTIVE_ACCESS_CUSTOMER_STMT FROM @INSERT_TEMP_ACTIVE_ACCESS_CUSTOMER;
							EXECUTE INSERT_TEMP_ACTIVE_ACCESS_CUSTOMER_STMT;
						END IF;
				ELSE
					IF ACCESSID IS NOT NULL THEN
						SET @UPDATE_TEMP_ACTIVE_ACCESS_CUS=(SELECT CONCAT('UPDATE ',TEMP_ACCESS_CARD_CUSTOMER,' SET ACTIVE_CARD=',CARDNO,' WHERE ID=1'));
						PREPARE UPDATE_TEMP_ACTIVE_ACCESS_CUS_STMT FROM @UPDATE_TEMP_ACTIVE_ACCESS_CUS;
						EXECUTE UPDATE_TEMP_ACTIVE_ACCESS_CUS_STMT;
					ELSE
						SET @IN_TEMP_ACTIVE_ACCESS_CUS=(SELECT CONCAT('INSERT INTO ',TEMP_ACCESS_CARD_CUSTOMER,' (ACTIVE_CARD) VALUES(',CARDNO,')'));
						PREPARE IN_TEMP_ACTIVE_ACCESS_CUS_STMT FROM @IN_TEMP_ACTIVE_ACCESS_CUS;
						EXECUTE IN_TEMP_ACTIVE_ACCESS_CUS_STMT;
					END IF;
				END IF;
		END IF;
		IF EXISTS (SELECT CACD.UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS UASD  JOIN CUSTOMER_ACCESS_CARD_DETAILS CACD
		ON UASD.UASD_ACCESS_CARD= CARDNO AND CACD.CUSTOMER_ID=CUSTOMER_NO AND CACD.CACD_VALID_TILL IS NOT NULL AND CACD.ACN_ID!=4 AND UASD.UASD_ID=CACD.UASD_ID) THEN
			SET @CREATE_LOST_CARD_INCREMENT= (SELECT CONCAT('SELECT ID INTO @LOST_INCREMENT FROM ',TEMP_ACCESS_CARD_CUSTOMER,' WHERE OLD_CARD IS NOT NULL ORDER BY ID DESC LIMIT 1'));
			PREPARE CREATE_LOST_CARD_INCREMENT_STMT FROM @CREATE_LOST_CARD_INCREMENT;
			EXECUTE CREATE_LOST_CARD_INCREMENT_STMT;
			SET LOST_INCREMENT_ID=@LOST_INCREMENT;
				IF LOST_INCREMENT_ID IS NOT NULL THEN
					SET ACCESS_CARD_INCREMENT=LOST_INCREMENT_ID+1;
					SET @CREATE_LOST_INCREMENT_ID= (SELECT CONCAT('SELECT ID INTO @LOST_INC_ID FROM ',TEMP_ACCESS_CARD_CUSTOMER,' WHERE ID=',ACCESS_CARD_INCREMENT));
					PREPARE CREATE_LOST_INCREMENT_ID_STMT FROM @CREATE_LOST_INCREMENT_ID;
					EXECUTE CREATE_LOST_INCREMENT_ID_STMT;
					SET ACCESS_LOST_ID=@LOST_INC_ID;
					IF ACCESS_LOST_ID IS NOT NULL THEN
						SET @UPDATE_LOST_CARD=(SELECT CONCAT('UPDATE ',TEMP_ACCESS_CARD_CUSTOMER,' SET OLD_CARD=',CARDNO,' WHERE ID=',ACCESS_CARD_INCREMENT));
						PREPARE UPDATE_LOST_CARD_STMT FROM @UPDATE_LOST_CARD;
						EXECUTE UPDATE_LOST_CARD_STMT;
					ELSE
						SET @INSERT_LOST_CARD=(SELECT CONCAT('INSERT INTO ',TEMP_ACCESS_CARD_CUSTOMER,'(OLD_CARD) VALUES(',CARDNO,')'));
						PREPARE INSERT_LOST_CARD_STMT FROM @INSERT_LOST_CARD;
						EXECUTE INSERT_LOST_CARD_STMT;
					END IF;
				ELSE
					IF ACCESSID IS NOT NULL THEN
						SET @UP_LOST_CARD=(SELECT CONCAT('UPDATE ',TEMP_ACCESS_CARD_CUSTOMER,' SET OLD_CARD=',CARDNO,' WHERE ID=1'));
						PREPARE UP_LOST_CARD_STMT FROM @UP_LOST_CARD;
						EXECUTE UP_LOST_CARD_STMT;
					ELSE
						SET @IN_LOST_CARD=(SELECT CONCAT('INSERT INTO ',TEMP_ACCESS_CARD_CUSTOMER,' (OLD_CARD) VALUES(',CARDNO,')'));
						PREPARE IN_LOST_CARD_STMT FROM @IN_LOST_CARD;
						EXECUTE IN_LOST_CARD_STMT;
					END IF;
				END IF;
					IF EXISTS(SELECT ACN_ID FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE CUSTOMER_ID=CUSTOMER_NO
					AND UASD_ID=(SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=CARDNO) AND ACN_ID !=4) THEN
						SET @UPDATE_REASON=(SELECT CONCAT('UPDATE ',TEMP_ACCESS_CARD_CUSTOMER,'
						SET REASON=(SELECT ACN_DATA FROM ACCESS_CONFIGURATION WHERE ACN_ID =(SELECT ACN_ID FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE CUSTOMER_ID=',CUSTOMER_NO,
						' AND UASD_ID=(SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=',CARDNO,') AND ACN_ID !=4)) 
						WHERE OLD_CARD=',CARDNO));
						PREPARE UPDATE_REASON_STMT FROM @UPDATE_REASON;
						EXECUTE UPDATE_REASON_STMT;
					END IF;
		END IF;
		SET @CARD_NO=NULL;
		SET @ACCESS_ID=NULL;
		SET @ACTIVE_INCREMENT=NULL;
		SET @ACTIVE_INC_ID=NULL;
		SET @LOST_INC_ID=NULL;
		SET @LOST_INCREMENT=NULL;
	SET ACCESS_CARD_COUNT=ACCESS_CARD_COUNT+1;
END WHILE;
SET @UPDATE_CMTS=(SELECT CONCAT('UPDATE ',TEMP_ACCESS_CARD_CUSTOMER,' SET COMMENTS=(SELECT CPD_COMMENTS FROM CUSTOMER_PERSONAL_DETAILS WHERE CUSTOMER_ID=',CUSTOMER_NO,')'));
PREPARE UPDATE_CMTS_STMT FROM @UPDATE_CMTS;
EXECUTE UPDATE_CMTS_STMT;
SET @DROP_ACCESS=(SELECT CONCAT('DROP TABLE IF EXISTS ',ACCESS));
PREPARE DROP_ACCESS_STMT FROM @DROP_ACCESS;
EXECUTE DROP_ACCESS_STMT;
COMMIT;
END;