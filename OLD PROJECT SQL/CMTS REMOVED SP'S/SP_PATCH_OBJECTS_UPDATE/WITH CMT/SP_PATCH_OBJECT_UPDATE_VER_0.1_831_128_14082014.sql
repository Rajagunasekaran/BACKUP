DROP PROCEDURE IF EXISTS SP_PATCH_OBJECT_UPDATE;
CREATE PROCEDURE SP_PATCH_OBJECT_UPDATE(
IN FILENAME TEXT,
IN USERSTAMP VARCHAR(50),
OUT SUCCESS_MESSAGE TEXT)
BEGIN
	DECLARE SUCCESS_ECNDATA TEXT;
	DECLARE FAILURE_ECNDATA TEXT;
	DECLARE FAILURE_ECN_DATA TEXT;	  
	DECLARE SUCCESSECNDATA TEXT;
	DECLARE FAILUREECNDATA TEXT;
	DECLARE FAIL_ECNDATA TEXT;
	DECLARE PATCHFILENAME VARCHAR(100);
	DECLARE PHSTATUS TINYINT;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
		ROLLBACK;
		INSERT INTO PATCH_HISTORY(PO_ID,PH_FILE_NAME,PH_STATUS,ULD_ID) VALUES (10,FILENAME,0,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=USERSTAMP));
		SET SUCCESS_MESSAGE = FAIL_ECNDATA;
	END;
	START TRANSACTION;
	SET FOREIGN_KEY_CHECKS = 0;	
	-- QUERY FOR GET ERROR MESSGAE FROM ERROR_MESSAGE_CONFIGURATION TABLE
	SET SUCCESS_ECNDATA = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=469);	
	SET FAILURE_ECNDATA = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=470);
	SET FAILURE_ECN_DATA = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=473);	
	-- QUERY FOR REPLACE [FILENAME]
	SET SUCCESSECNDATA = (SELECT REPLACE(SUCCESS_ECNDATA,'[FILENAME]',FILENAME));
	SET FAILUREECNDATA = (SELECT REPLACE(FAILURE_ECNDATA,'[FILENAME]',FILENAME));
	SET FAIL_ECNDATA = (SELECT REPLACE(FAILURE_ECN_DATA,'[FILENAME]',FILENAME));	
	-- QUERY FOR CHECK THE PASSING FILE NAME EXISTS IN PATCH_HISTORY TABLE
	IF EXISTS(SELECT PH_FILE_NAME FROM PATCH_HISTORY WHERE PH_FILE_NAME = FILENAME AND PH_STATUS = 1) THEN
    SET SUCCESS_MESSAGE = FAILUREECNDATA;
	END IF;	
	-- QUERY FOR CHECK THE PASSING FILE NAME NOT EXISTS IN PATCH_HISTORY TABLE
	SET PATCHFILENAME = (SELECT PH_FILE_NAME FROM PATCH_HISTORY WHERE PH_FILE_NAME = FILENAME);
	SET PHSTATUS = (SELECT PH_STATUS FROM PATCH_HISTORY WHERE PH_FILE_NAME = FILENAME AND PH_STATUS = 0);	
	IF ((PATCHFILENAME IS NOT NULL) AND (PHSTATUS = 0)) OR (PATCHFILENAME IS NULL) THEN	
    
		-- ALTER QUERY FOR ADD COLUMN INTO THE TABLE
		ALTER TABLE PATCH_OBJECTS ADD FO_FOLDER_ID VARCHAR(30);
		
		-- QUERY FOR UPDATE VALUES IN PATCH_OBJECTS TABLE
		UPDATE PATCH_OBJECTS SET FO_FOLDER_ID='0B_f0d7mdbV_UTEFTZUFPTmZsOXM' WHERE PO_ID=1;
		UPDATE PATCH_OBJECTS SET FO_FOLDER_ID='0B_f0d7mdbV_UYVdfN3Q2NzlLMjg' WHERE PO_ID=2;
		UPDATE PATCH_OBJECTS SET FO_FOLDER_ID='0B_f0d7mdbV_UV2dWbkQ2Wno0ek0' WHERE PO_ID=3;
		UPDATE PATCH_OBJECTS SET FO_FOLDER_ID='0B_f0d7mdbV_UTTRUTTNELW5MWUU' WHERE PO_ID=4;
		UPDATE PATCH_OBJECTS SET FO_FOLDER_ID='0B_f0d7mdbV_URExrOENrMTIwUVE' WHERE PO_ID=5;
		UPDATE PATCH_OBJECTS SET FO_FOLDER_ID='0B_f0d7mdbV_UbjFNX1d1d01WQlU' WHERE PO_ID=6;
		UPDATE PATCH_OBJECTS SET FO_FOLDER_ID='0B_f0d7mdbV_UWnhZdndsNkZxMm8' WHERE PO_ID=7;
		UPDATE PATCH_OBJECTS SET FO_FOLDER_ID='0B_f0d7mdbV_UQ0Rld3lRYmlBbzA' WHERE PO_ID=8;
		UPDATE PATCH_OBJECTS SET FO_FOLDER_ID='0B_f0d7mdbV_UZTdMX191UVM2c2s' WHERE PO_ID=9;
		UPDATE PATCH_OBJECTS SET FO_FOLDER_ID='0B_f0d7mdbV_UNGJIR3ZIRWhjM0U' WHERE PO_ID=10;

		-- QUERY FOR INSERT VALUES IN PATCH_HISTORY
		INSERT INTO PATCH_HISTORY(PO_ID,PH_FILE_NAME,PH_STATUS,ULD_ID) VALUES (10,FILENAME,1,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=USERSTAMP));
		SET SUCCESS_MESSAGE = SUCCESSECNDATA;
		SET FOREIGN_KEY_CHECKS = 1;	
	END IF;	
	COMMIT;
END;
/*
CALL SP_PATCH_OBJECT_UPDATE(FILENAME,USERSTAMP,@SUCCESS_MESSAGE);
CALL SP_PATCH_OBJECT_UPDATE('SP_PATCH_OBJECT_UPDATE','expatsintegrated@gmail.com',@SUCCESS_MESSAGE);
*/