-- VERSION 1.1 TARTDATE:23/09/2014 ENDDATE:23/09/2014 ISSUE NO:836 COMMENT NO:61 DESC:IMPLIMENTED ERROR MESSAGE GET FROM DB. DONE BY :RAJA
-- VER 1.0 STARTDATE:04/07/2014 ENDDATE:04/07/2014 ISSUE NO:303 COMMENT NO:416 DESC:CHANGING HADRCODED CONFIGURATION DATA INTO ID DONEBY:BHAVANI.R

-- version 0.9-->startdate:21/06/2014 ensdate:21/06/2014---issue no:817--desc:dropped temp table if rollback occur

-- > version 0.8-- >startdate:02/06/2014  enddate:03/06/2014 -- >issueno:825 comment:8 -- >desc:SPLITTED INTO 3 PARTS -- >doneby:DHIVYA

-- > version 0.7-- >startdate:30/05/2014  enddate:30/05/2014 -- >issueno:825 comment:8 -- >desc:CHANGING THE SP FOR THROWING THE ERROR MESSAGE -- >doneby:RAJA

-- > version 0.6-- >startdate:09/05/2014  enddate:09/05/2014 -- >issueno:743 comment:113 -- >desc:TRIMMED SEARCH BY ALL UNIT SP -- >doneby:DHIVYA.A

-- > version 0.5-- >startdate:30/04/2014  enddate:02/05/2014 -- >issueno:817 -- >desc:SEARCH BY ALL SP DONE DYNAMICALLY -- >doneby:DHIVYA.A

-- > version 0.4-- >startdate:28/04/2014  enddate:28/04/2014 -- >issueno:815 -- >desc:REMOVED UNEXPECTED BRACE -- >doneby:DHIVYA.A

-- > version 0.3-- >startdate:21/01/2014  enddate:21/01/2014-- >issueno:348  commentno:#49-- >desc:SP FOR SEARCH BY ALL UNIT-- >doneby:SAFIYULLAH.M,Changes made:Update the temp table datatype for unitno

-- > version 0.2-- >startdate:25/11/2013  enddate:29/11/2013-- >issueno:345 commentno:#428 -- >desc:SP FOR SEARCH BY ALL UNIT-- >doneby:DHIVYA.A

-- > version 0.1-- >startdate:19/11/2013  enddate:23/11/2013-- >issueno:345 commentno:#352 -- >desc:SP FOR SEARCH BY ALL UNIT-- >doneby:DHIVYA.A


DROP PROCEDURE IF EXISTS SP_ACCESS_CARD_SEARCH_BY_ALL_UNIT;
CREATE PROCEDURE SP_ACCESS_CARD_SEARCH_BY_ALL_UNIT(IN USERSTAMP VARCHAR(50),OUT TEMP_ACCESS_CARD_ALL_UNIT TEXT,OUT FLAG TEXT)
BEGIN
-- variable declaration
DECLARE NUMBER_OF_ACCESS INT;
DECLARE ACCESS_CARD_COUNT INT DEFAULT 1;
DECLARE ACCESS_CARD_INCREMENT INT;
DECLARE NO_OF_UNIT INTEGER;
DECLARE UNITNO_COUNT INTEGER DEFAULT 1;
DECLARE D_TEMP_ACCESS_ALL_UNIT TEXT;
DECLARE D_TEMP_ACCESS TEXT;
DECLARE TEMP_ACCESS TEXT;
DECLARE D_TEMP_UNITNO TEXT;
DECLARE TEMP_UNITNO TEXT;
DECLARE D_TEMP_ACCESS_CARD_SINGLE_UNIT TEXT;
DECLARE TEMP_ACCESS_CARD_SINGLE_UNIT TEXT;
DECLARE USERSTAMP_ID INTEGER;
DECLARE CARD_ID INTEGER;
DECLARE CARD_NO INTEGER;
DECLARE ACTIVE_ID INTEGER;
DECLARE LOST_ID INTEGER;
DECLARE INVENTORY_ID INTEGER;
DECLARE EMP_ID INTEGER;
DECLARE ACCESSID INTEGER;
DECLARE ACCESS_ACTIVE_INCREMENT_ID INTEGER;
DECLARE ACCESS_INV_INCREMENT_ID INTEGER;
DECLARE ACCESS_LOST_INCREMENT_ID INTEGER;
DECLARE ACCESS_EMP_INCREMENT_ID INTEGER;
DECLARE ACCESSUNITID INTEGER;
DECLARE ACCESSUNITNO INTEGER;
DECLARE ACTIVECUSTOMERID INTEGER;
DECLARE ACTIVEFIRSTNAME VARCHAR(50);
DECLARE ACTIVELASTNAME VARCHAR(50);
DECLARE ACT_CUSTOMER VARCHAR(100);
DECLARE ACT_GUEST VARCHAR(100);
DECLARE LOSTCUSTID INTEGER;
DECLARE LOSTFNAME VARCHAR(50);
DECLARE LOSTLNAME VARCHAR(50);
DECLARE LOST_CUSTOMER VARCHAR(100);
DECLARE LOST_GUEST VARCHAR(100);
DECLARE LOST_REASON VARCHAR(10);
DECLARE CUST TEXT;
DECLARE TEMP_CUST TEXT;
DECLARE CUSTID INTEGER;
DECLARE AMIN_ID INTEGER;
DECLARE AMAX_ID INTEGER;
DECLARE LMIN_ID INTEGER;
DECLARE LMAX_ID INTEGER;
DECLARE ACTCUSTNAME TEXT;
DECLARE LOSTCUSTNAME TEXT;
DECLARE CUSTOMER_LOST_VALUE INTEGER;
DECLARE CUSTOMER_ACT_VALUE INTEGER;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
ROLLBACK;
IF TEMP_CUST IS NOT NULL THEN
SET @DROP_TEMP_CUST=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_CUST));
PREPARE DROP_TEMP_CUST_STMT FROM @DROP_TEMP_CUST;
EXECUTE DROP_TEMP_CUST_STMT;
END IF;
IF TEMP_ACCESS_CARD_SINGLE_UNIT IS NOT NULL THEN
SET @DROP_ACCESS_SINGLE_UNIT=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_ACCESS_CARD_SINGLE_UNIT));
PREPARE DROP_ACCESS_SINGLE_UNIT_STMT FROM @DROP_ACCESS_SINGLE_UNIT;
EXECUTE DROP_ACCESS_SINGLE_UNIT_STMT;
END IF;
IF TEMP_ACCESS IS NOT NULL THEN
SET @DROP_TEMP_ACCESS=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_ACCESS));
PREPARE DROP_TEMP_ACCESS_STMT FROM @DROP_TEMP_ACCESS;
EXECUTE DROP_TEMP_ACCESS_STMT;
END IF;
IF TEMP_UNITNO IS NOT NULL THEN
SET @DROP_TEMP_UNITNO=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_UNITNO));
PREPARE DROP_TEMP_UNITNO_STMT FROM @DROP_TEMP_UNITNO;
EXECUTE DROP_TEMP_UNITNO_STMT;
END IF;
IF TEMP_ACCESS_CARD_ALL_UNIT IS NOT NULL THEN
SET @DROP_TEMP_ACAO=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_ACCESS_CARD_ALL_UNIT));
PREPARE DROP_TEMP_ACAO_STMT FROM @DROP_TEMP_ACAO;
EXECUTE DROP_TEMP_ACAO_STMT;
END IF;
END;
START TRANSACTION;
SET ACTCUSTNAME='';
SET LOSTCUSTNAME='';
CALL SP_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULDID);
SET USERSTAMP_ID=(SELECT @ULDID);
-- TEMP TABLE FOR STORING ALL UNIT ACCESS CARD
CALL SP_SUB_SEARCH_BY_ALL_UNIT('TEMP_ACCESS_CARD_ALL_UNIT',USERSTAMP,@FINAL_TABLE_NAME);
SET TEMP_ACCESS_CARD_ALL_UNIT=@FINAL_TABLE_NAME;

-- TEMP TABLE FOR STORING ALL UNITNO
CALL SP_SUB_SEARCH_BY_ALL_UNIT('TEMP_UNITNO',USERSTAMP,@FINAL_TABLE_NAME);
SET TEMP_UNITNO=@FINAL_TABLE_NAME;
SET @INSERT_TEMP_UNITNO=(SELECT CONCAT('INSERT INTO ',TEMP_UNITNO,'(UNITID,UNITNO) SELECT * FROM UNIT'));
PREPARE INSERT_TEMP_UNITNO_STMT FROM @INSERT_TEMP_UNITNO;
EXECUTE INSERT_TEMP_UNITNO_STMT;
SET @SET_NO_OF_UNIT=(SELECT CONCAT('SELECT MAX(ID)INTO @NOOFUNIT FROM ',TEMP_UNITNO));
PREPARE SET_NO_OF_UNIT_STMT FROM @SET_NO_OF_UNIT;
EXECUTE SET_NO_OF_UNIT_STMT;
SET NO_OF_UNIT=@NOOFUNIT;
WHILE (UNITNO_COUNT<=NO_OF_UNIT)DO
CALL SP_SUB_SEARCH_BY_ALL_UNIT('TEMP_ACCESS',USERSTAMP,@FINAL_TABLE_NAME);
SET TEMP_ACCESS=@FINAL_TABLE_NAME;
-- create temp table for storing access_card for passing unitno
CALL SP_SUB_SEARCH_BY_ALL_UNIT('TEMP_ACCESS_CARD_SINGLE_UNIT',USERSTAMP,@FINAL_TABLE_NAME);
SET TEMP_ACCESS_CARD_SINGLE_UNIT=@FINAL_TABLE_NAME;
CALL SP_SUB_SEARCH_BY_ALL_UNIT('TEMP_CUST',USERSTAMP,@FINAL_TABLE_NAME);
SET TEMP_CUST=@FINAL_TABLE_NAME;
SET @INSERT_TEMP_ACCESS=(SELECT CONCAT('INSERT INTO ',TEMP_ACCESS,' (UNITID,UNITNO,UASDID,ACCESS_CARD) SELECT U1.UNITID,U1.UNITNO,UASD.UASD_ID,UASD.UASD_ACCESS_CARD FROM UNIT_ACCESS_STAMP_DETAILS UASD,UNIT_DETAILS U, ',TEMP_UNITNO,' U1 WHERE UASD.UNIT_ID=U.UNIT_ID AND U.UD_OBSOLETE IS NULL AND U1.UNITID=UASD.UNIT_ID AND U.UNIT_ID=U1.UNITID AND UASD.UNIT_ID=(SELECT UNITID FROM ',TEMP_UNITNO,' WHERE ID=',UNITNO_COUNT,') AND UASD.UASD_ACCESS_CARD IS NOT NULL ORDER BY UASD.UASD_ACCESS_ACTIVE,UASD.UASD_ACCESS_LOST,UASD.UASD_ACCESS_INVENTORY'));
PREPARE INSERT_TEMP_ACCESS_STMT FROM @INSERT_TEMP_ACCESS;
EXECUTE INSERT_TEMP_ACCESS_STMT;
SET @SET_NUMBER_OF_ACCESS=(SELECT CONCAT('SELECT MAX(ID)INTO @NOOFACCESS FROM ',TEMP_ACCESS));
PREPARE SET_NUMBER_OF_ACCESS_STMT FROM @SET_NUMBER_OF_ACCESS;
EXECUTE SET_NUMBER_OF_ACCESS_STMT;
SET NUMBER_OF_ACCESS=@NOOFACCESS;
  WHILE (ACCESS_CARD_COUNT<=NUMBER_OF_ACCESS) DO
  SET @CREATE_CARD_ID=(SELECT CONCAT('SELECT UASDID INTO @ACCESS_CARD_ID FROM ',TEMP_ACCESS,' WHERE ID=',ACCESS_CARD_COUNT));
	PREPARE CREATE_CARD_ID_STMT FROM @CREATE_CARD_ID;
	EXECUTE CREATE_CARD_ID_STMT;
	SET CARD_ID=@ACCESS_CARD_ID;
	SET @CREATE_CARD_NO=(SELECT CONCAT('SELECT ACCESS_CARD INTO @ACCESS_CARD_NO FROM ',TEMP_ACCESS,' WHERE ID=',ACCESS_CARD_COUNT));
	PREPARE CREATE_CARD_NO_STMT FROM @CREATE_CARD_NO;
	EXECUTE CREATE_CARD_NO_STMT;
	SET CARD_NO=@ACCESS_CARD_NO;
	SET @CREATE_UNIT_ID=(SELECT CONCAT('SELECT UNITID INTO @ACCESS_UNITID FROM ',TEMP_ACCESS,' WHERE ID=',ACCESS_CARD_COUNT));
	PREPARE CREATE_UNIT_ID_STMT FROM @CREATE_UNIT_ID;
	EXECUTE CREATE_UNIT_ID_STMT;
	SET ACCESSUNITID=@ACCESS_UNITID ;
	SET @CREATE_UNIT_NO=(SELECT CONCAT('SELECT UNITNO INTO @ACCESS_UNITNO FROM ',TEMP_ACCESS,' WHERE ID=',ACCESS_CARD_COUNT));
	PREPARE CREATE_UNIT_NO_STMT FROM @CREATE_UNIT_NO;
	EXECUTE CREATE_UNIT_NO_STMT;
  SET ACCESSUNITNO=@ACCESS_UNITNO;
SET @CREATE_ACTIVE_ID=(SELECT CONCAT('SELECT ID INTO @ACCESS_ACTIVE_ID FROM ',TEMP_ACCESS_CARD_SINGLE_UNIT,' WHERE ACTIVE_CARD IS NOT NULL ORDER BY ID DESC LIMIT 1'));
PREPARE CREATE_ACTIVE_ID_STMT FROM @CREATE_ACTIVE_ID;
EXECUTE CREATE_ACTIVE_ID_STMT;
SET ACTIVE_ID=@ACCESS_ACTIVE_ID;
SET @CREATE_INVENTORY_ID=(SELECT CONCAT('SELECT ID INTO @ACCESS_INVENTORY_ID FROM ',TEMP_ACCESS_CARD_SINGLE_UNIT,' WHERE INVENTORY_CARD IS NOT NULL ORDER BY ID DESC LIMIT 1'));
PREPARE CREATE_INVENTORY_ID_STMT FROM @CREATE_INVENTORY_ID;
EXECUTE CREATE_INVENTORY_ID_STMT;
SET INVENTORY_ID=@ACCESS_INVENTORY_ID;
SET @CREATE_LOST_ID=(SELECT CONCAT('SELECT ID INTO @ACCESS_LOST_ID FROM ',TEMP_ACCESS_CARD_SINGLE_UNIT,' WHERE CUSTOMER_LOST_CARD IS NOT NULL ORDER BY ID DESC LIMIT 1'));
PREPARE CREATE_LOST_ID_STMT FROM @CREATE_LOST_ID;
EXECUTE CREATE_LOST_ID_STMT;
SET LOST_ID=@ACCESS_LOST_ID;
SET @CREATE_EMP_ID=(SELECT CONCAT('SELECT ID INTO @ACCESS_EMPLOYEE_ID FROM ',TEMP_ACCESS_CARD_SINGLE_UNIT,' WHERE EMPLOYEE_LOST_CARD IS NOT NULL ORDER BY ID DESC LIMIT 1'));
PREPARE CREATE_EMP_ID_STMT FROM @CREATE_EMP_ID;
EXECUTE CREATE_EMP_ID_STMT;
SET EMP_ID=@ACCESS_EMPLOYEE_ID;
SET @CREATE_ID=(SELECT CONCAT('SELECT ID INTO @ACCESS_ID FROM ',TEMP_ACCESS_CARD_SINGLE_UNIT,' WHERE ID =1'));
PREPARE CREATE_ID_STMT FROM @CREATE_ID;
EXECUTE CREATE_ID_STMT;
SET ACCESSID=@ACCESS_ID;
-- QUERY FOR THROWING ERROR MESSAGE

SET @CUSTOMER_ACT_COUNT=(SELECT CONCAT('SELECT COUNT(*) INTO @CUSTOMERACTVALUE FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE ACN_ID IS NULL AND CACD_VALID_TILL IS NULL AND UASD_ID=(SELECT UASDID FROM ',TEMP_ACCESS,' WHERE ID=',ACCESS_CARD_COUNT,')'));
PREPARE CUSTOMER_ACT_COUNT_STMT FROM @CUSTOMER_ACT_COUNT;
EXECUTE CUSTOMER_ACT_COUNT_STMT;
SET CUSTOMER_ACT_VALUE= @CUSTOMERACTVALUE;

SET @CUSTOMER_LOST_COUNT=(SELECT CONCAT('SELECT COUNT(*) INTO @CUSTOMERLOSTVALUE FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE ACN_ID !=4 AND CACD_VALID_TILL IS NOT NULL AND UASD_ID=(SELECT UASDID FROM ',TEMP_ACCESS,' WHERE ID=',ACCESS_CARD_COUNT,')'));
PREPARE CUSTOMER_LOST_COUNT_STMT FROM @CUSTOMER_LOST_COUNT;
EXECUTE CUSTOMER_LOST_COUNT_STMT;
SET CUSTOMER_LOST_VALUE= @CUSTOMERLOSTVALUE;

IF CUSTOMER_ACT_VALUE>1 THEN
  SET @INSERT_CUST=(SELECT CONCAT('INSERT INTO ',TEMP_CUST,' (CUST_ID)(SELECT CUSTOMER_ID FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE ACN_ID IS NULL AND CACD_VALID_TILL IS NULL AND UASD_ID=',CARD_ID,')'));
  PREPARE INSERT_CUST_STMT FROM @INSERT_CUST;
  EXECUTE INSERT_CUST_STMT;
  SET @AMIN_ID=(SELECT CONCAT('SELECT MIN(ID)INTO @AMINID FROM ',TEMP_CUST));
  PREPARE AMIN_ID_STMT FROM @AMIN_ID;
  EXECUTE AMIN_ID_STMT;
  SET AMIN_ID= @AMINID;
  SET @AMAX_ID=(SELECT CONCAT('SELECT MAX(ID)INTO @AMAXID FROM ',TEMP_CUST));
  PREPARE AMAX_ID_STMT FROM @AMAX_ID;
  EXECUTE AMAX_ID_STMT;
  SET AMAX_ID=@AMAXID;
  WHILE (AMAX_ID>=AMIN_ID) DO
    SET @ACTCUSTNAME=(SELECT CONCAT('SELECT CONCAT(CUSTOMER_FIRST_NAME,''-'',CUSTOMER_LAST_NAME)AS CUST_NAME INTO @ACTCUSTOMERNAME FROM CUSTOMER WHERE CUSTOMER_ID=(SELECT CUST_ID FROM ',TEMP_CUST,' WHERE ID=',AMIN_ID,')'));
    PREPARE ACTCUSTNAME_STMT FROM @ACTCUSTNAME;
    EXECUTE ACTCUSTNAME_STMT;
    IF(AMIN_ID=1)THEN
      SET ACTCUSTNAME=(SELECT CONCAT('',ACTCUSTNAME,'',@ACTCUSTOMERNAME));
      ELSEIF (AMIN_ID!=1)THEN
      SET ACTCUSTNAME=(SELECT CONCAT('',ACTCUSTNAME,', ',@ACTCUSTOMERNAME));
    END IF;
    SET AMIN_ID=AMIN_ID+1;
  END WHILE;
  SET FLAG=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=573);
  SET FLAG=(SELECT REPLACE(FLAG,'[CARD_NO]',CARD_NO));
  SET FLAG=(SELECT REPLACE(FLAG,'[ACTCUSTNAME]',ACTCUSTNAME));
ELSEIF(CUSTOMER_LOST_VALUE>1)THEN
  SET @INSERT_CUST=(SELECT CONCAT('INSERT INTO ',TEMP_CUST,' (CUST_ID)(SELECT CUSTOMER_ID FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE ACN_ID !=4 AND CACD_VALID_TILL IS NOT NULL AND UASD_ID=',CARD_ID,')'));
  PREPARE INSERT_CUST_STMT FROM @INSERT_CUST;
  EXECUTE INSERT_CUST_STMT;
  SET @LMIN_ID=(SELECT CONCAT('SELECT MIN(ID)INTO @LMINID FROM ',TEMP_CUST));
  PREPARE LMIN_ID_STMT FROM @LMIN_ID;
  EXECUTE LMIN_ID_STMT;
  SET LMIN_ID= @LMINID;
  SET @LMAX_ID=(SELECT CONCAT('SELECT MAX(ID)INTO @LMAXID FROM ',TEMP_CUST));
  PREPARE LMAX_ID_STMT FROM @LMAX_ID;
  EXECUTE LMAX_ID_STMT;
  SET LMAX_ID=@LMAXID;
  WHILE (LMAX_ID>=LMIN_ID) DO
    SET @LOSTCUSTNAME=(SELECT CONCAT('SELECT CONCAT(CUSTOMER_FIRST_NAME,''-'',CUSTOMER_LAST_NAME)AS CUST_NAME INTO @LOSTCUSTOMERNAME FROM CUSTOMER WHERE CUSTOMER_ID=(SELECT CUST_ID FROM ',TEMP_CUST,' WHERE ID=',LMIN_ID,')'));
    PREPARE LOSTCUSTNAME_STMT FROM @LOSTCUSTNAME;
    EXECUTE LOSTCUSTNAME_STMT;
    IF(LMIN_ID=1)THEN
      SET LOSTCUSTNAME=(SELECT CONCAT('',LOSTCUSTNAME,'',@LOSTCUSTOMERNAME));
      ELSEIF (LMIN_ID!=1)THEN
      SET LOSTCUSTNAME=(SELECT CONCAT('',LOSTCUSTNAME,', ',@LOSTCUSTOMERNAME));
    END IF;
    SET LMIN_ID=LMIN_ID+1;
  END WHILE;
  SET FLAG=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=573);
  SET FLAG=(SELECT REPLACE(FLAG,'[CARD_NO]',CARD_NO));
  SET FLAG=(SELECT REPLACE(FLAG,'[ACTCUSTNAME]',LOSTCUSTNAME));
END IF;

SET ACTIVECUSTOMERID=(SELECT CUSTOMER_ID FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE ACN_ID IS NULL AND CACD_VALID_TILL IS NULL AND UASD_ID=CARD_ID);
SET ACTIVEFIRSTNAME=(SELECT CUSTOMER_FIRST_NAME FROM CUSTOMER WHERE CUSTOMER_ID=ACTIVECUSTOMERID);
SET ACTIVELASTNAME=(SELECT CUSTOMER_LAST_NAME FROM CUSTOMER WHERE CUSTOMER_ID=ACTIVECUSTOMERID);
SET ACT_GUEST=(SELECT CONCAT(CARD_NO,' ',ACTIVEFIRSTNAME,' ',ACTIVELASTNAME,' ','GUEST','(',ACTIVECUSTOMERID,')'));
SET ACT_CUSTOMER=(SELECT CONCAT(CARD_NO,' ',ACTIVEFIRSTNAME,' ',ACTIVELASTNAME,' ','(',ACTIVECUSTOMERID,')'));
SET LOSTCUSTID=(SELECT CUSTOMER_ID FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE ACN_ID IN (SELECT ACN_ID FROM ACCESS_CONFIGURATION WHERE ACN_ID!=4) AND UASD_ID=CARD_ID);
SET LOSTFNAME=(SELECT CUSTOMER_FIRST_NAME FROM CUSTOMER WHERE CUSTOMER_ID=LOSTCUSTID);
SET LOSTLNAME=(SELECT CUSTOMER_LAST_NAME FROM CUSTOMER WHERE CUSTOMER_ID=LOSTCUSTID);
SET LOST_GUEST=(SELECT CONCAT(CARD_NO,' ',LOSTFNAME,' ',LOSTLNAME,' ','GUEST','(',LOSTCUSTID,')'));
SET LOST_CUSTOMER =(SELECT CONCAT(CARD_NO,' ',LOSTFNAME,' ',LOSTLNAME,' ','(',LOSTCUSTID,')'));
SET LOST_REASON=(SELECT ACN_DATA FROM ACCESS_CONFIGURATION WHERE ACN_ID =(SELECT ACN_ID FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE UASD_ID=(SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=CARD_NO AND UNIT_ID =ACCESSUNITID) AND ACN_ID!=4));
IF EXISTS (SELECT UASD_ACCESS_CARD FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=CARD_NO AND UASD_ACCESS_ACTIVE IS NOT NULL) THEN
IF ACTIVE_ID IS NULL THEN
    IF ACCESSID IS NULL THEN
            IF EXISTS(SELECT * FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE UASD_ID=CARD_ID AND ACN_ID IS NULL AND CACD_VALID_TILL IS NULL AND CACD_GUEST_CARD IS NOT NULL)THEN
				SET @INSERT_TEMP_ACCESS_ACTIVE_GUEST=(SELECT CONCAT('INSERT INTO ',TEMP_ACCESS_CARD_SINGLE_UNIT,'(UNITID,UNITNO,ACTIVE_CARD)VALUES (',ACCESSUNITID,',',ACCESSUNITNO,',','"',ACT_GUEST,'"',')'));
                PREPARE INSERT_TEMP_ACCESS_ACTIVE_GUEST_STMT FROM @INSERT_TEMP_ACCESS_ACTIVE_GUEST;
                EXECUTE INSERT_TEMP_ACCESS_ACTIVE_GUEST_STMT;
			END IF;
            IF EXISTS(SELECT * FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE UASD_ID=CARD_ID AND ACN_ID IS NULL AND CACD_VALID_TILL IS NULL AND CACD_GUEST_CARD IS NULL)THEN
                SET @INSERT_TEMP_ACCESS_ACTIVE_ORGINAL=(SELECT CONCAT('INSERT INTO ',TEMP_ACCESS_CARD_SINGLE_UNIT,'(UNITID,UNITNO,ACTIVE_CARD)VALUES (',ACCESSUNITID,',',ACCESSUNITNO,',','"',ACT_CUSTOMER,'"',')'));
                PREPARE INSERT_TEMP_ACCESS_ACTIVE_ORGINAL_STMT FROM  @INSERT_TEMP_ACCESS_ACTIVE_ORGINAL;
                EXECUTE INSERT_TEMP_ACCESS_ACTIVE_ORGINAL_STMT;
            END IF;
        END IF;
        IF ACCESSID IS NOT NULL THEN
            IF EXISTS(SELECT * FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE UASD_ID=CARD_ID AND ACN_ID IS NULL AND CACD_VALID_TILL IS NULL AND CACD_GUEST_CARD IS NOT NULL)THEN
                SET @UPDATE_TEMP_ACCESS_UNIT_ACTIVE_GUEST=(SELECT CONCAT('UPDATE ',TEMP_ACCESS_CARD_SINGLE_UNIT,' SET UNITID=',ACCESSUNITID,',UNITNO=',ACCESSUNITNO,',ACTIVE_CARD =','"',ACT_GUEST,'"',' WHERE ID=1'));
                PREPARE UPDATE_TEMP_ACCESS_UNIT_ACTIVE_GUEST_STMT FROM @UPDATE_TEMP_ACCESS_UNIT_ACTIVE_GUEST;
                EXECUTE UPDATE_TEMP_ACCESS_UNIT_ACTIVE_GUEST_STMT;
			END IF;
            IF EXISTS(SELECT * FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE UASD_ID=CARD_ID AND ACN_ID IS NULL AND CACD_VALID_TILL IS NULL AND CACD_GUEST_CARD IS NULL)THEN
                SET @UPDATE_TEMP_ACCESS_UNIT_ACTIVE_GUEST=(SELECT CONCAT('UPDATE ',TEMP_ACCESS_CARD_SINGLE_UNIT,' SET UNITID=',ACCESSUNITID,',UNITNO=',ACCESSUNITNO,',ACTIVE_CARD =','"',ACT_CUSTOMER,'"',' WHERE ID=1'));
                PREPARE UPDATE_TEMP_ACCESS_UNIT_ACTIVE_GUEST_STMT FROM @UPDATE_TEMP_ACCESS_UNIT_ACTIVE_GUEST;
                EXECUTE UPDATE_TEMP_ACCESS_UNIT_ACTIVE_GUEST_STMT;
            END IF;
        END IF;
    ELSE
        SET @CREATE_ACCESS_CARD_INCREMENT= (SELECT CONCAT('(SELECT ID INTO @ACCESS_INCREMENT FROM ',TEMP_ACCESS_CARD_SINGLE_UNIT,' WHERE ACTIVE_CARD IS NOT NULL ORDER BY ID DESC LIMIT 1)'));
        PREPARE CREATE_ACCESS_CARD_INCREMENT_STMT FROM @CREATE_ACCESS_CARD_INCREMENT;
        EXECUTE CREATE_ACCESS_CARD_INCREMENT_STMT;
        SET ACCESS_CARD_INCREMENT=@ACCESS_INCREMENT+1;
        SET @CREATE_ACTIVE_ACCESS_INCREMENT_ID= (SELECT CONCAT('SELECT ID INTO @ACTIVE_INC_ID FROM ',TEMP_ACCESS_CARD_SINGLE_UNIT,' WHERE ID=',ACCESS_CARD_INCREMENT));
        PREPARE CREATE_ACTIVE_ACCESS_INCREMENT_ID_STMT FROM @CREATE_ACTIVE_ACCESS_INCREMENT_ID;
        EXECUTE CREATE_ACTIVE_ACCESS_INCREMENT_ID_STMT;
        SET ACCESS_ACTIVE_INCREMENT_ID=@ACTIVE_INC_ID;
            IF ACCESS_ACTIVE_INCREMENT_ID IS NOT NULL THEN
                IF EXISTS(SELECT * FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE UASD_ID=CARD_ID AND ACN_ID IS NULL AND CACD_VALID_TILL IS NULL AND CACD_GUEST_CARD IS NOT NULL)THEN
                    SET @UPDATE_TEMP_ACCESS_INCREMENT_GUEST=(SELECT CONCAT('UPDATE ',TEMP_ACCESS_CARD_SINGLE_UNIT,' SET UNITID=',ACCESSUNITID,',UNITNO=',ACCESSUNITNO,',ACTIVE_CARD =','"',ACT_GUEST,'"',' WHERE ID=',ACCESS_CARD_INCREMENT));
                    PREPARE UPDATE_TEMP_ACCESS_INCREMENT_GUEST_STMT FROM @UPDATE_TEMP_ACCESS_INCREMENT_GUEST;
                    EXECUTE UPDATE_TEMP_ACCESS_INCREMENT_GUEST_STMT;
                END IF;
				IF EXISTS(SELECT * FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE UASD_ID=CARD_ID AND ACN_ID IS NULL AND CACD_VALID_TILL IS NULL AND CACD_GUEST_CARD IS NULL)THEN
                    SET @UPDATE_TEMP_ACCESS_INCREMENT_ORG=(SELECT CONCAT('UPDATE ',TEMP_ACCESS_CARD_SINGLE_UNIT,' SET UNITID=',ACCESSUNITID,',UNITNO=',ACCESSUNITNO,',ACTIVE_CARD =','"',ACT_CUSTOMER,'"',' WHERE ID=',ACCESS_CARD_INCREMENT));
                    PREPARE UPDATE_TEMP_ACCESS_INCREMENT_ORG_STMT FROM @UPDATE_TEMP_ACCESS_INCREMENT_ORG;
                    EXECUTE UPDATE_TEMP_ACCESS_INCREMENT_ORG_STMT;
                END IF;
            ELSE
                IF EXISTS(SELECT * FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE UASD_ID=CARD_ID AND ACN_ID IS NULL AND CACD_VALID_TILL IS NULL AND CACD_GUEST_CARD IS NOT NULL)THEN
                    SET @INSERT_ACCESS_INC_ACTIVE_GUEST=(SELECT CONCAT('INSERT INTO ',TEMP_ACCESS_CARD_SINGLE_UNIT,'(UNITID,UNITNO,ACTIVE_CARD)VALUES (',ACCESSUNITID,',',ACCESSUNITNO,',','"',ACT_GUEST,'"',')'));
                    PREPARE INSERT_ACCESS_INC_ACTIVE_GUEST_STMT FROM @INSERT_ACCESS_INC_ACTIVE_GUEST;
                    EXECUTE INSERT_ACCESS_INC_ACTIVE_GUEST_STMT;
                END IF;
				IF EXISTS(SELECT * FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE UASD_ID=CARD_ID AND ACN_ID IS NULL AND CACD_VALID_TILL IS NULL AND CACD_GUEST_CARD IS NULL)THEN
                    SET @INSERT_ACCESS_INC_ACTIVE_ORG=(SELECT CONCAT('INSERT INTO ',TEMP_ACCESS_CARD_SINGLE_UNIT,'(UNITID,UNITNO,ACTIVE_CARD)VALUES(',ACCESSUNITID,',',ACCESSUNITNO,',','"',ACT_CUSTOMER,'"',')'));
                    PREPARE INSERT_ACCESS_INC_ACTIVE_ORG_STMT FROM @INSERT_ACCESS_INC_ACTIVE_ORG;
                    EXECUTE INSERT_ACCESS_INC_ACTIVE_ORG_STMT;
                END IF;
            END IF;
    END IF;
END IF;
	IF EXISTS (SELECT UASD_ACCESS_CARD FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=CARD_NO AND UASD_ACCESS_INVENTORY IS NOT NULL) THEN
    IF INVENTORY_ID IS NULL THEN
        IF ACCESSID IS NULL THEN
            SET @INSERT_TEMP_ACCESS_INVEN=(SELECT CONCAT('INSERT INTO ',TEMP_ACCESS_CARD_SINGLE_UNIT,'(UNITID,UNITNO,INVENTORY_CARD)VALUES(',ACCESSUNITID,',',ACCESSUNITNO,',',CARD_NO,')'));
            PREPARE INSERT_TEMP_ACCESS_INVEN_STMT FROM @INSERT_TEMP_ACCESS_INVEN;
            EXECUTE INSERT_TEMP_ACCESS_INVEN_STMT;
            
        END IF;
        IF ACCESSID IS NOT NULL THEN
            SET @UPDATE_TEMP_ACCESS_INVEN=(SELECT CONCAT('UPDATE ',TEMP_ACCESS_CARD_SINGLE_UNIT,' SET UNITID=',ACCESSUNITID,',UNITNO=',ACCESSUNITNO,',INVENTORY_CARD = ',CARD_NO,' WHERE ID=1'));
            PREPARE UPDATE_TEMP_ACCESS_INVEN_STMT FROM @UPDATE_TEMP_ACCESS_INVEN;
            EXECUTE UPDATE_TEMP_ACCESS_INVEN_STMT;
        END IF;
    ELSE
        SET @CREATE_ACCESS_INVEN_CARD_INCREMENT= (SELECT CONCAT('(SELECT ID INTO @ACCESS_INVEN_INCREMENT FROM ',TEMP_ACCESS_CARD_SINGLE_UNIT,' WHERE INVENTORY_CARD IS NOT NULL ORDER BY ID DESC LIMIT 1)'));
        PREPARE CREATE_ACCESS_INVEN_CARD_INCREMENT_STMT FROM @CREATE_ACCESS_INVEN_CARD_INCREMENT;
        EXECUTE CREATE_ACCESS_INVEN_CARD_INCREMENT_STMT;
        SET ACCESS_CARD_INCREMENT=@ACCESS_INVEN_INCREMENT+1;
        SET @CREATE_ACCESS_INV_INCREMENT_ID= (SELECT CONCAT('SELECT ID INTO @INV_INC_ID FROM ',TEMP_ACCESS_CARD_SINGLE_UNIT,' WHERE ID=',ACCESS_CARD_INCREMENT));
        PREPARE CREATE_ACCESS_INV_INCREMENT_ID_STMT FROM @CREATE_ACCESS_INV_INCREMENT_ID;
        EXECUTE CREATE_ACCESS_INV_INCREMENT_ID_STMT;
        SET ACCESS_INV_INCREMENT_ID=@INV_INC_ID;
            IF  ACCESS_INV_INCREMENT_ID IS NOT NULL THEN
                SET @UPDATE_TEMP_ACCESS_INVENTORY=(SELECT CONCAT('UPDATE ',TEMP_ACCESS_CARD_SINGLE_UNIT,' SET UNITID=',ACCESSUNITID,',UNITNO=',ACCESSUNITNO,',INVENTORY_CARD =',CARD_NO,' WHERE ID=',ACCESS_CARD_INCREMENT));
                PREPARE UPDATE_TEMP_ACCESS_INVENTORY_STMT FROM @UPDATE_TEMP_ACCESS_INVENTORY;
                EXECUTE UPDATE_TEMP_ACCESS_INVENTORY_STMT;
            ELSE
                SET @INSERT_TEMP_ACCESS_INVENTORY=(SELECT CONCAT('INSERT INTO ',TEMP_ACCESS_CARD_SINGLE_UNIT,'(UNITID,UNITNO,INVENTORY_CARD)VALUES(',ACCESSUNITID,',',ACCESSUNITNO,',',CARD_NO,')'));
                PREPARE INSERT_TEMP_ACCESS_INVENTORY_STMT FROM @INSERT_TEMP_ACCESS_INVENTORY;
                EXECUTE INSERT_TEMP_ACCESS_INVENTORY_STMT;
            END IF;
    END IF;
  END IF;
IF EXISTS (SELECT UASD_ACCESS_CARD FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=CARD_NO AND UASD_ACCESS_LOST IS NOT NULL) THEN
    IF LOST_ID IS NULL THEN
        IF ACCESSID IS NULL THEN
            IF EXISTS (SELECT * FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE ACN_ID IN (SELECT ACN_ID FROM ACCESS_CONFIGURATION WHERE ACN_ID!=4) AND UASD_ID=CARD_ID AND CACD_GUEST_CARD IS NOT NULL)THEN
                SET @INSERT_TEMP_ACCESS_LOST_GUEST=(SELECT CONCAT('INSERT INTO ',TEMP_ACCESS_CARD_SINGLE_UNIT,'(UNITID,UNITNO,CUSTOMER_LOST_CARD)VALUES(',ACCESSUNITID,',',ACCESSUNITNO,',','"',LOST_GUEST,'"',')'));
                PREPARE INSERT_TEMP_ACCESS_LOST_GUEST_STMT FROM @INSERT_TEMP_ACCESS_LOST_GUEST;
                EXECUTE INSERT_TEMP_ACCESS_LOST_GUEST_STMT;
                SET @UPDATE_TEMP_ACESS_REASON=(SELECT CONCAT('UPDATE ',TEMP_ACCESS_CARD_SINGLE_UNIT,' SET REASON=','"',LOST_REASON,'"',' WHERE ID=',ACCESS_CARD_COUNT));
                PREPARE UPDATE_TEMP_ACESS_REASON_STMT FROM @UPDATE_TEMP_ACESS_REASON;
                EXECUTE UPDATE_TEMP_ACESS_REASON_STMT;
			END IF;
            IF EXISTS (SELECT * FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE ACN_ID IN (SELECT ACN_ID FROM ACCESS_CONFIGURATION WHERE ACN_ID!=4) AND UASD_ID=CARD_ID AND CACD_GUEST_CARD IS NULL)THEN
				SET @INSERT_TEMP_ACCESS_LOST_ORIGINAL=(SELECT CONCAT('INSERT INTO ',TEMP_ACCESS_CARD_SINGLE_UNIT,'(UNITID,UNITNO,CUSTOMER_LOST_CARD)VALUES(',ACCESSUNITID,',',ACCESSUNITNO,',','"',LOST_CUSTOMER,'"',')'));
                PREPARE INSERT_TEMP_ACCESS_LOST_ORIGINAL_STMT FROM @INSERT_TEMP_ACCESS_LOST_ORIGINAL;
                EXECUTE INSERT_TEMP_ACCESS_LOST_ORIGINAL_STMT;
                SET @UPDATE_TEMP_ACCESS_LOST_REASON=(SELECT CONCAT('UPDATE ',TEMP_ACCESS_CARD_SINGLE_UNIT,' SET REASON=','"',LOST_REASON,'"',' WHERE ID=',ACCESS_CARD_COUNT));
                PREPARE UPDATE_TEMP_ACCESS_LOST_REASON_STMT FROM @UPDATE_TEMP_ACCESS_LOST_REASON;
                EXECUTE UPDATE_TEMP_ACCESS_LOST_REASON_STMT;
            END IF;
        END IF;
		IF ACCESSID IS NOT NULL  THEN
			IF EXISTS (SELECT * FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE ACN_ID IN (SELECT ACN_ID FROM ACCESS_CONFIGURATION WHERE ACN_ID!=4) AND UASD_ID=CARD_ID AND CACD_GUEST_CARD IS NOT NULL)THEN
				SET @UPDATE_TEMP_ACCESS_LOST_GUEST=(SELECT CONCAT('UPDATE ',TEMP_ACCESS_CARD_SINGLE_UNIT,' SET UNITID=',ACCESSUNITID,',UNITNO=',ACCESSUNITNO,',CUSTOMER_LOST_CARD =','"',LOST_GUEST,'"',' WHERE ID=1'));
				PREPARE UPDATE_TEMP_ACCESS_LOST_GUEST_STMT FROM @UPDATE_TEMP_ACCESS_LOST_GUEST;
				EXECUTE UPDATE_TEMP_ACCESS_LOST_GUEST_STMT;
				SET @UPDATE_TEMP_ACCESS_LOST_GUEST_REASON=(SELECT CONCAT('UPDATE ',TEMP_ACCESS_CARD_SINGLE_UNIT,' SET REASON=','"',LOST_REASON,'"',' WHERE ID=1'));
				PREPARE UPDATE_TEMP_ACCESS_LOST_GUEST_REASON_STMT FROM @UPDATE_TEMP_ACCESS_LOST_GUEST_REASON;
				EXECUTE UPDATE_TEMP_ACCESS_LOST_GUEST_REASON_STMT;
			END IF;
			IF EXISTS (SELECT * FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE ACN_ID IN (SELECT ACN_ID FROM ACCESS_CONFIGURATION WHERE ACN_ID!=4) AND UASD_ID=CARD_ID AND CACD_GUEST_CARD IS  NULL)THEN
				SET @UPDATE_ACCESS_LOST_ORIGINAL=(SELECT CONCAT('UPDATE ',TEMP_ACCESS_CARD_SINGLE_UNIT,' SET UNITID=',ACCESSUNITID,',UNITNO=',ACCESSUNITNO,',CUSTOMER_LOST_CARD =','"',LOST_CUSTOMER,'"',' WHERE ID=1'));
				PREPARE UPDATE_ACCESS_LOST_ORIGINAL_STMT FROM @UPDATE_ACCESS_LOST_ORIGINAL;
				EXECUTE UPDATE_ACCESS_LOST_ORIGINAL_STMT;
				SET @UPDATE_ACCESS_LOST_ORG_REASON=(SELECT CONCAT('UPDATE ',TEMP_ACCESS_CARD_SINGLE_UNIT,' SET REASON=','"',LOST_REASON,'"',' WHERE ID=1'));
				PREPARE UPDATE_ACCESS_LOST_ORG_REASON_STMT FROM @UPDATE_ACCESS_LOST_ORG_REASON;
				EXECUTE UPDATE_ACCESS_LOST_ORG_REASON_STMT;
			END IF;
		END IF;
	ELSE
		SET @CREATE_ACCESS_LOST_CARD_INCREMENT= (SELECT CONCAT('(SELECT ID INTO @ACCESS_LOST_INCREMENT FROM ',TEMP_ACCESS_CARD_SINGLE_UNIT,' WHERE CUSTOMER_LOST_CARD IS NOT NULL ORDER BY ID DESC LIMIT 1)'));
        PREPARE CREATE_ACCESS_LOST_CARD_INCREMENT_STMT FROM @CREATE_ACCESS_LOST_CARD_INCREMENT;
        EXECUTE CREATE_ACCESS_LOST_CARD_INCREMENT_STMT;
        SET ACCESS_CARD_INCREMENT=@ACCESS_LOST_INCREMENT+1;
        SET @CREATE_ACCESS_LOST_INCREMENT_ID= (SELECT CONCAT('SELECT ID INTO @LOST_INC_ID FROM ',TEMP_ACCESS_CARD_SINGLE_UNIT,' WHERE ID=',ACCESS_CARD_INCREMENT));
        PREPARE CREATE_ACCESS_LOST_INCREMENT_ID_STMT FROM @CREATE_ACCESS_LOST_INCREMENT_ID;
        EXECUTE CREATE_ACCESS_LOST_INCREMENT_ID_STMT;
        SET ACCESS_LOST_INCREMENT_ID=@LOST_INC_ID;
        IF ACCESS_LOST_INCREMENT_ID IS NOT NULL THEN
            IF EXISTS (SELECT * FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE ACN_ID IN (SELECT ACN_ID FROM ACCESS_CONFIGURATION WHERE ACN_ID!=4) AND UASD_ID=CARD_ID AND CACD_GUEST_CARD IS NOT NULL)THEN
                SET @UPDATE_ACESS_LOST_GUEST=(SELECT CONCAT('UPDATE ',TEMP_ACCESS_CARD_SINGLE_UNIT,' SET UNITID=',ACCESSUNITID,',UNITNO=',ACCESSUNITNO,',CUSTOMER_LOST_CARD =','"',LOST_GUEST,'"',' WHERE ID=',ACCESS_CARD_INCREMENT));
				PREPARE UPDATE_ACESS_LOST_GUEST_STMT FROM @UPDATE_ACESS_LOST_GUEST;
				EXECUTE UPDATE_ACESS_LOST_GUEST_STMT;
                SET @UPDATE_ACCESS_LOST_GUEST_REASON=(SELECT CONCAT('UPDATE ',TEMP_ACCESS_CARD_SINGLE_UNIT,' SET REASON=','"',LOST_REASON,'"',' WHERE ID=',ACCESS_CARD_INCREMENT));
				PREPARE UPDATE_ACCESS_LOST_GUEST_REASON_STMT FROM @UPDATE_ACCESS_LOST_GUEST_REASON;
				EXECUTE UPDATE_ACCESS_LOST_GUEST_REASON_STMT;
            END IF;
			IF EXISTS (SELECT * FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE ACN_ID IN (SELECT ACN_ID FROM ACCESS_CONFIGURATION WHERE ACN_ID!=4) AND UASD_ID=CARD_ID AND CACD_GUEST_CARD IS NULL)THEN
                SET @UPDATE_ACCESS_LOST_ORG=(SELECT CONCAT('UPDATE ',TEMP_ACCESS_CARD_SINGLE_UNIT,' SET UNITID=',ACCESSUNITID,',UNITNO=',ACCESSUNITNO,',CUSTOMER_LOST_CARD =','"',LOST_CUSTOMER,'"',' WHERE ID=',ACCESS_CARD_INCREMENT));
				PREPARE UPDATE_ACCESS_LOST_ORG_STMT FROM @UPDATE_ACCESS_LOST_ORG;
				EXECUTE UPDATE_ACCESS_LOST_ORG_STMT;
                SET @UPDATE_ACCESS_LOST_ORG_REASON=(SELECT CONCAT('UPDATE ',TEMP_ACCESS_CARD_SINGLE_UNIT,' SET REASON=','"',LOST_REASON,'"',' WHERE ID=',ACCESS_CARD_INCREMENT));
				PREPARE UPDATE_ACCESS_LOST_ORG_REASON_STMT FROM @UPDATE_ACCESS_LOST_ORG_REASON;
				EXECUTE UPDATE_ACCESS_LOST_ORG_REASON_STMT;
            END IF;
        ELSE
            IF EXISTS (SELECT * FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE ACN_ID IN (SELECT ACN_ID FROM ACCESS_CONFIGURATION WHERE ACN_ID!=4) AND UASD_ID=CARD_ID AND CACD_GUEST_CARD IS NOT NULL)THEN
                SET @INSERT_ACCESS_LOST_GUEST=(SELECT CONCAT('INSERT INTO ',TEMP_ACCESS_CARD_SINGLE_UNIT,'(UNITID,UNITNO,CUSTOMER_LOST_CARD)VALUES(',ACCESSUNITID,',',ACCESSUNITNO,',','"',LOST_GUEST,'"',')'));
				PREPARE INSERT_ACCESS_LOST_GUEST_STMT FROM @INSERT_ACCESS_LOST_GUEST;
				EXECUTE INSERT_ACCESS_LOST_GUEST_STMT;
                SET @UPDATE_ACCESS_LOST_GUEST_REASON=(SELECT CONCAT('UPDATE ',TEMP_ACCESS_CARD_SINGLE_UNIT,' SET REASON=','"',LOST_REASON,'"',' WHERE ID=',ACCESS_CARD_INCREMENT));
				PREPARE UPDATE_ACCESS_LOST_GUEST_REASON_STMT FROM @UPDATE_ACCESS_LOST_GUEST_REASON;
				EXECUTE UPDATE_ACCESS_LOST_GUEST_REASON_STMT;
            END IF;
			IF EXISTS (SELECT * FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE ACN_ID IN (SELECT ACN_ID FROM ACCESS_CONFIGURATION WHERE ACN_ID!=4) AND UASD_ID=CARD_ID AND CACD_GUEST_CARD IS NULL)THEN
                SET @INSERT_ACCESS_LOST_ORG=(SELECT CONCAT('INSERT INTO ',TEMP_ACCESS_CARD_SINGLE_UNIT,'(UNITID,UNITNO,CUSTOMER_LOST_CARD)VALUES(',ACCESSUNITID,',',ACCESSUNITNO,',','"',LOST_CUSTOMER,'"',')'));
				PREPARE INSERT_ACCESS_LOST_ORG_STMT FROM @INSERT_ACCESS_LOST_ORG;
				EXECUTE INSERT_ACCESS_LOST_ORG_STMT;
                SET @UPDATE_ACCESS_LOST_ORG_REASON=(SELECT CONCAT('UPDATE ',TEMP_ACCESS_CARD_SINGLE_UNIT,' SET REASON=','"',LOST_REASON,'"',' WHERE ID=',ACCESS_CARD_INCREMENT));
				PREPARE UPDATE_ACCESS_LOST_ORG_REASON_STMT FROM @UPDATE_ACCESS_LOST_ORG_REASON;
				EXECUTE UPDATE_ACCESS_LOST_ORG_REASON_STMT;
            END IF;
        END IF;
    END IF;
END IF;
	IF EXISTS (SELECT UASD_ACCESS_CARD FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=CARD_NO AND UASD_ACCESS_LOST IS NOT NULL) THEN
	IF EMP_ID IS NULL THEN
		IF ACCESSID IS NULL THEN 
			IF NOT EXISTS(SELECT UASD_ID FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE ACN_ID IN (SELECT ACN_ID FROM ACCESS_CONFIGURATION WHERE ACN_ID!=4) AND UASD_ID=CARD_ID)THEN
				SET @INSERT_EMP_ORG=(SELECT CONCAT('INSERT INTO ',TEMP_ACCESS_CARD_SINGLE_UNIT,'(UNITID,UNITNO,EMPLOYEE_LOST_CARD)VALUES(',ACCESSUNITID,',',ACCESSUNITNO,',',CARD_NO,')'));
				PREPARE INSERT_EMP_ORG_STMT FROM @INSERT_EMP_ORG;
				EXECUTE INSERT_EMP_ORG_STMT;
			END IF;
		END IF;
		IF ACCESSID IS NOT NULL THEN 
			IF NOT EXISTS(SELECT UASD_ID FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE ACN_ID IN (SELECT ACN_ID FROM ACCESS_CONFIGURATION WHERE ACN_ID!=4) AND UASD_ID=CARD_ID)THEN
				SET @UPDATE_EMP_ORG=(SELECT CONCAT('UPDATE ',TEMP_ACCESS_CARD_SINGLE_UNIT,' SET UNITID=',ACCESSUNITID,',UNITNO=',ACCESSUNITNO,',EMPLOYEE_LOST_CARD =',CARD_NO,' WHERE ID=1'));
				PREPARE UPDATE_EMP_ORG_STMT FROM @UPDATE_EMP_ORG;
				EXECUTE UPDATE_EMP_ORG_STMT;
			END IF;
		END IF;
ELSE
		SET @CREATE_ACCESS_EMP_CARD_INCREMENT= (SELECT CONCAT('(SELECT ID INTO @ACCESS_EMP_INCREMENT FROM ',TEMP_ACCESS_CARD_SINGLE_UNIT,' WHERE EMPLOYEE_LOST_CARD IS NOT NULL ORDER BY ID DESC LIMIT 1)'));
        PREPARE CREATE_ACCESS_EMP_CARD_INCREMENT_STMT FROM @CREATE_ACCESS_EMP_CARD_INCREMENT;
        EXECUTE CREATE_ACCESS_EMP_CARD_INCREMENT_STMT;
        SET ACCESS_CARD_INCREMENT=@ACCESS_EMP_INCREMENT+1;
        SET @CREATE_ACCESS_EMP_INCREMENT_ID= (SELECT CONCAT('SELECT ID INTO @ACC_EMP_ID FROM ',TEMP_ACCESS_CARD_SINGLE_UNIT,' WHERE ID=',ACCESS_CARD_INCREMENT));
        PREPARE CREATE_ACCESS_EMP_INCREMENT_ID_STMT FROM @CREATE_ACCESS_EMP_INCREMENT_ID;
        EXECUTE CREATE_ACCESS_EMP_INCREMENT_ID_STMT;
        SET ACCESS_EMP_INCREMENT_ID=@ACC_EMP_ID;
		IF ACCESS_EMP_INCREMENT_ID IS NOT NULL THEN
			IF NOT EXISTS(SELECT UASD_ID FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE ACN_ID IN (SELECT ACN_ID FROM ACCESS_CONFIGURATION WHERE ACN_ID!=4) AND UASD_ID=CARD_ID)THEN
				SET @UPDATE_ACCESS_EMP=(SELECT CONCAT('UPDATE ',TEMP_ACCESS_CARD_SINGLE_UNIT,' SET UNITID=',ACCESSUNITID,',UNITNO=',ACCESSUNITNO,',EMPLOYEE_LOST_CARD = ',CARD_NO,' WHERE ID=',ACCESS_CARD_INCREMENT));
				PREPARE UPDATE_ACCESS_EMP_STMT FROM @UPDATE_ACCESS_EMP;
				EXECUTE UPDATE_ACCESS_EMP_STMT;
			END IF;
		ELSE
		IF NOT EXISTS(SELECT UASD_ID FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE ACN_ID IN (SELECT ACN_ID FROM ACCESS_CONFIGURATION WHERE ACN_ID!=4) AND UASD_ID=CARD_ID)THEN
			SET @IN_ACCESS_EMP=(SELECT CONCAT('INSERT INTO ',TEMP_ACCESS_CARD_SINGLE_UNIT,'(UNITID,UNITNO,EMPLOYEE_LOST_CARD)VALUES(',ACCESSUNITID,',',ACCESSUNITNO,',',CARD_NO,')'));
			PREPARE IN_ACCESS_EMP_STMT FROM @IN_ACCESS_EMP;
			EXECUTE IN_ACCESS_EMP_STMT;
		END IF;
END IF;
END IF;
END IF;
SET @ACCESS_CARD_ID=NULL;
SET @ACCESS_CARD_NO=NULL;
SET @ACCESS_ACTIVE_ID=NULL;
SET @ACCESS_INVENTORY_ID=NULL;
SET @ACCESS_LOST_ID=NULL;
SET @ACCESS_EMPLOYEE_ID=NULL;
SET @ACCESS_ID=NULL;
SET @INV_INC_ID=NULL;
SET @ACC_EMP_ID=NULL;
SET @LOST_INC_ID=NULL;
SET @ACTIVE_INC_ID=NULL;
SET @ACCESS_UNITID=NULL;
SET @ACCESS_UNITNO=NULL;
SET @ACCESS_EMP_INCREMENT=NULL;
SET @CUSTOMERACTVALUE=NULL;
SET @CUSTOMERLOSTVALUE=NULL;
SET @LOSTCUSTOMERNAME=NULL;
SET @ACTCUSTOMERNAME=NULL;
SET @AMIN_ID=NULL;
SET @AMAX_ID=NULL;
SET @LMIN_ID=NULL;
SET @LMAX_ID=NULL;
SET ACCESS_CARD_COUNT=ACCESS_CARD_COUNT+1;
END WHILE;
SET @DROP_TEMP_ACCESS=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_ACCESS));
PREPARE DROP_TEMP_ACCESS_STMT FROM @DROP_TEMP_ACCESS;
EXECUTE DROP_TEMP_ACCESS_STMT;
SET @INSERT_ALL_UNIT=(SELECT CONCAT('INSERT INTO ',TEMP_ACCESS_CARD_ALL_UNIT,' SELECT * FROM ',TEMP_ACCESS_CARD_SINGLE_UNIT));
PREPARE INSERT_ALL_UNIT_STMT FROM @INSERT_ALL_UNIT;
EXECUTE INSERT_ALL_UNIT_STMT;
SET ACCESS_CARD_COUNT=1;
SET @DROP_ACCESS_SINGLE_UNIT=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_ACCESS_CARD_SINGLE_UNIT));
PREPARE DROP_ACCESS_SINGLE_UNIT_STMT FROM @DROP_ACCESS_SINGLE_UNIT;
EXECUTE DROP_ACCESS_SINGLE_UNIT_STMT;
SET @DROP_TEMP_CUST=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_CUST));
PREPARE DROP_TEMP_CUST_STMT FROM @DROP_TEMP_CUST;
EXECUTE DROP_TEMP_CUST_STMT;
SET UNITNO_COUNT=UNITNO_COUNT+1;
END WHILE;
SET @DROP_TEMP_CUST=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_CUST));
PREPARE DROP_TEMP_CUST_STMT FROM @DROP_TEMP_CUST;
EXECUTE DROP_TEMP_CUST_STMT;
SET @DROP_ACCESS_SINGLE_UNIT=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_ACCESS_CARD_SINGLE_UNIT));
PREPARE DROP_ACCESS_SINGLE_UNIT_STMT FROM @DROP_ACCESS_SINGLE_UNIT;
EXECUTE DROP_ACCESS_SINGLE_UNIT_STMT;
SET @DROP_TEMP_ACCESS=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_ACCESS));
PREPARE DROP_TEMP_ACCESS_STMT FROM @DROP_TEMP_ACCESS;
EXECUTE DROP_TEMP_ACCESS_STMT;
SET @DROP_TEMP_UNITNO=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_UNITNO));
PREPARE DROP_TEMP_UNITNO_STMT FROM @DROP_TEMP_UNITNO;
EXECUTE DROP_TEMP_UNITNO_STMT;

COMMIT;
END;
/*
CALL SP_ACCESS_CARD_SEARCH_BY_ALL_UNIT('admin@expatsint.com' ,@TEMP_ACCESS_CARD_ALL_UNIT,@FLAG);
SELECT @TEMP_ACCESS_CARD_ALL_UNIT;
SELECT @FLAG;
SELECT*FROM TEMP_ACCESS_CARD_ALL_UNIT_20140530171827_1;
*/