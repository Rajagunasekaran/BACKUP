-- VERSION 1.3 TARTDATE:23/09/2014 ENDDATE:23/09/2014 ISSUE NO:836 COMMENT NO:61 DESC:IMPLIMENTED ERROR MESSAGE GET FROM DB. DONE BY :RAJA
-- version 1.2-->startdate:15/07/2014  enddate:15/07/2014 -->issueno:825 comment:#20-->desc:CHANGED QUERY FOR NEW ROW FOR EACH CARD -->doneby:DHIVYA.A
-- version 1.1-->startdate:31/05/2014  enddate:02/06/2014 -->issueno:825 comment:#16-->desc:ADDED unitno -->doneby:DHIVYA.A
-- version 1.0-->startdate:27/05/2014  enddate:30/05/2014 -->issueno:825 -->desc:ADDED ERROR MESSAGE -->doneby:SASIKALA.D
-- version 0.9-->startdate:20/05/2014  enddate:20/05/2014 -->issueno:825 -->desc:ADDED TERMINATED CARD FOR A CUSTOMER -->doneby:DHIVYA.A
-- version 0.8-->startdate:02/05/2014  enddate:02/05/2014 -->issueno:817 -->desc:SEARCH BY CUSTOMER SP DONE DYNAMICALLY -->doneby:DHIVYA.A
-- version 0.7-->startdate:05/12/2013  enddate:05/12/2013-->issueno:615 comment no:#33-->desc:added condition in customer old card checking
-- doneby:DHIVYA.A
--  version 0.6-->startdate:11/11/2013  enddate:11/11/2013-->issueno:636 comment no:#47-->desc:changed sp name and temp table name
-- doneby:DHIVYA.A
--  version 0.5-->startdate:11/10/2013  enddate:11/10/2013-->issueno:636 -->desc:added comments
-- doneby:DHIVYA.A
-- version 0.4 startdate:13.09/2013 end date:13/9/2013 issue no: 348 comment no:#44 desc:combined temp_access_customer sp into access_customer sp  done by:DHIVYA.A
-- version 0.3 startdate:12.09/2013 end date:12/9/2013 issue no: 348 comment no:#42 desc:created temp table(access,customer_access) for customer id done by:DHIVYA.A
-- version 0.2 startdate:03.09/2013 end date:10/9/2013 issue no:345 comment no:#26 desc:changed access_card_unit sp using cursor concept done by:DHIVYA.A
-- created_date:07.06.2013,issue_no:348,version 0.1,description: TEMPORARY  TABLE FOR REVER DATA ACCESS FOR CUSTOMER_NAME,created by:loganathan
DROP PROCEDURE IF EXISTS SP_ACCESS_CARD_SEARCH_BY_CUSTOMER;
CREATE PROCEDURE SP_ACCESS_CARD_SEARCH_BY_CUSTOMER(IN CUSTOMER_NO INTEGER,IN USERSTAMP VARCHAR(50),OUT TEMP_ACCESS_CARD_CUSTOMER TEXT,OUT FLAG_MESSAGE TEXT)
BEGIN
-- variable declaration
DECLARE MAX_CARD INT;
DECLARE ACCESS_CARD_COUNT INT DEFAULT 1;
DECLARE ACCESS_CARD_INCREMENT INT ;
DECLARE ACCESS_ACTIVE_ID INTEGER;
DECLARE ACCESS_LOST_ID INTEGER;
DECLARE D_ACCESS TEXT;
DECLARE ACCESS TEXT;
DECLARE D_TEMP_ACCESS_CARD_CUSTOMER TEXT;
DECLARE ACCESSID INTEGER;
DECLARE CARDNO INTEGER;
DECLARE ACTIVE_INCREMENT_ID INTEGER;
DECLARE LOST_INCREMENT_ID INTEGER;
DECLARE USERSTAMP_ID INTEGER;
DECLARE ACTIVE_CARD_COUNT INTEGER;
DECLARE LOST_CARD_COUNT INTEGER;
DECLARE TERM_CARD_COUNT INTEGER;
DECLARE ACCESS_UASD_ID INTEGER;
DECLARE UASD_LOST TEXT;
DECLARE UASD_ACTIVE TEXT;
DECLARE CARD_UNIT_NO INTEGER;
DECLARE MAX_ID INTEGER;
DECLARE ACCESSACNID INTEGER;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
ROLLBACK;
SET @DROP_ACCESS=(SELECT CONCAT('DROP TABLE IF EXISTS ',ACCESS));
PREPARE DROP_ACCESS_STMT FROM @DROP_ACCESS;
EXECUTE DROP_ACCESS_STMT;
END;
START TRANSACTION;
SET FLAG_MESSAGE='';
-- create temp table for storing access_card for passing customer_id
CALL SP_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULDID);
SET USERSTAMP_ID=(SELECT @ULDID);
SET D_ACCESS=(SELECT CONCAT('TEMP_ACCESS','_',SYSDATE()));
SET D_ACCESS=(SELECT REPLACE(D_ACCESS,' ',''));
SET D_ACCESS=(SELECT REPLACE(D_ACCESS,'-',''));
SET D_ACCESS=(SELECT REPLACE(D_ACCESS,':',''));
SET ACCESS=(SELECT CONCAT(D_ACCESS,'_',USERSTAMP_ID));
SET @CREATE_ACCESS=(SELECT CONCAT('CREATE TABLE ',ACCESS,'
(ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,ACCESS_CARD VARCHAR(7),ACNID INTEGER)'));
PREPARE CREATE_ACCESS_STMT FROM @CREATE_ACCESS;
EXECUTE CREATE_ACCESS_STMT;
-- create temp table for storing active_card,old_card,reason,comments for passing customerid
SET D_TEMP_ACCESS_CARD_CUSTOMER=(SELECT CONCAT('TEMP_ACCESS_CARD_CUSTOMER','_',SYSDATE()));
SET D_TEMP_ACCESS_CARD_CUSTOMER=(SELECT REPLACE(D_TEMP_ACCESS_CARD_CUSTOMER,' ',''));
SET D_TEMP_ACCESS_CARD_CUSTOMER=(SELECT REPLACE(D_TEMP_ACCESS_CARD_CUSTOMER,'-',''));
SET D_TEMP_ACCESS_CARD_CUSTOMER=(SELECT REPLACE(D_TEMP_ACCESS_CARD_CUSTOMER,':',''));
SET TEMP_ACCESS_CARD_CUSTOMER=(SELECT CONCAT(D_TEMP_ACCESS_CARD_CUSTOMER,'_',USERSTAMP_ID));
SET @CREATE_TEMP_ACCESS_CUS=(SELECT CONCAT('CREATE TABLE ',TEMP_ACCESS_CARD_CUSTOMER,'
(
   ID INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
   UNITNO INTEGER(4) UNSIGNED ZEROFILL,
   ACTIVE_CARD TEXT,
   OLD_CARD TEXT,
   REASON VARCHAR(20),
   COMMENTS TEXT
)'));
PREPARE CREATE_TEMP_ACCESS_CUS_STMT FROM @CREATE_TEMP_ACCESS_CUS;
EXECUTE CREATE_TEMP_ACCESS_CUS_STMT;
-- inserting access_card for passing customer_id in ACCESS table
SET @INSERT_ACCESS=(SELECT CONCAT('INSERT INTO ',ACCESS,'(ACCESS_CARD,ACNID)SELECT U.UASD_ACCESS_CARD,CACD.ACN_ID FROM UNIT_ACCESS_STAMP_DETAILS U,CUSTOMER_ACCESS_CARD_DETAILS CACD
WHERE  U.UASD_ID=CACD.UASD_ID AND CACD.CUSTOMER_ID=',CUSTOMER_NO));
PREPARE INSERT_ACCESS_STMT FROM @INSERT_ACCESS;
EXECUTE INSERT_ACCESS_STMT;
SET @MAXCARD=NULL;
-- set MAX_CARD as MAX of ID from ACCESS table
SET @SET_MAX_CARD=(SELECT CONCAT('SELECT MAX(ID) INTO @MAXCARD FROM ',ACCESS));
PREPARE SET_MAX_CARD_STMT FROM @SET_MAX_CARD;
EXECUTE SET_MAX_CARD_STMT;
SET MAX_CARD=@MAXCARD;
SET @COUNT_INC=1;
    WHILE (ACCESS_CARD_COUNT<=MAX_CARD) DO
		
		SET @SET_ACCESS_CARD=(SELECT CONCAT('SELECT ACCESS_CARD INTO @CARD_NO FROM ',ACCESS,' WHERE ID=',ACCESS_CARD_COUNT ));
        PREPARE SET_ACCESS_CARD_STMT FROM @SET_ACCESS_CARD;
        EXECUTE SET_ACCESS_CARD_STMT;
        SET CARDNO=@CARD_NO ;
        SET CARD_UNIT_NO=(SELECT UNIT_NO FROM UNIT WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=CARDNO));
        SET @SET_UASD_ID=(SELECT CONCAT('SELECT UASD_ID INTO @UASDID FROM UNIT_ACCESS_STAMP_DETAILS  WHERE UASD_ACCESS_CARD=',CARDNO));
        PREPARE SET_UASD_ID_STMT FROM @SET_UASD_ID;
        EXECUTE SET_UASD_ID_STMT;
        SET ACCESS_UASD_ID=@UASDID;
        SET @SET_UASD_ACTIVE_VALUE=(SELECT CONCAT('SELECT UASD_ACCESS_ACTIVE INTO @UASDACTIVE FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ID=',ACCESS_UASD_ID));
        PREPARE SET_UASD_ID_STMT FROM @SET_UASD_ACTIVE_VALUE;
        EXECUTE SET_UASD_ID_STMT;
        SET UASD_ACTIVE=@UASDACTIVE;
        SET @SET_UASD_LOST_VALUE=(SELECT CONCAT('SELECT UASD_ACCESS_LOST INTO @UASDLOST FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ID=',ACCESS_UASD_ID));
        PREPARE SET_UASD_ID_STMT FROM @SET_UASD_LOST_VALUE;
        EXECUTE SET_UASD_ID_STMT;
        SET UASD_LOST=@UASDLOST;
        IF UASD_ACTIVE='X' THEN
        SET @ACTIVE_CARD_COUNT_VALUE=(SELECT CONCAT('SELECT COUNT(UASD_ID) INTO @ACTIVECARDCOUNT FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE ACN_ID IS NULL AND CACD_VALID_TILL IS NULL AND UASD_ID=',ACCESS_UASD_ID));
        PREPARE SET_ACTIVE_CARD_COUNT_STMT FROM @ACTIVE_CARD_COUNT_VALUE;
        EXECUTE SET_ACTIVE_CARD_COUNT_STMT;
        SET ACTIVE_CARD_COUNT=@ACTIVECARDCOUNT;
        END IF;
        IF UASD_LOST='X' THEN
        SET @SET_LOST_CARD_COUNT=(SELECT CONCAT('SELECT COUNT(UASD_ID) INTO @LOSTCARDCOUNT FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE ACN_ID!=4 AND CACD_VALID_TILL IS NOT  NULL AND UASD_ID=',ACCESS_UASD_ID));
        PREPARE SET_ACTIVE_CARD_COUNT_STMT FROM @SET_LOST_CARD_COUNT;
        EXECUTE SET_ACTIVE_CARD_COUNT_STMT;
        SET LOST_CARD_COUNT=@LOSTCARDCOUNT;       
        END IF;
        IF (ACTIVE_CARD_COUNT>1)  THEN
        SET @CUST_ID=CUSTOMER_NO;
        SET @TEMP_CUSTOMER_NAME=(SELECT CONCAT(CUSTOMER_FIRST_NAME,' ',CUSTOMER_LAST_NAME)AS CUSTOMERNAME FROM CUSTOMER WHERE CUSTOMER_ID=@CUST_ID);
        SET FLAG_MESSAGE=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=573);
        SET FLAG_MESSAGE=(SELECT REPLACE(FLAG_MESSAGE,'[CARD_NO]',CARDNO));
        SET FLAG_MESSAGE=(SELECT REPLACE(FLAG_MESSAGE,'[ACTCUSTNAME]',@TEMP_CUSTOMER_NAME)); 
        END IF;
        IF( LOST_CARD_COUNT>1) THEN
        SET @CUST_ID=CUSTOMER_NO;
        SET @TEMP_CUSTOMER_NAME=(SELECT CONCAT(CUSTOMER_FIRST_NAME,' ',CUSTOMER_LAST_NAME)AS CUSTOMERNAME FROM CUSTOMER WHERE CUSTOMER_ID=@CUST_ID);
        SET FLAG_MESSAGE=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=573);
        SET FLAG_MESSAGE=(SELECT REPLACE(FLAG_MESSAGE,'[CARD_NO]',CARDNO));
        SET FLAG_MESSAGE=(SELECT REPLACE(FLAG_MESSAGE,'[ACTCUSTNAME]',@TEMP_CUSTOMER_NAME));
        END IF;
		SET @SETACNID=(SELECT CONCAT('SELECT ACNID INTO @AC_ACNID FROM ',ACCESS,' WHERE ID=',ACCESS_CARD_COUNT));
		PREPARE SETACNIDSTMT FROM @SETACNID;
		EXECUTE SETACNIDSTMT;
		SET ACCESSACNID=@AC_ACNID;
    -- condition for checking ACCESS_CARD in ACCESS table is exists in CUSTOMER_ACCESS_CARD_DETAILS table
		IF ACCESSACNID IS  NULL THEN	
        IF EXISTS (SELECT CACD.UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS UASD  JOIN CUSTOMER_ACCESS_CARD_DETAILS CACD
        ON UASD.UASD_ACCESS_CARD=CARDNO AND CACD.CUSTOMER_ID=CUSTOMER_NO AND CACD.CACD_VALID_TILL IS NULL AND UASD.UASD_ID=CACD.UASD_ID) THEN
			IF EXISTS(SELECT * FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE CUSTOMER_ID=CUSTOMER_NO AND UASD_ID=ACCESS_UASD_ID AND ACN_ID IS NULL AND CACD_GUEST_CARD IS NOT NULL)THEN
				-- insert query for TEMP_ACCESS_CARD_CUSTOMER table ACTIVE_CARD
		
                SET @INSERT_GUEST_TEMP_ACTIVE_ACCESS_CUSTOMER=(SELECT CONCAT('INSERT INTO ',TEMP_ACCESS_CARD_CUSTOMER,'(UNITNO,ACTIVE_CARD) VALUES(',CARD_UNIT_NO,',','"',CARDNO,' - GUEST','"',')'));
                PREPARE INSERT_GUEST_TEMP_ACTIVE_ACCESS_CUSTOMER_STMT FROM @INSERT_GUEST_TEMP_ACTIVE_ACCESS_CUSTOMER;
                EXECUTE INSERT_GUEST_TEMP_ACTIVE_ACCESS_CUSTOMER_STMT;
            END IF;
            IF EXISTS(SELECT * FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE CUSTOMER_ID=CUSTOMER_NO AND UASD_ID=ACCESS_UASD_ID AND ACN_ID IS NULL AND CACD_GUEST_CARD IS NULL)THEN
				-- insert query for TEMP_ACCESS_CARD_CUSTOMER table ACTIVE_CARD
				SET @COUNT_INC=@COUNT_INC+1;
				SET @INSERT_TEMP_ACTIVE_ACCESS_CUSTOMER=(SELECT CONCAT('INSERT INTO ',TEMP_ACCESS_CARD_CUSTOMER,'(UNITNO,ACTIVE_CARD) VALUES(',CARD_UNIT_NO,',',CARDNO,')'));
                PREPARE INSERT_TEMP_ACTIVE_ACCESS_CUSTOMER_STMT FROM @INSERT_TEMP_ACTIVE_ACCESS_CUSTOMER;
                EXECUTE INSERT_TEMP_ACTIVE_ACCESS_CUSTOMER_STMT;
            END IF;
        END IF;
		END IF;
  
        -- condition for checking ACCESS_CARD in ACCESS table is exists in CUSTOMER_ACCESS_CARD_DETAILS table
		IF ACCESSACNID IS NOT NULL THEN	
			IF EXISTS (SELECT CACD.UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS UASD  JOIN CUSTOMER_ACCESS_CARD_DETAILS CACD
			ON UASD.UASD_ACCESS_CARD= CARDNO AND CACD.CUSTOMER_ID=CUSTOMER_NO AND CACD.CACD_VALID_TILL IS NOT NULL  AND UASD.UASD_ID=CACD.UASD_ID) THEN
				IF EXISTS(SELECT * FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE CUSTOMER_ID=CUSTOMER_NO AND UASD_ID=ACCESS_UASD_ID AND CACD_VALID_TILL IS NOT NULL AND CACD_GUEST_CARD IS NOT NULL AND ACN_ID IS NOT NULL)THEN

                -- insert query for TEMP_ACCESS_CARD_CUSTOMER table OLD_CARD
                SET @INSERT_GUEST_LOST_CARD=(SELECT CONCAT('INSERT INTO ',TEMP_ACCESS_CARD_CUSTOMER,'(UNITNO,OLD_CARD,REASON) VALUES(',CARD_UNIT_NO,',','"',CARDNO,' - GUEST','"',',','(SELECT ACN_DATA FROM ACCESS_CONFIGURATION WHERE ACN_ID=(SELECT ACNID FROM ',ACCESS,' WHERE ID=',ACCESS_CARD_COUNT,'))',')'));
                PREPARE INSERT_GUEST_LOST_CARD_STMT FROM @INSERT_GUEST_LOST_CARD;
				EXECUTE INSERT_GUEST_LOST_CARD_STMT;
				END IF;
				IF EXISTS(SELECT * FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE CUSTOMER_ID=CUSTOMER_NO AND UASD_ID=ACCESS_UASD_ID AND CACD_VALID_TILL IS NOT NULL AND CACD_GUEST_CARD IS NULL AND ACN_ID IS NOT NULL)THEN

				-- insert query for TEMP_ACCESS_CARD_CUSTOMER table OLD_CARD
				SET @INSERT_LOST_CARD=(SELECT CONCAT('INSERT INTO ',TEMP_ACCESS_CARD_CUSTOMER,'(UNITNO,OLD_CARD,REASON) VALUES(',CARD_UNIT_NO,',',CARDNO,',','(SELECT ACN_DATA FROM ACCESS_CONFIGURATION WHERE ACN_ID=(SELECT ACNID FROM ',ACCESS,' WHERE ID=',ACCESS_CARD_COUNT,'))',')'));
                PREPARE INSERT_LOST_CARD_STMT FROM @INSERT_LOST_CARD;
                EXECUTE INSERT_LOST_CARD_STMT;
                        
				END IF;
			END IF;
        END IF;
               
        SET @CARD_NO=NULL;
        SET @ACCESS_ID=NULL;
		SET @AC_ACNID=NULL;
		SET @UASDACTIVE=NULL;
		
       SET ACCESS_CARD_COUNT=ACCESS_CARD_COUNT+1;
    END WHILE;
	
-- update query for comments column in TEMP_ACCESS_CARD_CUSTOMER table
SET @UPDATE_CMTS=(SELECT CONCAT('UPDATE ',TEMP_ACCESS_CARD_CUSTOMER,' SET COMMENTS=(SELECT CPD_COMMENTS FROM CUSTOMER_PERSONAL_DETAILS WHERE CUSTOMER_ID=',CUSTOMER_NO,')'));
PREPARE UPDATE_CMTS_STMT FROM @UPDATE_CMTS;
EXECUTE UPDATE_CMTS_STMT;
SET @DROP_ACCESS=(SELECT CONCAT('DROP TABLE IF EXISTS ',ACCESS));
PREPARE DROP_ACCESS_STMT FROM @DROP_ACCESS;
EXECUTE DROP_ACCESS_STMT;
COMMIT;
END;
/*
CALL SP_ACCESS_CARD_SEARCH_BY_CUSTOMER(484,'admin@expatsint.com',@TEMP_ACCESS_CARD_CUSTOMER,@FLAG_MESSAGE);
SELECT @TEMP_ACCESS_CARD_CUSTOMER;
SELECT @FLAG_MESSAGE;
*/