DROP PROCEDURE IF EXISTS SP_MIG_EXPENSE_PERSONAL_INSERT;
CREATE PROCEDURE SP_MIG_EXPENSE_PERSONAL_INSERT(IN DESTINATIONSCHEMA  VARCHAR(50),IN PART INTEGER,IN MINID INTEGER,IN MAXID INTEGER)
BEGIN
DECLARE START_TIME TIME;
DECLARE END_TIME TIME;
DECLARE DURATION TIME;
DECLARE INITTIME TIME;
DECLARE MINDURATIONID INTEGER;
DECLARE MAXDURATIONID INTEGER;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
ROLLBACK;
END;
START TRANSACTION;
SET START_TIME=(SELECT CURTIME());
SET @VIEW_EXPENSE_PERSONAL=(SELECT CONCAT('CREATE OR REPLACE VIEW VW_EXPENSE_PERSONAL AS 
SELECT DISTINCT TPSF.PE_ID,EC.ECN_ID,TPSF.PE_PERSONAL_INVOICE_DATE,TPSF.PE_PERSONAL_COMMENTS,T.PE_INVOICE_ITEMS,T.PE_INVOICE_FROM,TPSF.PE_PERSONAL_AMOUNT, TPSF.USERSTAMP, ULD.ULD_ID,TPSF.TIMESTAMP
FROM TEMP_PERSONAL_SCDB_FORMAT TPSF,',DESTINATIONSCHEMA,'.EXPENSE_CONFIGURATION  EC,TEMP_PERSONAL_INVOICE_ITEM_FROM_SPLITTED_TABLE T,',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS ULD WHERE TPSF.PE_ID=T.PE_ID
AND TPSF.PE_PERSONAL_EXPENSE=EC.ECN_DATA AND EC.CGN_ID=24 AND ULD.ULD_LOGINID=TPSF.USERSTAMP AND TPSF.PE_TYPE_OF_EXPENSE=','"PERSONAL"',' AND T.PE_ID BETWEEN ',MINID,' AND ',MAXID));
PREPARE VIEW_EXPENSE_PERSONAL_STMT FROM @VIEW_EXPENSE_PERSONAL;
EXECUTE VIEW_EXPENSE_PERSONAL_STMT;
SET @INSERT_EXPENSE_PERSONAL=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.EXPENSE_PERSONAL(ECN_ID,EP_INVOICE_DATE,EP_AMOUNT,EP_INVOICE_ITEMS,EP_INVOICE_FROM,EP_COMMENTS,ULD_ID,EP_TIMESTAMP)
SELECT ECN_ID,PE_PERSONAL_INVOICE_DATE,PE_PERSONAL_AMOUNT,PE_INVOICE_ITEMS,PE_INVOICE_FROM,PE_PERSONAL_COMMENTS,ULD_ID,TIMESTAMP FROM VW_EXPENSE_PERSONAL'));
PREPARE INSERT_EXPENSE_PERSONAL_STMT FROM @INSERT_EXPENSE_PERSONAL;
EXECUTE INSERT_EXPENSE_PERSONAL_STMT;
SET END_TIME=(SELECT CURTIME());
SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
DROP VIEW IF EXISTS VW_EXPENSE_PERSONAL;
IF PART=1 THEN
DROP TABLE IF EXISTS TEMP_DURATION_PERSONAL_PART1;
CREATE TABLE TEMP_DURATION_PERSONAL_PART1(ID INTEGER PRIMARY KEY AUTO_INCREMENT,SPLITTING_DURATION1 TIME);
INSERT INTO TEMP_DURATION_PERSONAL_PART1(SPLITTING_DURATION1)VALUES(DURATION);
ELSE
INSERT INTO TEMP_DURATION_PERSONAL_PART1(SPLITTING_DURATION1)VALUES(DURATION);
END IF;
DROP TABLE IF EXISTS TEMP_DURATION_PERSONAL_PART2;
CREATE TABLE TEMP_DURATION_PERSONAL_PART2(ID INTEGER PRIMARY KEY AUTO_INCREMENT,SPLITTING_DURATION2 TIME);
SET INITTIME='00:00:00';
SET MINDURATIONID=(SELECT MIN(ID) FROM TEMP_DURATION_PERSONAL_PART1);
SET MAXDURATIONID=(SELECT MAX(ID) FROM TEMP_DURATION_PERSONAL_PART1);
WHILE MINDURATIONID<=MAXDURATIONID DO
SET INITTIME=(SELECT ADDTIME(INITTIME,(SELECT SPLITTING_DURATION1 FROM TEMP_DURATION_PERSONAL_PART1 WHERE ID=MINDURATIONID)));
SET MINDURATIONID=MINDURATIONID+1;
END WHILE;
INSERT INTO TEMP_DURATION_PERSONAL_PART2(SPLITTING_DURATION2)VALUES(INITTIME);
COMMIT;
END;