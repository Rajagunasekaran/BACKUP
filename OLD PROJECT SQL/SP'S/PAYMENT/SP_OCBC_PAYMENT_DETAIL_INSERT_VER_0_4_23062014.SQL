-- VER 0.4 STARTDATE:23/06/2014 ENDDATE:23/06/2014 DESC:DROP THE TEMP TABLES IF ROLLBACK OCCURS. DONE BY :RAJA
-- VER 0.3 STARTDATE:10/06/2014 ENDDATE:10/06/2014 DESC:ADDED ROLLBACK AND COMMIT.DONE BY SASIKALA
-- VER 0.2 STARTDATE:27/05/2014 ENDDATE:27/05/2014 DESC:DELETED ALL TEMP TABLES INSIDE SP .DONE BY KUMAR R.
-- VER 0.1 STARTDATE:10/05/2014 ENDDATE:16/05/2014 DESC:PAYMENT AND DEPOSIT AND PROCESSING AMOUNT SPLITTED AND INSERT IF SAME MONTH HAVE MORE THAN ONE LP DONE BY:KUMAR R
DROP PROCEDURE IF EXISTS SP_OCBC_PAYMENT_DETAIL_INSERT;
CREATE PROCEDURE SP_OCBC_PAYMENT_DETAIL_INSERT(
IN UNITNO INTEGER,
IN CUSTID INTEGER,
IN RECVERSION INT,
IN PAYMENTTYPE VARCHAR(30),
IN AMOUNT DECIMAL(7,2),
IN HIGHLIGHT_FLAG CHAR(1),
IN FORPERIOD VARCHAR(15),
IN COMMENTS TEXT,
IN USERSTAMP VARCHAR(50),
IN OCBCID INT,
OUT FINAL_MESSAGE TEXT
)
BEGIN
	DECLARE TEMP_RECVER_TABLE TEXT;
	DECLARE TEMP_RECVERDAYS_TABLE TEXT;
	DECLARE TEMP_DEP_RECVER_TABLE TEXT;
	DECLARE TEMP_DEP_RECVERDAYS_TABLE TEXT;
	DECLARE CUSTOMER_NAME VARCHAR(60);
	DECLARE MONTHNUMBER VARCHAR(10);
	DECLARE MONTHSTARTDATE DATE;
	DECLARE MONTHENDDATE DATE;
	DECLARE USERSTAMP_ID TEXT;
	DECLARE SYSDATEANDTIME VARCHAR(50);
	DECLARE SYSDATEANDULDID VARCHAR(50); 
	DECLARE RECVERDAYCOUNT INT;
	DECLARE MONTHID INT;
	DECLARE MONTHPERIOD VARCHAR(20);
	DECLARE RECVERMAXID INT;
	DECLARE MESSAGE TEXT;
	DECLARE ERRORCOMMENTS TEXT;
	DECLARE FLAG INT;
	DECLARE DEP_FLAG INT;
	DECLARE PAYMENTID INT;
	DECLARE PAIDDATE DATE;
	DECLARE HIGHLIGHTFLAG CHAR(4);
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
  ROLLBACK;
  IF(TEMP_RECVERDAYS_TABLE IS NOT NULL)THEN
    SET @TEMP_RECVERDAYS_TABLE_DROP=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_RECVERDAYS_TABLE));
		PREPARE TEMP_RECVERDAYS_TABLE_DROP_STMT FROM @TEMP_RECVERDAYS_TABLE_DROP;
		EXECUTE TEMP_RECVERDAYS_TABLE_DROP_STMT;
  END IF;  
  IF(TEMP_RECVER_TABLE IS NOT NULL)THEN
    SET @TEMP_RECVER_TABLE_DROP=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_RECVER_TABLE));
		PREPARE TEMP_RECVER_TABLEDROP_STMT FROM @TEMP_RECVER_TABLE_DROP;
		EXECUTE TEMP_RECVER_TABLEDROP_STMT;
  END IF;		
  IF(TEMP_DEP_RECVERDAYS_TABLE IS NOT NULL)THEN
    SET @TEMP_DEP_RECVERDAYS_TABLE_DROP=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_DEP_RECVERDAYS_TABLE));
		PREPARE TEMP_DEP_RECVERDAYS_TABLE_DROP_STMT FROM @TEMP_DEP_RECVERDAYS_TABLE_DROP;
		EXECUTE TEMP_DEP_RECVERDAYS_TABLE_DROP_STMT;		
  END IF;  
  IF(TEMP_DEP_RECVER_TABLE IS NOT NULL)THEN
    SET @TEMP_DEP_RECVER_TABLE_DROP=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_DEP_RECVER_TABLE));
		PREPARE TEMP_DEP_RECVER_TABLEDROP_STMT FROM @TEMP_DEP_RECVER_TABLE_DROP;
		EXECUTE TEMP_DEP_RECVER_TABLEDROP_STMT;
  END IF;
  END;
 	START TRANSACTION;
	IF HIGHLIGHT_FLAG="" THEN
	 SET HIGHLIGHTFLAG=NULL;
	END IF; 
	IF COMMENTS IS NOT NULL THEN
     SET ERRORCOMMENTS=COMMENTS;
	ELSE
     SET ERRORCOMMENTS="NULL";
	END IF;
	SET PAIDDATE=(SELECT OBR_VALUE_DATE FROM OCBC_BANK_RECORDS WHERE OBR_ID=OCBCID);
	SET MONTHNUMBER=(SELECT SUBSTRING(FORPERIOD,1,3));
	SET MONTHSTARTDATE=(SELECT CONCAT((SELECT SUBSTRING_INDEX(FORPERIOD, '-', -1)),'-',(SELECT MONTH(STR_TO_DATE(MONTHNUMBER,'%b'))),'-','01'));
	SET @MONTHENDDATE=(SELECT LAST_DAY(MONTHSTARTDATE));
	SET @MONTHID=(SELECT MONTH(STR_TO_DATE(MONTHNUMBER,'%b')));
	SET @MONTHLENGTH=(SELECT LENGTH(@MONTHID));
	IF @MONTHLENGTH=1 THEN
		SET @MONTH_ID=(SELECT CONCAT('0',@MONTHID));
	ELSE
		SET @MONTH_ID=@MONTHID;
	END IF;
	SET MONTHPERIOD=(SELECT CONCAT((SELECT SUBSTRING_INDEX(FORPERIOD, '-', -1)),'-',@MONTH_ID));
	SET MONTHENDDATE=(SELECT LAST_DAY(MONTHSTARTDATE));
	CALL SP_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULDID);
	SET USERSTAMP_ID=(SELECT @ULDID);
	SET SYSDATEANDTIME=(SELECT SYSDATE());
	SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,' ',''));
	SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,'-',''));
	SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,':',''));
	SET SYSDATEANDULDID=(SELECT CONCAT(SYSDATEANDTIME,'_',USERSTAMP_ID));
	--  PAYMENT AMOUNT SPLITTED FOR MULTIPLE RECVER.
	IF PAYMENTTYPE='PAYMENT' THEN
		SET TEMP_RECVER_TABLE=(SELECT CONCAT('TEMP_RECVER_TABLE','',SYSDATEANDULDID));
		SET @TEMP_RECVER_TABLE_CREATEQUERY=(SELECT CONCAT('CREATE TABLE ',TEMP_RECVER_TABLE,'(SNO INTEGER AUTO_INCREMENT PRIMARY KEY,CED_REC_VER INTEGER)'));
		PREPARE TEMP_RECVER_TABLE_CREATE_STMT FROM @TEMP_RECVER_TABLE_CREATEQUERY;
		EXECUTE TEMP_RECVER_TABLE_CREATE_STMT;
		--  INSERTING SAME MONTH RECVER IN TEMP_RECVER_TABLE
		SET @TEMP_RECVER_TABLE_INSERQUERY=(SELECT CONCAT('INSERT INTO ',TEMP_RECVER_TABLE,'(CED_REC_VER)SELECT CED.CED_REC_VER FROM CUSTOMER_LP_DETAILS CLP,CUSTOMER_ENTRY_DETAILS CED WHERE CED.CUSTOMER_ID= ',CUSTID,' AND (CLP.CLP_ENDDATE LIKE ','"',MONTHPERIOD,'%"',' OR CLP.CLP_STARTDATE LIKE ','"',MONTHPERIOD,'%"',')  AND (CLP.CLP_PRETERMINATE_DATE IS NULL OR (CLP.CLP_PRETERMINATE_DATE >=CURDATE() AND CLP_STARTDATE <= CLP.CLP_PRETERMINATE_DATE)) AND CED.UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=',UNITNO,') AND CLP.CED_REC_VER=CED.CED_REC_VER AND CLP.CUSTOMER_ID=CED.CUSTOMER_ID AND CLP.CLP_GUEST_CARD IS NULL'));
		PREPARE  TEMP_RECVER_TABLE_INSERT_STMT FROM @TEMP_RECVER_TABLE_INSERQUERY;
		EXECUTE TEMP_RECVER_TABLE_INSERT_STMT;
		--  COUNTING FOR TOTAL RECORD VERSIONS
		SET @RECVETCOUNT=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNTING FROM ',TEMP_RECVER_TABLE));
		PREPARE RECVETCOUNT_STMT FROM @RECVETCOUNT;
		EXECUTE RECVETCOUNT_STMT;
		--  CREATE TABLE FOR CALCULATING RECVER NO OFDAYS.
		SET TEMP_RECVERDAYS_TABLE=(SELECT CONCAT('TEMP_RECVERDAYS_TABLE',SYSDATEANDULDID));
		SET @NOOFDAYSCOUNT=(SELECT CONCAT('CREATE TABLE ',TEMP_RECVERDAYS_TABLE, '(SNO INTEGER AUTO_INCREMENT PRIMARY KEY,RECVER INT,STARTDATE DATE,ENDDATE DATE,NOOF_DAYS INT,TOTAL INT,SPLIT_AMT DECIMAL(7,2))'));
		PREPARE NOOFDAYSCOUNT_STMT FROM @NOOFDAYSCOUNT;
		EXECUTE NOOFDAYSCOUNT_STMT;
		SET RECVERDAYCOUNT=0;
		--  IF RECVER TOTAL NOT EQUAL TO ZERO
		IF @COUNTING!=0 THEN
		    --  FINDING TEMP_RECVER_TABLE MAX AND MIN SNO 
	    	SET @RECVERMAXID=(SELECT CONCAT('SELECT MAX(SNO) INTO @REVMAX FROM ',TEMP_RECVER_TABLE));
			PREPARE RECVERMAXID_STMT FROM @RECVERMAXID;
			EXECUTE RECVERMAXID_STMT;
	    	SET @RECVERMINID=(SELECT CONCAT('SELECT MIN(SNO) INTO @REVMIN FROM ',TEMP_RECVER_TABLE));
			PREPARE RECVERMINID_STMT FROM @RECVERMINID;
			EXECUTE RECVERMINID_STMT;
			WHILE @REVMIN<= @REVMAX DO			
				SET @RECVERID=(SELECT CONCAT('SELECT CED_REC_VER INTO @TEMP_CED_REC_VER	FROM ',TEMP_RECVER_TABLE,' WHERE SNO=',@REVMIN));
				PREPARE RECVERID_STMT FROM @RECVERID;
				EXECUTE RECVERID_STMT;
				SET @MONTHPRIODFORMAT=(SELECT CONCAT(MONTHPERIOD,'%'));
				SET @TEMP_STARTDATE=(SELECT CLP_STARTDATE FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CUSTID AND CED_REC_VER=@TEMP_CED_REC_VER AND CLP_GUEST_CARD IS NULL);
				SET @TEMP_ENDDATE=(SELECT CLP_ENDDATE FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CUSTID AND CED_REC_VER=@TEMP_CED_REC_VER AND CLP_GUEST_CARD IS NULL);
				SET @STARTDATE=(SELECT CLP_STARTDATE FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CUSTID AND CED_REC_VER=@TEMP_CED_REC_VER AND CLP_STARTDATE LIKE @MONTHPRIODFORMAT AND CLP_GUEST_CARD IS NULL);
				SET @ENDDATE=(SELECT CLP_ENDDATE FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CUSTID AND CED_REC_VER=@TEMP_CED_REC_VER AND CLP_ENDDATE LIKE @MONTHPRIODFORMAT AND CLP_GUEST_CARD IS NULL);
				--  CHECKING SAME MONTH LEASEPERIOD HAVE ANY ENTRIES IN PAYMENT DETAILS TABLE
				SET @PAYMENTENTRY=(SELECT PD_ID FROM PAYMENT_DETAILS WHERE CUSTOMER_ID=CUSTID AND CED_REC_VER=@TEMP_CED_REC_VER AND PD_FOR_PERIOD=MONTHSTARTDATE AND PP_ID=1);
				IF @PAYMENTENTRY IS NULL THEN
					IF @STARTDATE IS NOT NULL AND @ENDDATE IS NOT NULL THEN
						SET @RECVERTTLDAY=(SELECT DATEDIFF(@ENDDATE,@STARTDATE));
					END IF;
					IF @STARTDATE IS NOT NULL AND @ENDDATE IS NULL THEN
						SET @RECVERTTLDAY=(SELECT DATEDIFF(@MONTHENDDATE,@STARTDATE));
					END IF;
					IF @STARTDATE IS NULL AND @ENDDATE IS NOT NULL THEN
						SET @MONTHSTARTDATE=(SELECT ADDDATE(LAST_DAY(SUBDATE(@ENDDATE, INTERVAL 1 MONTH)), 1));
						SET @RECVERTTLDAY=(SELECT DATEDIFF(@ENDDATE,@MONTHSTARTDATE));
					END IF;
					IF @REVMIN=@REVMAX THEN
					SET @RECVERTTLDAY=@RECVERTTLDAY+1;
					END IF;
					SET RECVERDAYCOUNT=RECVERDAYCOUNT+@RECVERTTLDAY;				
					SET @TEMP_RECVERDAYS_INSERT=(SELECT CONCAT('INSERT INTO ',TEMP_RECVERDAYS_TABLE, '(RECVER,STARTDATE,ENDDATE,NOOF_DAYS,TOTAL) VALUES(@TEMP_CED_REC_VER,@TEMP_STARTDATE,@TEMP_ENDDATE,@RECVERTTLDAY',',',RECVERDAYCOUNT,')'));
					PREPARE TEMP_RECVERDAYS_INSERTSTMT FROM @TEMP_RECVERDAYS_INSERT;
					EXECUTE TEMP_RECVERDAYS_INSERTSTMT;
				END IF;			
				SET @REVMIN=@REVMIN+1;
			END WHILE;
			--  CALCULATE NO OF DAYS IN GIVEN FORPERIOD
			SET @MAXDAYTOTAL=(SELECT CONCAT('SELECT MAX(TOTAL) INTO @MAXTOTAL FROM ',TEMP_RECVERDAYS_TABLE));
			PREPARE MAXDAYTOTAL_STMT FROM @MAXDAYTOTAL;
			EXECUTE MAXDAYTOTAL_STMT;
			--  TO FIND AVG AMOUNT FOR GIVEN AMOUNT
			SET @SPLITEDAMT=(SELECT ROUND((sum(AMOUNT/@MAXTOTAL)),2));
			--  TO FIND MIN AND MAX SNO FROM TEMP_RECVER_TABLE
			SET @AMTRECVERMAXID=(SELECT CONCAT('SELECT MAX(SNO) INTO @AMTREVMAX FROM ',TEMP_RECVER_TABLE));
			PREPARE AMTRECVERMAXID_STMT FROM @AMTRECVERMAXID;
			EXECUTE AMTRECVERMAXID_STMT;
			SET RECVERMAXID=@AMTREVMAX;
	    	SET @AMTRECVERMINID=(SELECT CONCAT('SELECT MIN(SNO) INTO @AMTREVMIN FROM ',TEMP_RECVER_TABLE));
			PREPARE AMTRECVERMINID_STMT FROM @AMTRECVERMINID;
			EXECUTE AMTRECVERMINID_STMT;
			--  SPLITTING AMOUNT FORPERIOD HAVE MORE THEN ONE LEASEPERIOD IN SAME MONTH
			IF @AMTREVMAX!=1 THEN
				SET @SPLITTINGAMOUNT=0;
				WHILE @AMTREVMIN<= @AMTREVMAX DO
					SET @RECEVRNOOFDAYS=(SELECT CONCAT('SELECT NOOF_DAYS INTO @NOOFDAYS FROM ',TEMP_RECVERDAYS_TABLE,' WHERE SNO=@AMTREVMIN'));
					PREPARE RECEVRNOOFDAYS_STMT FROM @RECEVRNOOFDAYS;
					EXECUTE RECEVRNOOFDAYS_STMT;
					SET @CALAMT=(@NOOFDAYS*@SPLITEDAMT);
					SET @SP_AMT_REV=(SELECT ROUND((@CALAMT),0));
					IF(@AMTREVMIN=@AMTREVMAX) THEN
					  SET @SP_AMT_REV=AMOUNT-@SPLITTINGAMOUNT;
					ELSE
					  SET @SPLITTINGAMOUNT=@SPLITTINGAMOUNT+@SP_AMT_REV;
					END IF;
					--  UPDATING SPLITTED AMOUNT IN TEMP_RECVERDAYS_TABLE
					SET @RECVERAMTYPDATE=(SELECT CONCAT('UPDATE ',TEMP_RECVERDAYS_TABLE,' SET SPLIT_AMT=@SP_AMT_REV WHERE SNO=@AMTREVMIN'));
					PREPARE RECVERAMTYPDATE_STMT FROM @RECVERAMTYPDATE;
					EXECUTE RECVERAMTYPDATE_STMT;
					SET @AMTREVMIN=@AMTREVMIN+1;
					SET @NOOFDAYS=NULL;
				END WHILE;
			ELSE 
				--  UPDATING AMOUNT FOR SINGLE RECVER AND FULL AMOUNT 
				SET @SINGLAAMT=AMOUNT;
				SET @RECVERAMTYPDATE=(SELECT CONCAT('UPDATE ',TEMP_RECVERDAYS_TABLE,' SET SPLIT_AMT=@SINGLAAMT WHERE SNO=@AMTREVMIN'));
				PREPARE RECVERAMTYPDATE_STMT FROM @RECVERAMTYPDATE;
				EXECUTE RECVERAMTYPDATE_STMT;
			END IF;
		ELSE
			--  INSERTING SINGLE LP FOR SELECTED MONTH.
			SET @CLPSTARTDATE=(SELECT CLP_STARTDATE FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CUSTID AND CED_REC_VER=RECVERSION);
			SET @CLPENDDATE=(SELECT CLP_ENDDATE FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CUSTID AND CED_REC_VER=RECVERSION);
			SET @TEMP_RECVERDAYS_INSERT=(SELECT CONCAT('INSERT INTO ',TEMP_RECVERDAYS_TABLE, '(RECVER,STARTDATE,ENDDATE,SPLIT_AMT) VALUES(',RECVERSION,',','@CLPSTARTDATE,@CLPENDDATE',',',AMOUNT,')'));
			PREPARE TEMP_RECVERDAYS_INSERTSTMT FROM @TEMP_RECVERDAYS_INSERT;
			EXECUTE TEMP_RECVERDAYS_INSERTSTMT;
		END IF;	
			--  TO FIND ROW COUNT AND MAX AND MIN ROWS IN TEMP_RECVERDAYS_TABLE TABLE
			SET @RECVERAMTCOUNT=(SELECT CONCAT('SELECT COUNT(*) INTO @AMTCOUNTING FROM ',TEMP_RECVERDAYS_TABLE));
			PREPARE RECVETAMTCOUNT_STMT FROM @RECVERAMTCOUNT;
			EXECUTE RECVETAMTCOUNT_STMT;		
			SET @FINAL_RECVERMAXID=(SELECT CONCAT('SELECT MAX(SNO) INTO @FINAL_REVMAX FROM ',TEMP_RECVERDAYS_TABLE));
			PREPARE FINAL_RECVERMAXID_STMT FROM @FINAL_RECVERMAXID;
			EXECUTE FINAL_RECVERMAXID_STMT;			
			SET @FINAL_RECVERMINID=(SELECT CONCAT('SELECT MIN(SNO) INTO @FINAL_REVMIN FROM ',TEMP_RECVERDAYS_TABLE));
			PREPARE FINAL_RECVERMINID_STMT FROM @FINAL_RECVERMINID;
			EXECUTE FINAL_RECVERMINID_STMT;
			SET FLAG=0;
			--  INSERTING SPILITTED RECVER AMOUNT AND DETAILS IN PAYMENT DETAILS TABLE 
			WHILE @FINAL_REVMIN<= @FINAL_REVMAX DO
				SET @RECVERIDQUERY=(SELECT CONCAT('SELECT RECVER INTO @CED_REC_VER FROM ',TEMP_RECVERDAYS_TABLE,' WHERE SNO=@FINAL_REVMIN'));
				PREPARE RECVERIDQUERY_STMT FROM @RECVERIDQUERY;
				EXECUTE RECVERIDQUERY_STMT;			
				SET @RECVERAMOUNTQUERY=(SELECT CONCAT('SELECT SPLIT_AMT INTO @RECVERAMOUNT FROM ',TEMP_RECVERDAYS_TABLE,' WHERE SNO=@FINAL_REVMIN'));
				PREPARE RECVERAMOUNTQUERY_STMT FROM @RECVERAMOUNTQUERY;
				EXECUTE RECVERAMOUNTQUERY_STMT;			
				SET @EXISTID=(SELECT PD_ID FROM PAYMENT_DETAILS WHERE CUSTOMER_ID=CUSTID AND CED_REC_VER=@CED_REC_VER AND PP_ID=(SELECT PP_ID FROM PAYMENT_PROFILE WHERE PP_DATA=PAYMENTTYPE) AND PD_FOR_PERIOD=MONTHSTARTDATE);
				IF @EXISTID IS NOT NULL THEN
					SET FLAG=1;	
				END IF;
				IF FLAG!=1 THEN
					INSERT INTO PAYMENT_DETAILS(UNIT_ID,CUSTOMER_ID,PP_ID,CED_REC_VER,PD_AMOUNT,PD_FOR_PERIOD,PD_PAID_DATE,PD_HIGHLIGHT_FLAG,PD_COMMENTS,ULD_ID)VALUES
					((SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO),CUSTID,(SELECT PP_ID FROM PAYMENT_PROFILE WHERE PP_DATA=PAYMENTTYPE),@CED_REC_VER,@RECVERAMOUNT,MONTHSTARTDATE,PAIDDATE,HIGHLIGHTFLAG,COMMENTS,USERSTAMP_ID);
					UPDATE OCBC_BANK_RECORDS SET OBR_REFERENCE='X' WHERE OBR_ID=OCBCID;
				END IF; 
				SET @FINAL_REVMIN=@FINAL_REVMIN+1;	
			END WHILE;	
				--  ERROR MESSAGE FOR ALREADY PAIDED FOR SELECTED MONTH
				IF FLAG=1 OR @AMTCOUNTING=0 THEN 
					SET CUSTOMER_NAME=(SELECT CONCAT(CUSTOMER_FIRST_NAME,' ',CUSTOMER_LAST_NAME)AS CUSTOMERNAME FROM CUSTOMER WHERE CUSTOMER_ID=CUSTID);
					SET FINAL_MESSAGE =(CONCAT('UNIT NO= ',UNITNO,', CUSTOMER ID= ',CUSTID,',CUSTOMER NAME=',CUSTOMER_NAME,',PAYMENT TYPE=',PAYMENTTYPE,',AMOUNT=',AMOUNT,',FOR PERIOD=',MONTHSTARTDATE,',PAIDDATE=',PAIDDATE,',COMMENTS=',ERRORCOMMENTS,' // MESSAGE=ALREADY PAID FOR THIS MONTH.//'));
				END IF;
		END IF;
		--  DEPOSIT ENTRY PART
        IF PAYMENTTYPE='DEPOSIT' OR PAYMENTTYPE='PROCESSING FEE' THEN
			IF PAYMENTTYPE='DEPOSIT' THEN
				SET PAYMENTID=2;
			ELSE
				SET PAYMENTID=3;
			END IF;	
			SET TEMP_DEP_RECVER_TABLE=(SELECT CONCAT('TEMP_DEP_RECVER_TABLE','',SYSDATEANDULDID));
			SET @TEMP_DEP_RECVER_TABLE_CREATEQUERY=(SELECT CONCAT('CREATE TABLE ',TEMP_DEP_RECVER_TABLE,'(SNO INTEGER AUTO_INCREMENT PRIMARY KEY,CED_REC_VER INTEGER)'));
			PREPARE TEMP_DEP_RECVER_TABLE_CREATE_STMT FROM @TEMP_DEP_RECVER_TABLE_CREATEQUERY;
			EXECUTE TEMP_DEP_RECVER_TABLE_CREATE_STMT;
			--  INSERTING SAME MONTH RECVER IN TEMP_RECVER_TABLE
			SET @TEMP_DEP_RECVER_TABLE_INSERQUERY=(SELECT CONCAT('INSERT INTO ',TEMP_DEP_RECVER_TABLE,'(CED_REC_VER)SELECT CED.CED_REC_VER FROM CUSTOMER_LP_DETAILS CLP,CUSTOMER_ENTRY_DETAILS CED,CUSTOMER_FEE_DETAILS CFD WHERE CED.CUSTOMER_ID=',CUSTID,' AND CLP.CLP_STARTDATE LIKE ','"',MONTHPERIOD,'%"',' AND (CLP.CLP_PRETERMINATE_DATE IS NULL OR (CLP.CLP_PRETERMINATE_DATE >=CURDATE() AND CLP_STARTDATE <= CLP.CLP_PRETERMINATE_DATE)) AND CED.UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=',UNITNO,') AND CLP.CED_REC_VER=CED.CED_REC_VER AND CLP.CUSTOMER_ID=CED.CUSTOMER_ID AND CLP.CUSTOMER_ID=CFD.CUSTOMER_ID AND CLP.CED_REC_VER=CFD.CED_REC_VER AND CPP_ID=',PAYMENTID));
			PREPARE  TEMP_DEP_RECVER_TABLE_INSERT_STMT FROM @TEMP_DEP_RECVER_TABLE_INSERQUERY;
			EXECUTE TEMP_DEP_RECVER_TABLE_INSERT_STMT;
			--  CREATE TABLE FOR CALCULATING RECVER NO OFDAYS.
			SET TEMP_DEP_RECVERDAYS_TABLE=(SELECT CONCAT('TEMP_DEP_RECVERDAYS_TABLE',SYSDATEANDULDID));
			SET @DEP_NOOFDAYSCOUNT=(SELECT CONCAT('CREATE TABLE ',TEMP_DEP_RECVERDAYS_TABLE, '(SNO INTEGER AUTO_INCREMENT PRIMARY KEY,RECVER INT,STARTDATE DATE,ENDDATE DATE,SPLIT_AMT DECIMAL(7,2))'));
			PREPARE DEP_NOOFDAYSCOUNT_STMT FROM @DEP_NOOFDAYSCOUNT;
			EXECUTE DEP_NOOFDAYSCOUNT_STMT;
			--  COUNTING FOR TOTAL RECORD VERSIONS
			SET @DEP_RECVETCOUNT=(SELECT CONCAT('SELECT COUNT(*) INTO @DEP_COUNTING FROM ',TEMP_DEP_RECVER_TABLE));
			PREPARE DEP_RECVETCOUNT_STMT FROM @DEP_RECVETCOUNT;
			EXECUTE DEP_RECVETCOUNT_STMT;
			IF @DEP_COUNTING!=0 THEN
			 --  FINDING TEMP_RECVER_TABLE MAX AND MIN SNO 
		    	SET @DEP_RECVERMAXID=(SELECT CONCAT('SELECT MAX(SNO) INTO @DEP_REVMAX FROM ',TEMP_DEP_RECVER_TABLE));
				PREPARE DEP_RECVERMAXID_STMT FROM @DEP_RECVERMAXID;
				EXECUTE DEP_RECVERMAXID_STMT;
		    	SET @DEP_RECVERMINID=(SELECT CONCAT('SELECT MIN(SNO) INTO @DEP_REVMIN FROM ',TEMP_DEP_RECVER_TABLE));
				PREPARE DEP_RECVERMINID_STMT FROM @DEP_RECVERMINID;
				EXECUTE DEP_RECVERMINID_STMT;
				WHILE @DEP_REVMIN<= @DEP_REVMAX DO			
					SET @DEP_RECVERID=(SELECT CONCAT('SELECT CED_REC_VER INTO @DEP_TEMP_CED_REC_VER	FROM ',TEMP_DEP_RECVER_TABLE,' WHERE SNO=',@DEP_REVMIN));
					PREPARE DEP_RECVERID_STMT FROM @DEP_RECVERID;
					EXECUTE DEP_RECVERID_STMT;
					SET @MONTHPRIODFORMAT=(SELECT CONCAT(MONTHPERIOD,'%'));
					SET @TEMP_STARTDATE=(SELECT CLP_STARTDATE FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CUSTID AND CED_REC_VER=@DEP_TEMP_CED_REC_VER AND CLP_GUEST_CARD IS NULL);
					SET @TEMP_ENDDATE=(SELECT CLP_ENDDATE FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CUSTID AND CED_REC_VER=@DEP_TEMP_CED_REC_VER AND CLP_GUEST_CARD IS NULL);
					--  CHECKING SAME MONTH LEASEPERIOD HAVE ANY ENTRIES IN PAYMENT DETAILS TABLE
					SET @PAYMENTENTRY=(SELECT PD_ID FROM PAYMENT_DETAILS WHERE CUSTOMER_ID=CUSTID AND CED_REC_VER=@DEP_TEMP_CED_REC_VER AND PD_FOR_PERIOD=MONTHSTARTDATE AND PP_ID=PAYMENTID);
					IF @PAYMENTENTRY IS NULL THEN		
						SET @TEMP_DEP_RECVERDAYS_INSERT=(SELECT CONCAT('INSERT INTO ',TEMP_DEP_RECVERDAYS_TABLE, '(RECVER,STARTDATE,ENDDATE) VALUES(@DEP_TEMP_CED_REC_VER,@TEMP_STARTDATE,@TEMP_ENDDATE)'));
						PREPARE TEMP_DEP_RECVERDAYS_INSERTSTMT FROM @TEMP_DEP_RECVERDAYS_INSERT;
						EXECUTE TEMP_DEP_RECVERDAYS_INSERTSTMT;
					END IF;			
					SET @DEP_REVMIN=@DEP_REVMIN+1;
				END WHILE;
				SET @DEP_AMTRECVERMAXID=(SELECT CONCAT('SELECT MAX(SNO) INTO @DEP_AMTREVMAX FROM ',TEMP_DEP_RECVERDAYS_TABLE));
				PREPARE DEP_AMTRECVERMAXID_STMT FROM @DEP_AMTRECVERMAXID;
				EXECUTE DEP_AMTRECVERMAXID_STMT;
				SET @DEP_AMTRECVERMINID=(SELECT CONCAT('SELECT MIN(SNO) INTO @DEP_AMTREVMIN FROM ',TEMP_DEP_RECVERDAYS_TABLE));
				PREPARE DEP_AMTRECVERMINID_STMT FROM @DEP_AMTRECVERMINID;
				EXECUTE DEP_AMTRECVERMINID_STMT;
				IF @DEP_AMTREVMAX!=1 THEN 
					SET @DEPOSITSPLITAMT=AMOUNT/@DEP_AMTREVMAX;
					SET @DEPOSITSPLITAMT=(SELECT ROUND((@DEPOSITSPLITAMT),0));
					WHILE @DEP_AMTREVMIN<= @DEP_AMTREVMAX DO
						SET @DEP_RECVERAMTUPDATE=(SELECT CONCAT('UPDATE ',TEMP_DEP_RECVERDAYS_TABLE,' SET SPLIT_AMT=@DEPOSITSPLITAMT WHERE SNO=@DEP_AMTREVMIN'));
						PREPARE DEP_RECVERAMTYPDATE_STMT FROM @DEP_RECVERAMTUPDATE;
						EXECUTE DEP_RECVERAMTYPDATE_STMT;
						SET @DEP_AMTREVMIN=@DEP_AMTREVMIN+1;
					END WHILE;
				ELSE
					SET @DEP_SINGLAAMT=AMOUNT;
					SET @DEP_RECVERAMTYPDATE=(SELECT CONCAT('UPDATE ',TEMP_DEP_RECVERDAYS_TABLE,' SET SPLIT_AMT=@DEP_SINGLAAMT WHERE SNO=@DEP_AMTREVMIN'));
					PREPARE DEP_RECVERAMTYPDATE_STMT FROM @DEP_RECVERAMTYPDATE;
					EXECUTE DEP_RECVERAMTYPDATE_STMT;	
				END IF;
				SET @DEP_RECVERAMTCOUNT=(SELECT CONCAT('SELECT COUNT(*) INTO @DEP_AMTCOUNTING FROM ',TEMP_DEP_RECVERDAYS_TABLE));
				PREPARE DEP_RECVETAMTCOUNT_STMT FROM @DEP_RECVERAMTCOUNT;
				EXECUTE DEP_RECVETAMTCOUNT_STMT;		
				SET @DEP_FINAL_RECVERMAXID=(SELECT CONCAT('SELECT MAX(SNO) INTO @DEP_FINAL_REVMAX FROM ',TEMP_DEP_RECVERDAYS_TABLE));
				PREPARE DEP_FINAL_RECVERMAXID_STMT FROM @DEP_FINAL_RECVERMAXID;
				EXECUTE DEP_FINAL_RECVERMAXID_STMT;			
				SET @DEP_FINAL_RECVERMINID=(SELECT CONCAT('SELECT MIN(SNO) INTO @DEP_FINAL_REVMIN FROM ',TEMP_DEP_RECVERDAYS_TABLE));
				PREPARE DEP_FINAL_RECVERMINID_STMT FROM @DEP_FINAL_RECVERMINID;
				EXECUTE DEP_FINAL_RECVERMINID_STMT;
				SET DEP_FLAG=0;
				WHILE @DEP_FINAL_REVMIN<= @DEP_FINAL_REVMAX DO
					SET @DEP_RECVERIDQUERY=(SELECT CONCAT('SELECT RECVER INTO @DEP_CED_REC_VER FROM ',TEMP_DEP_RECVERDAYS_TABLE,' WHERE SNO=@DEP_FINAL_REVMIN'));
					PREPARE DEP_RECVERIDQUERY_STMT FROM @DEP_RECVERIDQUERY;
					EXECUTE DEP_RECVERIDQUERY_STMT;			
					SET @DEP_RECVERAMOUNTQUERY=(SELECT CONCAT('SELECT SPLIT_AMT INTO @DEP_RECVERAMOUNT FROM ',TEMP_DEP_RECVERDAYS_TABLE,' WHERE SNO=@DEP_FINAL_REVMIN'));
					PREPARE DEP_RECVERAMOUNTQUERY_STMT FROM @DEP_RECVERAMOUNTQUERY;
					EXECUTE DEP_RECVERAMOUNTQUERY_STMT;			
					SET @DEP_EXISTID=(SELECT PD_ID FROM PAYMENT_DETAILS WHERE CUSTOMER_ID=CUSTID AND CED_REC_VER=@DEP_CED_REC_VER AND PP_ID=(SELECT PP_ID FROM PAYMENT_PROFILE WHERE PP_DATA=PAYMENTTYPE) AND PD_FOR_PERIOD=MONTHSTARTDATE);
					IF @DEP_EXISTID IS NOT NULL THEN
					SET DEP_FLAG=1;	
					END IF;
					IF DEP_FLAG!=1 THEN
						INSERT INTO PAYMENT_DETAILS(UNIT_ID,CUSTOMER_ID,PP_ID,CED_REC_VER,PD_AMOUNT,PD_FOR_PERIOD,PD_PAID_DATE,PD_HIGHLIGHT_FLAG,PD_COMMENTS,ULD_ID)VALUES
						((SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO),CUSTID,(SELECT PP_ID FROM PAYMENT_PROFILE WHERE PP_DATA=PAYMENTTYPE),@DEP_CED_REC_VER,@DEP_RECVERAMOUNT,MONTHSTARTDATE,PAIDDATE,HIGHLIGHTFLAG,COMMENTS,USERSTAMP_ID);
						UPDATE OCBC_BANK_RECORDS SET OBR_REFERENCE='X' WHERE OBR_ID=OCBCID;
					END IF; 
					SET @DEP_FINAL_REVMIN=@DEP_FINAL_REVMIN+1;	
				END WHILE;	
				IF DEP_FLAG=1 OR @DEP_AMTCOUNTING=0 THEN 
					SET CUSTOMER_NAME=(SELECT CONCAT(CUSTOMER_FIRST_NAME,' ',CUSTOMER_LAST_NAME)AS CUSTOMERNAME FROM CUSTOMER WHERE CUSTOMER_ID=CUSTID);
					SET FINAL_MESSAGE =(CONCAT('UNIT NO= ',UNITNO,', CUSTOMER ID= ',CUSTID,',CUSTOMER NAME=',CUSTOMER_NAME,',PAYMENT TYPE=',PAYMENTTYPE,',AMOUNT=',AMOUNT,',FOR PERIOD=',MONTHSTARTDATE,',PAIDDATE=',PAIDDATE,',COMMENTS=',ERRORCOMMENTS,' // MESSAGE=ALREADY PAID FOR THIS MONTH.//'));
				END IF;
			ELSE
			  SET FINAL_MESSAGE=(CONCAT ('NO ',PAYMENTTYPE,' FOR SELECTED CUSTOMER LEASE PERIOD'));
			END IF;
		END IF;
		IF PAYMENTTYPE='CLEANING FEE' OR PAYMENTTYPE='DEPOSIT REFUND' THEN
		SET @CLDEP_EXISTID=(SELECT PD_ID FROM PAYMENT_DETAILS WHERE CUSTOMER_ID=CUSTID AND CED_REC_VER=RECVERSION AND PP_ID=(SELECT PP_ID FROM PAYMENT_PROFILE WHERE PP_DATA=PAYMENTTYPE) AND PD_FOR_PERIOD=MONTHSTARTDATE);
			IF @CLDEP_EXISTID IS NOT NULL THEN
				SET CUSTOMER_NAME=(SELECT CONCAT(CUSTOMER_FIRST_NAME,' ',CUSTOMER_LAST_NAME)AS CUSTOMERNAME FROM CUSTOMER WHERE CUSTOMER_ID=CUSTID);
				SET FINAL_MESSAGE =(CONCAT('UNIT NO= ',UNITNO,', CUSTOMER ID= ',CUSTID,',CUSTOMER NAME=',CUSTOMER_NAME,',PAYMENT TYPE=',PAYMENTTYPE,',AMOUNT=',AMOUNT,',FOR PERIOD=',MONTHSTARTDATE,',PAIDDATE=',PAIDDATE,',COMMENTS=',ERRORCOMMENTS,' // MESSAGE=ALREADY PAID FOR THIS MONTH.//'));	
			ELSE
				INSERT INTO PAYMENT_DETAILS(UNIT_ID,CUSTOMER_ID,PP_ID,CED_REC_VER,PD_AMOUNT,PD_FOR_PERIOD,PD_PAID_DATE,PD_HIGHLIGHT_FLAG,PD_COMMENTS,ULD_ID)VALUES
				((SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO),CUSTID,(SELECT PP_ID FROM PAYMENT_PROFILE WHERE PP_DATA=PAYMENTTYPE),RECVERSION,AMOUNT,MONTHSTARTDATE,PAIDDATE,HIGHLIGHTFLAG,COMMENTS,USERSTAMP_ID);	
				UPDATE OCBC_BANK_RECORDS SET OBR_REFERENCE='X' WHERE OBR_ID=OCBCID;
			END IF;
		END IF;
	IF PAYMENTTYPE='PAYMENT' THEN
		SET @TEMP_RECVERDAYS_TABLE_DROP=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_RECVERDAYS_TABLE));
		PREPARE TEMP_RECVERDAYS_TABLE_DROP_STMT FROM @TEMP_RECVERDAYS_TABLE_DROP;
		EXECUTE TEMP_RECVERDAYS_TABLE_DROP_STMT;
		SET @TEMP_RECVER_TABLE_DROP=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_RECVER_TABLE));
		PREPARE TEMP_RECVER_TABLEDROP_STMT FROM @TEMP_RECVER_TABLE_DROP;
		EXECUTE TEMP_RECVER_TABLEDROP_STMT;
	END IF;
	IF PAYMENTTYPE='DEPOSIT' OR PAYMENTTYPE='PROCESSING FEE' THEN
		SET @TEMP_DEP_RECVERDAYS_TABLE_DROP=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_DEP_RECVERDAYS_TABLE));
		PREPARE TEMP_DEP_RECVERDAYS_TABLE_DROP_STMT FROM @TEMP_DEP_RECVERDAYS_TABLE_DROP;
		EXECUTE TEMP_DEP_RECVERDAYS_TABLE_DROP_STMT;
		SET @TEMP_DEP_RECVER_TABLE_DROP=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_DEP_RECVER_TABLE));
		PREPARE TEMP_DEP_RECVER_TABLEDROP_STMT FROM @TEMP_DEP_RECVER_TABLE_DROP;
		EXECUTE TEMP_DEP_RECVER_TABLEDROP_STMT;
	END IF;
	COMMIT;
END;