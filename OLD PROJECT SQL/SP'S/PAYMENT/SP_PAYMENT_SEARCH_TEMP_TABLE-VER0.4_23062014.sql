-- VER 0.4 STARTDATE:23/06/2014 ENDDATE:23/06/2014 DESC:DROP THE TEMP TABLES IF ROLLBACK OCCURS. DONE BY :RAJA
DROP PROCEDURE IF EXISTS SP_PAYMENT_SEARCH_TEMP_TABLE;
CREATE PROCEDURE  SP_PAYMENT_SEARCH_TEMP_TABLE
(
IN PAYMENT_SEARCH_INPUTVALUE_1 TEXT,
IN PAYMENT_SEARCH_INPUTVALUE_2 TEXT,
IN PAYMENT_SEARCH_INPUTVALUE_3 TEXT,
IN PAYMENT_SEARCH_INPUTVALUE_4 TEXT,
IN PAYMENT_SEARCH_INPUTVALUE_5 TEXT,
IN SEARCH_OPTION_ID INTEGER,
IN USERSTAMP VARCHAR(50),
OUT FINALTABLENAME TEXT
)
BEGIN
DECLARE SEARCH_TABLENAME VARCHAR(50);
DECLARE FIRST_NAME VARCHAR(30);
DECLARE LAST_NAME VARCHAR(30);
DECLARE MIN_ID INT;
DECLARE MAX_ID INT;
DECLARE USERSTAMP_ID INTEGER;
DECLARE SYSDATEANDTIME VARCHAR(50);
DECLARE SYSDATEANDULDID VARCHAR(50);
DECLARE PAYMENT_RECORD_LIST TEXT;
DECLARE TEMP_PDTLS TEXT;
DECLARE MAX_TCPID INT;
DECLARE MIN_TCPID INT;
DECLARE TEMP_PAYMENTCUSTOMER TEXT;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
ROLLBACK;
IF(PAYMENT_RECORD_LIST IS NOT NULL)THEN
  SET @D_PAYMENT_RECORD_LIST_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',PAYMENT_RECORD_LIST));
  PREPARE D_PAYMENT_RECORD_LIST_DROPQUERY_STMT FROM @D_PAYMENT_RECORD_LIST_DROPQUERY;
  EXECUTE D_PAYMENT_RECORD_LIST_DROPQUERY_STMT;
END IF;
IF(TEMP_PAYMENTCUSTOMER IS NOT NULL)THEN
  SET @D_PAYMENT_TEMPCUSTOMER_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_PAYMENTCUSTOMER));
  PREPARE D_TEMPCUSTOMER_LIST_DROPQUERY_STMT FROM @D_PAYMENT_TEMPCUSTOMER_DROPQUERY;
  EXECUTE D_TEMPCUSTOMER_LIST_DROPQUERY_STMT;
END IF;
END;
START TRANSACTION;
CALL SP_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULDID);
SET USERSTAMP_ID=(SELECT @ULDID);
SET SYSDATEANDTIME=(SELECT SYSDATE());
SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,' ',''));
SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,'-',''));
SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,':',''));
SET SYSDATEANDULDID=(SELECT CONCAT(SYSDATEANDTIME,'_',USERSTAMP_ID));
SET PAYMENT_RECORD_LIST=(SELECT CONCAT('PAYMENT_RECORD_LIST_',SYSDATEANDULDID));
SET @DYNAMICRECORD_LISTQUERY=(SELECT CONCAT('CREATE TABLE ',PAYMENT_RECORD_LIST,'(ID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,PAYMENT_ID INTEGER)'));
PREPARE PAYMENT_RECORD_LIST_STMT from @DYNAMICRECORD_LISTQUERY;
EXECUTE PAYMENT_RECORD_LIST_STMT;
IF(SEARCH_OPTION_ID=7)THEN
SET SEARCH_TABLENAME='UNIT';
SET @DYNAMICRECORD_LIST_INSERTQUERY=(SELECT CONCAT('INSERT INTO ',PAYMENT_RECORD_LIST,'(PAYMENT_ID)SELECT PD_ID FROM PAYMENT_DETAILS WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=',PAYMENT_SEARCH_INPUTVALUE_1,')'));
PREPARE  PAYMENT_RECORD_LIST_INSERTSTMT from @DYNAMICRECORD_LIST_INSERTQUERY;
EXECUTE PAYMENT_RECORD_LIST_INSERTSTMT;
END IF;
IF(SEARCH_OPTION_ID=8)THEN
SET SEARCH_TABLENAME='CUSTOMERNAME';
SET FIRST_NAME = SUBSTRING_INDEX(PAYMENT_SEARCH_INPUTVALUE_2, '_', 1);
SET LAST_NAME = SUBSTRING_INDEX(PAYMENT_SEARCH_INPUTVALUE_2, '_', -1);
SET TEMP_PAYMENTCUSTOMER=(SELECT CONCAT('TEMP_PAYMENT_CUSTOMER_',SYSDATEANDULDID));
SET @D_CUSTOMER_TEMPTABLE_CREATEQUERY=(SELECT CONCAT('CREATE TABLE ',TEMP_PAYMENTCUSTOMER,'(TPC_ID INTEGER AUTO_INCREMENT,CUSTOMERID INTEGER,PRIMARY KEY(TPC_ID))'));
PREPARE D_CUSTOMER_TEMPTABLE_CREATEQUERY_STMT FROM @D_CUSTOMER_TEMPTABLE_CREATEQUERY;
EXECUTE D_CUSTOMER_TEMPTABLE_CREATEQUERY_STMT;
SET @D_CUSTOMER_TEMPTABLE_INSERTQUERY=(SELECT CONCAT('INSERT INTO ',TEMP_PAYMENTCUSTOMER,'(CUSTOMERID)SELECT CUSTOMER_ID FROM CUSTOMER WHERE CUSTOMER_FIRST_NAME = ','"',FIRST_NAME,'"',' AND CUSTOMER_LAST_NAME = ','"',LAST_NAME,'"'));
PREPARE D_CUSTOMER_TEMPTABLE_INSERTQUERY_STMT FROM @D_CUSTOMER_TEMPTABLE_INSERTQUERY;
EXECUTE D_CUSTOMER_TEMPTABLE_INSERTQUERY_STMT;
SET @CUST_MIN_ID_STMT = (SELECT CONCAT('SELECT MIN(TPC_ID)INTO @MINID FROM ',TEMP_PAYMENTCUSTOMER));
PREPARE CUST_MIN_ID_STATEMENT FROM @CUST_MIN_ID_STMT;
EXECUTE CUST_MIN_ID_STATEMENT;
SET MIN_TCPID=@MINID;
SET @CUST_MAX_ID_STMT = (SELECT CONCAT('SELECT MAX(TPC_ID)INTO @MAXID FROM ',TEMP_PAYMENTCUSTOMER));
PREPARE CUST_MAX_ID_STATEMENT FROM @CUST_MAX_ID_STMT;
EXECUTE CUST_MAX_ID_STATEMENT;
SET MAX_TCPID=@MAXID;
WHILE(MIN_TCPID <= MAX_TCPID)DO
SET @D_CUSTOMER_TEMPTABLE_INSERTQUERY=(SELECT CONCAT('INSERT INTO ',PAYMENT_RECORD_LIST,'(PAYMENT_ID)(SELECT PD_ID FROM PAYMENT_DETAILS WHERE UNIT_ID = (SELECT UNIT_ID FROM UNIT WHERE UNIT_NO =',PAYMENT_SEARCH_INPUTVALUE_1,') AND CUSTOMER_ID =(SELECT CUSTOMERID FROM ',TEMP_PAYMENTCUSTOMER,' WHERE TPC_ID=',MIN_TCPID,'))'));
PREPARE PAYMENT_RECORD_LIST_INSERTSTMT FROM @D_CUSTOMER_TEMPTABLE_INSERTQUERY;
EXECUTE PAYMENT_RECORD_LIST_INSERTSTMT;
SET MIN_TCPID = MIN_TCPID + 1;
END WHILE;
END IF;
IF(SEARCH_OPTION_ID=9)THEN
SET SEARCH_TABLENAME='FORPERIOD';
SET @DYNAMICRECORD_LIST_INSERTQUERY=(SELECT CONCAT('INSERT INTO ',PAYMENT_RECORD_LIST,'(PAYMENT_ID)SELECT PD_ID FROM PAYMENT_DETAILS WHERE PD_FOR_PERIOD BETWEEN ','"',PAYMENT_SEARCH_INPUTVALUE_1,'"',' AND ','"',PAYMENT_SEARCH_INPUTVALUE_2,'"'));
PREPARE PAYMENT_RECORD_LIST_INSERTSTMT from @DYNAMICRECORD_LIST_INSERTQUERY;
EXECUTE PAYMENT_RECORD_LIST_INSERTSTMT;
END IF;
IF(SEARCH_OPTION_ID=10)THEN
SET SEARCH_TABLENAME='PAIDDATE';
SET @DYNAMICRECORD_LIST_INSERTQUERY=(SELECT CONCAT('INSERT INTO ',PAYMENT_RECORD_LIST,'(PAYMENT_ID)SELECT PD_ID FROM PAYMENT_DETAILS WHERE PD_PAID_DATE BETWEEN ','"',PAYMENT_SEARCH_INPUTVALUE_1,'"',' AND ','"',PAYMENT_SEARCH_INPUTVALUE_2,'"'));
PREPARE PAYMENT_RECORD_LIST_INSERTSTMT from @DYNAMICRECORD_LIST_INSERTQUERY;
EXECUTE PAYMENT_RECORD_LIST_INSERTSTMT;
END IF;
IF(SEARCH_OPTION_ID=11)THEN
SET SEARCH_TABLENAME='FORPERIOD_AMOUNTRANGAE';
SET @DYNAMICRECORD_LIST_INSERTQUERY=(SELECT CONCAT('INSERT INTO ',PAYMENT_RECORD_LIST,'(PAYMENT_ID)SELECT PD_ID FROM PAYMENT_DETAILS WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=',PAYMENT_SEARCH_INPUTVALUE_1,') AND PD_FOR_PERIOD BETWEEN ','"',PAYMENT_SEARCH_INPUTVALUE_2,'"',' AND ','"',PAYMENT_SEARCH_INPUTVALUE_3,'"',' AND PD_AMOUNT BETWEEN ',PAYMENT_SEARCH_INPUTVALUE_4,' AND ',PAYMENT_SEARCH_INPUTVALUE_5));
PREPARE PAYMENT_RECORD_LIST_INSERTSTMT from @DYNAMICRECORD_LIST_INSERTQUERY;
EXECUTE PAYMENT_RECORD_LIST_INSERTSTMT;
END IF;
SET @TABLENAME=(SELECT CONCAT('TEMP_PAYMENT_',SEARCH_TABLENAME ,'_','FEE_DETAIL'));
SET FINALTABLENAME=(SELECT CONCAT(@TABLENAME,'',SYSDATEANDULDID));
SET @CREATEQUERY=(SELECT CONCAT('CREATE TABLE ',FINALTABLENAME,'(SNO INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    PD_ID INT NOT NULL,
	UNIT_ID INT NOT NULL,
	CUSTOMER_ID INT NOT NULL,
	PD_PAYMENT DECIMAL(7,2),
	PD_DEPOSIT DECIMAL(7,2),
	PD_PROCESSING_FEE DECIMAL(7,2),
	PD_CLEANING_FEE DECIMAL(7,2),
	PD_DEPOSIT_REFUND DECIMAL(7,2))'));
PREPARE  STMT3 from @CREATEQUERY;
EXECUTE STMT3 ;
SET @MIN_ID_STMT = (SELECT CONCAT('SELECT MIN(ID)INTO @MINID FROM ',PAYMENT_RECORD_LIST));
PREPARE MIN_ID_STATEMENT FROM @MIN_ID_STMT;
EXECUTE MIN_ID_STATEMENT;
SET MIN_ID=@MINID;
SET @MAX_ID_STMT = (SELECT CONCAT('SELECT MAX(ID)INTO @MAXID FROM ',PAYMENT_RECORD_LIST));
PREPARE MAX_ID_STATEMENT FROM @MAX_ID_STMT;
EXECUTE MAX_ID_STATEMENT;
SET MAX_ID=@MAXID;
WHILE(MIN_ID <= MAX_ID)DO
SET @CREATE_P_ID=(SELECT CONCAT('SELECT PAYMENT_ID INTO @P_ID FROM ',PAYMENT_RECORD_LIST,' WHERE ID=',MIN_ID));
PREPARE CREATE_P_ID_STMT FROM @CREATE_P_ID;
EXECUTE CREATE_P_ID_STMT;
SET @UNITID=(SELECT UNIT_ID FROM PAYMENT_DETAILS WHERE PD_ID=@P_ID);
SET @CUSTOMERID=(SELECT CUSTOMER_ID FROM PAYMENT_DETAILS WHERE PD_ID=@P_ID);
SET @PAYMENT=(SELECT PD_AMOUNT FROM PAYMENT_DETAILS WHERE PP_ID=1 AND PD_ID=@P_ID);
SET @DEPOSIT=(SELECT PD_AMOUNT FROM PAYMENT_DETAILS WHERE PP_ID=2 AND PD_ID=@P_ID);
SET @PROCESS=(SELECT PD_AMOUNT FROM PAYMENT_DETAILS WHERE PP_ID=3 AND PD_ID=@P_ID);
SET @CLEANING=(SELECT PD_AMOUNT FROM PAYMENT_DETAILS WHERE PP_ID=4 AND PD_ID=@P_ID);
SET @REFUND=(SELECT PD_AMOUNT FROM PAYMENT_DETAILS WHERE PP_ID=5 AND PD_ID=@P_ID);
SET @INSERTQUERY=(SELECT CONCAT('INSERT INTO ',FINALTABLENAME,'(PD_ID,UNIT_ID,CUSTOMER_ID,PD_PAYMENT,PD_DEPOSIT,PD_PROCESSING_FEE,PD_CLEANING_FEE,PD_DEPOSIT_REFUND)VALUES(@P_ID,@UNITID, @CUSTOMERID, @PAYMENT, @DEPOSIT,@PROCESS,@CLEANING,@REFUND)'));
PREPARE  STMT4 from @INSERTQUERY;
EXECUTE STMT4 ;
SET MIN_ID = MIN_ID+1;
END WHILE;
SET @D_PAYMENT_RECORD_LIST_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',PAYMENT_RECORD_LIST));
PREPARE D_PAYMENT_RECORD_LIST_DROPQUERY_STMT FROM @D_PAYMENT_RECORD_LIST_DROPQUERY;
EXECUTE D_PAYMENT_RECORD_LIST_DROPQUERY_STMT;
IF(SEARCH_OPTION_ID=8)THEN
SET @D_PAYMENT_TEMPCUSTOMER_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_PAYMENTCUSTOMER));
PREPARE D_TEMPCUSTOMER_LIST_DROPQUERY_STMT FROM @D_PAYMENT_TEMPCUSTOMER_DROPQUERY;
EXECUTE D_TEMPCUSTOMER_LIST_DROPQUERY_STMT;
END IF;
COMMIT;
END;