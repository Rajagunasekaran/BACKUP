-- VER 0.8 STARTDATE:23/06/2014 ENDDATE:23/06/2014 DESC:DROP THE TEMP TABLES IF ROLLBACK OCCURS. DONE BY :RAJA
DROP PROCEDURE IF EXISTS SP_OUTSTANDING_PAYMENTLIST;
CREATE PROCEDURE SP_OUTSTANDING_PAYMENTLIST(
	IN FORPERIOD VARCHAR(20),
	IN USERSTAMP VARCHAR(50),
	OUT TEMP_FINAL_NONPAIDCUSTOMER TEXT)
BEGIN
	DECLARE MONTHNUMBER VARCHAR(10);
	DECLARE MONTHSTARTDATE DATE;
	DECLARE MONTHENDDATE DATE;
	DECLARE MAXID INTEGER;
	DECLARE CUST_ID INTEGER;
	DECLARE PAYMENT CHAR(5);
	DECLARE DEPOSIT CHAR(5);
	DECLARE PROCESS CHAR(5);
	DECLARE CUST_ENDDATE DATE;
	DECLARE PRETERMINATEDATE DATE;
	DECLARE CUSTOMERENDDATE DATE;
	DECLARE TMPMAXID INT;
	DECLARE TMPNPMAXID INT;
	DECLARE TMPNPMINID INT;
	DECLARE ENDTMPNPMAXID INT;
	DECLARE ENDTMPNPMINID INT;
	DECLARE USERSTAMP_ID TEXT;
	DECLARE SYSDATEANDTIME VARCHAR(50);
	DECLARE SYSDATEANDULDID VARCHAR(50);
	DECLARE EXT_FLAG CHAR(4);
	DECLARE TEMP_NONPAID_CUSTOMER TEXT;
	DECLARE TEMP_OPL_ACTIVECUSTOMER_TABLE TEXT;
	DECLARE TEMP_RENT_PAIDCUSTOMER_TABLE TEXT;
	DECLARE TEMP_ACTIVE_CUSTOMER_DEPOSIT TEXT;
	DECLARE TEMP_DEPOSIT_PAIDCUSTOMER_TABLE TEXT;
	DECLARE TEMP_DEPOSITNONPAID_CUSTOMER TEXT;
	DECLARE TEMP_ACTIVE_CUSTOMER_PROCESSFEE TEXT;
	DECLARE TEMP_PROCESSFEE_PAIDCUSTOMER TEXT;
	DECLARE TEMP_PROCESSFEENONPAID_CUSTOMER TEXT;
	DECLARE TEMP_NONPAIDCUSTOMER TEXT;
	DECLARE TEMP_DUP_NONPAIDCUSTOMER TEXT;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN 
	ROLLBACK; 
IF (TEMP_OPL_ACTIVECUSTOMER_TABLE IS NOT NULL)THEN
  SET @TEMP_OPL_ACTIVECUSTOMER_TABLE_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_OPL_ACTIVECUSTOMER_TABLE));
	PREPARE TEMP_OPL_ACTIVECUSTOMER_TABLE_STMT FROM @TEMP_OPL_ACTIVECUSTOMER_TABLE_DROPQUERY;
	EXECUTE TEMP_OPL_ACTIVECUSTOMER_TABLE_STMT;
END IF;
IF (TEMP_RENT_PAIDCUSTOMER_TABLE IS NOT NULL)THEN
  SET @TEMP_RENT_PAIDCUSTOMER_TABLE_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_RENT_PAIDCUSTOMER_TABLE));
	PREPARE TEMP_RENT_PAIDCUSTOMER_TABLE_STMT FROM @TEMP_RENT_PAIDCUSTOMER_TABLE_DROPQUERY;
	EXECUTE TEMP_RENT_PAIDCUSTOMER_TABLE_STMT;
END IF;
IF (TEMP_NONPAID_CUSTOMER IS NOT NULL)THEN
  SET @TEMP_NONPAID_CUSTOMER_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_NONPAID_CUSTOMER));
	PREPARE TEMP_NONPAID_CUSTOMER_STMT FROM @TEMP_NONPAID_CUSTOMER_DROPQUERY;
	EXECUTE TEMP_NONPAID_CUSTOMER_STMT;
END IF;
IF (TEMP_ACTIVE_CUSTOMER_DEPOSIT IS NOT NULL)THEN
  SET @TEMP_ACTIVE_CUSTOMER_DEPOSIT_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_ACTIVE_CUSTOMER_DEPOSIT));
	PREPARE TEMP_ACTIVE_CUSTOMER_DEPOSIT_STMT FROM @TEMP_ACTIVE_CUSTOMER_DEPOSIT_DROPQUERY;
	EXECUTE TEMP_ACTIVE_CUSTOMER_DEPOSIT_STMT;
END IF;
IF (TEMP_DEPOSIT_PAIDCUSTOMER_TABLE IS NOT NULL)THEN
  SET @TEMP_DEPOSIT_PAIDCUSTOMER_TABLE_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_DEPOSIT_PAIDCUSTOMER_TABLE));
	PREPARE TEMP_DEPOSIT_PAIDCUSTOMER_TABLE_STMT FROM @TEMP_DEPOSIT_PAIDCUSTOMER_TABLE_DROPQUERY;
  EXECUTE TEMP_DEPOSIT_PAIDCUSTOMER_TABLE_STMT;
END IF;
IF (TEMP_DEPOSITNONPAID_CUSTOMER IS NOT NULL)THEN
  SET @TEMP_DEPOSITNONPAID_CUSTOMER_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_DEPOSITNONPAID_CUSTOMER));
	PREPARE TEMP_DEPOSITNONPAID_CUSTOMER_STMT FROM @TEMP_DEPOSITNONPAID_CUSTOMER_DROPQUERY;
	EXECUTE TEMP_DEPOSITNONPAID_CUSTOMER_STMT;
END IF;
IF (TEMP_ACTIVE_CUSTOMER_PROCESSFEE IS NOT NULL)THEN
  SET @TEMP_ACTIVE_CUSTOMER_PROCESSFEE_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_ACTIVE_CUSTOMER_PROCESSFEE));
	PREPARE TEMP_ACTIVE_CUSTOMER_PROCESSFEE_STMT FROM @TEMP_ACTIVE_CUSTOMER_PROCESSFEE_DROPQUERY;
	EXECUTE TEMP_ACTIVE_CUSTOMER_PROCESSFEE_STMT;
END IF;
IF (TEMP_PROCESSFEE_PAIDCUSTOMER IS NOT NULL)THEN
  SET @TEMP_PROCESSFEE_PAIDCUSTOMER_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_PROCESSFEE_PAIDCUSTOMER));
	PREPARE TEMP_PROCESSFEE_PAIDCUSTOMERSTMT FROM @TEMP_PROCESSFEE_PAIDCUSTOMER_DROPQUERY;
	EXECUTE TEMP_PROCESSFEE_PAIDCUSTOMERSTMT;
END IF;
IF (TEMP_PROCESSFEENONPAID_CUSTOMER IS NOT NULL)THEN
  SET @TEMP_PROCESSFEENONPAID_CUSTOMER_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_PROCESSFEENONPAID_CUSTOMER));
	PREPARE TEMP_PROCESSFEENONPAID_CUSTOMER_STMT FROM @TEMP_PROCESSFEENONPAID_CUSTOMER_DROPQUERY;
	EXECUTE TEMP_PROCESSFEENONPAID_CUSTOMER_STMT;
END IF;
IF (TEMP_NONPAIDCUSTOMER IS NOT NULL)THEN
  SET @TEMP_NONPAIDCUSTOMER_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_NONPAIDCUSTOMER));
	PREPARE TEMP_NONPAIDCUSTOMER_STMT FROM @TEMP_NONPAIDCUSTOMER_DROPQUERY;
	EXECUTE TEMP_NONPAIDCUSTOMER_STMT;
END IF;
IF (TEMP_DUP_NONPAIDCUSTOMER IS NOT NULL)THEN
  SET @TEMP_DUP_NONPAIDCUSTOMER_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_DUP_NONPAIDCUSTOMER));
	PREPARE TEMP_DUP_NONPAIDCUSTOMER_STMT FROM @TEMP_DUP_NONPAIDCUSTOMER_DROPQUERY;
	EXECUTE TEMP_DUP_NONPAIDCUSTOMER_STMT;
END IF;
END;
START TRANSACTION;
	SET MONTHNUMBER=(SELECT SUBSTRING(FORPERIOD,1,3));
	SET MONTHSTARTDATE=(SELECT CONCAT((SELECT SUBSTRING_INDEX(FORPERIOD, '-', -1)),'-',(SELECT MONTH(STR_TO_DATE(MONTHNUMBER,'%b'))),'-','01'));
	SET MONTHENDDATE=(SELECT LAST_DAY(MONTHSTARTDATE));
	CALL SP_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULDID);
	SET USERSTAMP_ID=(SELECT @ULDID);
	SET SYSDATEANDTIME=(SELECT SYSDATE());
	SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,' ',''));
	SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,'-',''));
	SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,':',''));
	SET SYSDATEANDULDID=(SELECT CONCAT(SYSDATEANDTIME,'_',USERSTAMP_ID));
	SET TEMP_OPL_ACTIVECUSTOMER_TABLE=(SELECT CONCAT('TEMP_OPL_ACTICE_CUSTOMER_TABLE',SYSDATEANDULDID));
	SET @TEMP_OPL_ACTIVE_CUSTOMER_CREATETABLEQUERY=(SELECT CONCAT('CREATE TABLE ',TEMP_OPL_ACTIVECUSTOMER_TABLE,'(SNO INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,CUSTOMERID INTEGER,UNIT_NO INTEGER(4) UNSIGNED ZEROFILL,CED_REC_VER INTEGER,STARTDATE DATE,ENDDATE DATE,PRETERMINATEDATE DATE)'));
	PREPARE TEMP_OPL_ACTIVE_CUSTOMER_CREATETABLE_STMT FROM @TEMP_OPL_ACTIVE_CUSTOMER_CREATETABLEQUERY;
	EXECUTE TEMP_OPL_ACTIVE_CUSTOMER_CREATETABLE_STMT;
	SET @TEMP_OPL_ACTIVE_CUSTOMER_INSERTQUERY=(SELECT CONCAT('INSERT INTO ',TEMP_OPL_ACTIVECUSTOMER_TABLE,'(CUSTOMERID,UNIT_NO,CED_REC_VER,STARTDATE,ENDDATE,PRETERMINATEDATE) SELECT CUSTOMER_ID,UNIT_NO,CED_REC_VER,CLP_STARTDATE,CLP_ENDDATE,CLP_PRETERMINATE_DATE FROM VW_PAYMENT_CURRENT_ACTIVE_CUSTOMER WHERE CLP_ENDDATE>=CURDATE()AND (CLP_PRETERMINATE_DATE IS NULL OR CLP_PRETERMINATE_DATE>CURDATE()) AND CLP_STARTDATE<=','"',MONTHENDDATE,'"'));
	PREPARE TEMP_OPL_ACTIVE_CUSTOMER_INSERTQUERY_STMT FROM @TEMP_OPL_ACTIVE_CUSTOMER_INSERTQUERY;
	EXECUTE TEMP_OPL_ACTIVE_CUSTOMER_INSERTQUERY_STMT;
	SET @TEMP_OPL_TERM_CUSTOMER_INSERTQUERY=(SELECT CONCAT('INSERT INTO ',TEMP_OPL_ACTIVECUSTOMER_TABLE,'(CUSTOMERID,UNIT_NO,CED_REC_VER,STARTDATE,ENDDATE,PRETERMINATEDATE) SELECT C.CUSTOMER_ID,U.UNIT_NO,CED.CED_REC_VER,CTD.CLP_STARTDATE,CTD.CLP_ENDDATE,CTD.CLP_PRETERMINATE_DATE FROM CUSTOMER_LP_DETAILS CTD,CUSTOMER C,CUSTOMER_ENTRY_DETAILS CED,UNIT U,UNIT_ACCESS_STAMP_DETAILS UASD WHERE CTD.CLP_PRETERMINATE_DATE BETWEEN ','"',MONTHSTARTDATE,'"',' AND CURDATE() AND CTD.CLP_GUEST_CARD IS NULL AND CTD.CLP_STARTDATE<=CURDATE() AND C.CUSTOMER_ID=CED.CUSTOMER_ID AND CED.CED_REC_VER=CTD.CED_REC_VER AND CED.CUSTOMER_ID=CTD.CUSTOMER_ID AND CED.UASD_ID=UASD.UASD_ID AND U.UNIT_ID=UASD.UNIT_ID ORDER BY C.CUSTOMER_ID,CED.CED_REC_VER'));
	PREPARE TEMP_OPL_TERM_CUSTOMER_INSERTQUERY_STMT FROM @TEMP_OPL_TERM_CUSTOMER_INSERTQUERY;
	EXECUTE TEMP_OPL_TERM_CUSTOMER_INSERTQUERY_STMT;
	SET TEMP_RENT_PAIDCUSTOMER_TABLE=(SELECT CONCAT('TEMP_RENT_PAIDCUSTOMER_TABLE',SYSDATEANDULDID));
	SET @RENT_PAIDCUSTOMER_CREATETABLEQUERY=(SELECT CONCAT('CREATE TABLE ',TEMP_RENT_PAIDCUSTOMER_TABLE,'(SNO INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,CUSTOMERID INTEGER,UNIT_NO INTEGER(4) UNSIGNED ZEROFILL,CED_REC_VER INTEGER,STARTDATE DATE,ENDDATE DATE,PRETERMINATEDATE DATE)'));
	PREPARE RENT_PAIDCUSTOMER_CREATETABLE_STMT FROM @RENT_PAIDCUSTOMER_CREATETABLEQUERY;
	EXECUTE RENT_PAIDCUSTOMER_CREATETABLE_STMT;
	SET @RENT_PAIDCUSTOMER_TABLEINSERTQUERY=(SELECT CONCAT('INSERT INTO ',TEMP_RENT_PAIDCUSTOMER_TABLE,'(CUSTOMERID,UNIT_NO,CED_REC_VER,STARTDATE,ENDDATE,PRETERMINATEDATE)SELECT  DISTINCT C.CUSTOMER_ID,U.UNIT_NO,PD.CED_REC_VER,CTD.CLP_STARTDATE,CTD.CLP_ENDDATE,CTD.CLP_PRETERMINATE_DATE FROM PAYMENT_DETAILS PD,UNIT U,CUSTOMER C,CUSTOMER_LP_DETAILS CTD WHERE PD.PD_FOR_PERIOD =','"',MONTHSTARTDATE,'"',' AND PD.PP_ID=1 AND U.UNIT_ID=PD.UNIT_ID AND C.CUSTOMER_ID=PD.CUSTOMER_ID AND CTD.CUSTOMER_ID=PD.CUSTOMER_ID AND CTD.CED_REC_VER=PD.CED_REC_VER AND CTD.CLP_GUEST_CARD IS NULL ORDER BY U.UNIT_NO,C.CUSTOMER_FIRST_NAME'));
	PREPARE RENT_PAIDCUSTOMER_TABLEINSERT_STMT FROM @RENT_PAIDCUSTOMER_TABLEINSERTQUERY;
	EXECUTE RENT_PAIDCUSTOMER_TABLEINSERT_STMT;
	SET TEMP_NONPAID_CUSTOMER=(SELECT CONCAT('TEMP_NONPAID_CUSTOMER',SYSDATEANDULDID));
	SET @TEMP_NONPAID_CUSTOMER_CREATETABLEQUERY=(SELECT CONCAT('CREATE TABLE ',TEMP_NONPAID_CUSTOMER,'(SNO INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,CUSTOMERID INTEGER,UNIT_NO INTEGER(4) UNSIGNED ZEROFILL,CED_REC_VER INTEGER,STARTDATE DATE,ENDDATE DATE,PRETERMINATEDATE DATE)'));
	PREPARE TEMP_NONPAID_CUSTOMER_CREATETABLE_STMT FROM @TEMP_NONPAID_CUSTOMER_CREATETABLEQUERY;
	EXECUTE TEMP_NONPAID_CUSTOMER_CREATETABLE_STMT;
	SET @TEMP_NONPAID_CUSTOMER_INSERTQUERY=(SELECT CONCAT('INSERT INTO ',TEMP_NONPAID_CUSTOMER,'(CUSTOMERID,UNIT_NO,CED_REC_VER,STARTDATE,ENDDATE,PRETERMINATEDATE)SELECT ACT.CUSTOMERID,ACT.UNIT_NO,ACT.CED_REC_VER,ACT.STARTDATE,ACT.ENDDATE,ACT.PRETERMINATEDATE FROM ',TEMP_OPL_ACTIVECUSTOMER_TABLE,' ACT WHERE NOT EXISTS(SELECT RPT.CUSTOMERID,RPT.UNIT_NO,RPT.CED_REC_VER FROM ',TEMP_RENT_PAIDCUSTOMER_TABLE,' RPT WHERE RPT.UNIT_NO=ACT.UNIT_NO AND RPT.CED_REC_VER=ACT.CED_REC_VER AND RPT.CUSTOMERID=ACT.CUSTOMERID)'));
	PREPARE TEMP_NONPAID_CUSTOMER_INSERT_STMT FROM @TEMP_NONPAID_CUSTOMER_INSERTQUERY;
	EXECUTE TEMP_NONPAID_CUSTOMER_INSERT_STMT;
	SET TEMP_ACTIVE_CUSTOMER_DEPOSIT=(SELECT CONCAT('TEMP_ACTIVE_CUSTOMER_DEPOSIT',SYSDATEANDULDID));
	SET @TEMP_ACTIVE_CUSTOMER_DEPOSIT_CREATEQUERY=(SELECT CONCAT('CREATE TABLE ',TEMP_ACTIVE_CUSTOMER_DEPOSIT,'(SNO INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,CUSTOMERID INTEGER,UNIT_NO INTEGER(4) UNSIGNED ZEROFILL,CED_REC_VER INTEGER,STARTDATE DATE,ENDDATE DATE,PRETERMINATEDATE DATE)'));
	PREPARE TEMP_ACTIVE_CUSTOMER_DEPOSIT_STMT FROM @TEMP_ACTIVE_CUSTOMER_DEPOSIT_CREATEQUERY;
	EXECUTE TEMP_ACTIVE_CUSTOMER_DEPOSIT_STMT;
	SET @TEMP_ACTIVE_CUSTOMER_DEPOSIT_INSERTQUERY=(SELECT CONCAT('INSERT INTO ',TEMP_ACTIVE_CUSTOMER_DEPOSIT,'(CUSTOMERID,UNIT_NO,CED_REC_VER,STARTDATE,ENDDATE,PRETERMINATEDATE)SELECT ACT.CUSTOMERID,ACT.UNIT_NO,ACT.CED_REC_VER,ACT.STARTDATE,ACT.ENDDATE,ACT.PRETERMINATEDATE FROM ',TEMP_OPL_ACTIVECUSTOMER_TABLE,' ACT,CUSTOMER_FEE_DETAILS CFD WHERE STARTDATE BETWEEN ','"',MONTHSTARTDATE,'"',' AND ','"',MONTHENDDATE,'"',' AND CFD.CUSTOMER_ID=ACT.CUSTOMERID AND CFD.CED_REC_VER=ACT.CED_REC_VER AND CPP_ID=2'));
	PREPARE TEMP_ACTIVE_CUSTOMER_DEPOSIT_INSERT_STMT FROM @TEMP_ACTIVE_CUSTOMER_DEPOSIT_INSERTQUERY;
	EXECUTE TEMP_ACTIVE_CUSTOMER_DEPOSIT_INSERT_STMT;
	SET TEMP_DEPOSIT_PAIDCUSTOMER_TABLE=(SELECT CONCAT('TEMP_DEPOSIT_PAIDCUSTOMER_TABLE',SYSDATEANDULDID));
	SET @TEMP_DEPOSIT_PAIDCUSTOMER_TABLE_TABLEQUERY=(SELECT CONCAT('CREATE TABLE ',TEMP_DEPOSIT_PAIDCUSTOMER_TABLE,'(SNO INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,CUSTOMERID INTEGER,UNIT_NO INTEGER(4) UNSIGNED ZEROFILL,CED_REC_VER INTEGER,STARTDATE DATE,ENDDATE DATE,PRETERMINATEDATE DATE)'));
	PREPARE TEMP_DEPOSIT_PAIDCUSTOMER_TABLE_STMT FROM @TEMP_DEPOSIT_PAIDCUSTOMER_TABLE_TABLEQUERY;
	EXECUTE TEMP_DEPOSIT_PAIDCUSTOMER_TABLE_STMT;
	SET @TEMP_DEPOSIT_PAIDCUSTOMER_TABLE_INSERT=(SELECT CONCAT('INSERT INTO ',TEMP_DEPOSIT_PAIDCUSTOMER_TABLE,'(CUSTOMERID,UNIT_NO,CED_REC_VER,STARTDATE,ENDDATE,PRETERMINATEDATE)SELECT  DISTINCT C.CUSTOMER_ID,U.UNIT_NO,PD.CED_REC_VER,CTD.CLP_STARTDATE,CTD.CLP_ENDDATE,CTD.CLP_PRETERMINATE_DATE FROM PAYMENT_DETAILS PD,UNIT U,CUSTOMER C,CUSTOMER_LP_DETAILS CTD WHERE PD.PD_FOR_PERIOD =','"',MONTHSTARTDATE,'"',' AND PD.PP_ID=2 AND U.UNIT_ID=PD.UNIT_ID AND C.CUSTOMER_ID=PD.CUSTOMER_ID AND CTD.CUSTOMER_ID=PD.CUSTOMER_ID AND CTD.CED_REC_VER=PD.CED_REC_VER ORDER BY U.UNIT_NO'));
	PREPARE TEMP_DEPOSIT_PAIDCUSTOMER_TABLE_INSERT_STMT FROM @TEMP_DEPOSIT_PAIDCUSTOMER_TABLE_INSERT;
	EXECUTE TEMP_DEPOSIT_PAIDCUSTOMER_TABLE_INSERT_STMT;
	SET TEMP_DEPOSITNONPAID_CUSTOMER=(SELECT CONCAT('TEMP_DEPOSITNONPAID_CUSTOMER',SYSDATEANDULDID));
	SET @TEMP_DEPOSITNONPAID_CUSTOMER_TABLEQUERY=(SELECT CONCAT('CREATE TABLE ',TEMP_DEPOSITNONPAID_CUSTOMER,'(SNO INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,CUSTOMERID INTEGER,UNIT_NO INTEGER(4) UNSIGNED ZEROFILL,CED_REC_VER INTEGER,STARTDATE DATE,ENDDATE DATE,PRETERMINATEDATE DATE)'));
	PREPARE TEMP_DEPOSITNONPAID_CUSTOMER_CREATESTMT FROM @TEMP_DEPOSITNONPAID_CUSTOMER_TABLEQUERY;
	EXECUTE TEMP_DEPOSITNONPAID_CUSTOMER_CREATESTMT;
	SET @TEMP_DEPOSITNONPAID_CUSTOMER_INSERTQUERY=(SELECT CONCAT('INSERT INTO ',TEMP_DEPOSITNONPAID_CUSTOMER,'(CUSTOMERID,UNIT_NO,CED_REC_VER,STARTDATE,ENDDATE,PRETERMINATEDATE)SELECT ACTWD.CUSTOMERID,ACTWD.UNIT_NO,ACTWD.CED_REC_VER,ACTWD.STARTDATE,ACTWD.ENDDATE,ACTWD.PRETERMINATEDATE FROM ',TEMP_ACTIVE_CUSTOMER_DEPOSIT,' ACTWD WHERE NOT EXISTS(SELECT DPT.CUSTOMERID,DPT.UNIT_NO,DPT.CED_REC_VER FROM ',TEMP_DEPOSIT_PAIDCUSTOMER_TABLE,' DPT WHERE DPT.UNIT_NO=ACTWD.UNIT_NO AND DPT.CED_REC_VER=ACTWD.CED_REC_VER AND DPT.CUSTOMERID=ACTWD.CUSTOMERID)'));
	PREPARE TEMP_DEPOSITNONPAID_CUSTOMER_INSERTSTMT FROM @TEMP_DEPOSITNONPAID_CUSTOMER_INSERTQUERY;
	EXECUTE TEMP_DEPOSITNONPAID_CUSTOMER_INSERTSTMT;
	SET TEMP_ACTIVE_CUSTOMER_PROCESSFEE=(SELECT CONCAT('TEMP_ACTIVE_CUSTOMER_PROCESSFEE',SYSDATEANDULDID));
	SET @ACTIVE_CUSTOMER_PROCESSFEE_CREATEQUERY=(SELECT CONCAT('CREATE TABLE ',TEMP_ACTIVE_CUSTOMER_PROCESSFEE,'(SNO INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,CUSTOMERID INTEGER,UNIT_NO INTEGER(4) UNSIGNED ZEROFILL,CED_REC_VER INTEGER,STARTDATE DATE,ENDDATE DATE,PRETERMINATEDATE DATE)'));
	PREPARE ACTIVE_CUSTOMER_PROCESSFEE_CREATESTMT FROM @ACTIVE_CUSTOMER_PROCESSFEE_CREATEQUERY;
	EXECUTE ACTIVE_CUSTOMER_PROCESSFEE_CREATESTMT;
	SET @ACTIVE_CUSTOMER_PROCESSFEE_INSERTQUERY=(SELECT CONCAT('INSERT INTO ',TEMP_ACTIVE_CUSTOMER_PROCESSFEE,'(CUSTOMERID,UNIT_NO,CED_REC_VER,STARTDATE,ENDDATE,PRETERMINATEDATE)SELECT ACT.CUSTOMERID,ACT.UNIT_NO,ACT.CED_REC_VER,ACT.STARTDATE,ACT.ENDDATE,ACT.PRETERMINATEDATE FROM ',TEMP_OPL_ACTIVECUSTOMER_TABLE,' ACT,CUSTOMER_FEE_DETAILS CFD,CUSTOMER_ENTRY_DETAILS CED WHERE STARTDATE BETWEEN ','"',MONTHSTARTDATE,'"',' AND' ,'"',MONTHENDDATE,'"',' AND CFD.CUSTOMER_ID=ACT.CUSTOMERID AND CFD.CED_REC_VER=ACT.CED_REC_VER AND CPP_ID=3 AND CED.CUSTOMER_ID=ACT.CUSTOMERID AND CED.CED_REC_VER=ACT.CED_REC_VER AND CED.CED_PROCESSING_WAIVED IS NULL'));
	PREPARE ACTIVE_CUSTOMER_PROCESSFEE_INSERTSTMT FROM @ACTIVE_CUSTOMER_PROCESSFEE_INSERTQUERY;
	EXECUTE ACTIVE_CUSTOMER_PROCESSFEE_INSERTSTMT;
	SET TEMP_PROCESSFEE_PAIDCUSTOMER=(SELECT CONCAT('TEMP_PROCESSFEE_PAIDCUSTOMER',SYSDATEANDULDID));
	SET @TEMP_PROCESSFEE_PAIDCUSTOMER_CREATEQUERY=(SELECT CONCAT('CREATE TABLE ',TEMP_PROCESSFEE_PAIDCUSTOMER,'(SNO INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,CUSTOMERID INTEGER,UNIT_NO INTEGER(4) UNSIGNED ZEROFILL,CED_REC_VER INTEGER,STARTDATE DATE,ENDDATE DATE,PRETERMINATEDATE DATE)'));
	PREPARE TEMP_PROCESSFEE_PAIDCUSTOMER_CREATE_STMT FROM @TEMP_PROCESSFEE_PAIDCUSTOMER_CREATEQUERY;
	EXECUTE TEMP_PROCESSFEE_PAIDCUSTOMER_CREATE_STMT;
	SET @TEMP_PROCESSFEE_PAIDCUSTOMER_INSERTQUERY=(SELECT CONCAT('INSERT INTO ',TEMP_PROCESSFEE_PAIDCUSTOMER,'(CUSTOMERID,UNIT_NO,CED_REC_VER,STARTDATE,ENDDATE,PRETERMINATEDATE)SELECT  DISTINCT C.CUSTOMER_ID,U.UNIT_NO,PD.CED_REC_VER,CTD.CLP_STARTDATE,CTD.CLP_ENDDATE,CTD.CLP_PRETERMINATE_DATE FROM PAYMENT_DETAILS PD,UNIT U,CUSTOMER C,CUSTOMER_LP_DETAILS CTD WHERE PD.PD_FOR_PERIOD =','"',MONTHSTARTDATE,'"',' AND PD.PP_ID=3 AND U.UNIT_ID=PD.UNIT_ID AND C.CUSTOMER_ID=PD.CUSTOMER_ID AND CTD.CUSTOMER_ID=PD.CUSTOMER_ID AND CTD.CED_REC_VER=PD.CED_REC_VER ORDER BY U.UNIT_NO'));
	PREPARE TEMP_PROCESSFEE_PAIDCUSTOMER_INSERT_STMT FROM @TEMP_PROCESSFEE_PAIDCUSTOMER_INSERTQUERY;
	EXECUTE TEMP_PROCESSFEE_PAIDCUSTOMER_INSERT_STMT;
	SET TEMP_PROCESSFEENONPAID_CUSTOMER=(SELECT CONCAT('TEMP_PROCESSFEENONPAID_CUSTOMER',SYSDATEANDULDID));
	SET @TEMP_PROCESSFEENONPAID_CUSTOMER_CREATEQUERY=(SELECT CONCAT('CREATE TABLE ',TEMP_PROCESSFEENONPAID_CUSTOMER,'(SNO INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,CUSTOMERID INTEGER,UNIT_NO INTEGER(4) UNSIGNED ZEROFILL,CED_REC_VER INTEGER,STARTDATE DATE,ENDDATE DATE,PRETERMINATEDATE DATE)'));
	PREPARE TEMP_PROCESSFEENONPAID_CUSTOMER_CREATESTMT FROM @TEMP_PROCESSFEENONPAID_CUSTOMER_CREATEQUERY;
	EXECUTE TEMP_PROCESSFEENONPAID_CUSTOMER_CREATESTMT;
	SET @TEMP_PROCESSFEENONPAID_CUSTOMER_INSERTQUERY=(SELECT CONCAT('INSERT INTO ',TEMP_PROCESSFEENONPAID_CUSTOMER,'(CUSTOMERID,UNIT_NO,CED_REC_VER,STARTDATE,ENDDATE,PRETERMINATEDATE)SELECT ACTWP.CUSTOMERID,ACTWP.UNIT_NO,ACTWP.CED_REC_VER,ACTWP.STARTDATE,ACTWP.ENDDATE,ACTWP.PRETERMINATEDATE FROM ',TEMP_ACTIVE_CUSTOMER_PROCESSFEE,' ACTWP WHERE NOT EXISTS(SELECT PPT.CUSTOMERID,PPT.UNIT_NO,PPT.CED_REC_VER FROM ',TEMP_PROCESSFEE_PAIDCUSTOMER,' PPT WHERE PPT.UNIT_NO=ACTWP.UNIT_NO AND PPT.CED_REC_VER=ACTWP.CED_REC_VER AND PPT.CUSTOMERID=ACTWP.CUSTOMERID)'));
	PREPARE TEMP_PROCESSFEENONPAID_CUSTOMER_INSERTSTMT FROM @TEMP_PROCESSFEENONPAID_CUSTOMER_INSERTQUERY;
	EXECUTE TEMP_PROCESSFEENONPAID_CUSTOMER_INSERTSTMT;
	SET TEMP_NONPAIDCUSTOMER=(SELECT CONCAT('TEMP_NONPAIDCUSTOMER',SYSDATEANDULDID));
	SET @TEMP_NONPAIDCUSTOMER_CREATEQUERY=(SELECT CONCAT('CREATE TABLE ',TEMP_NONPAIDCUSTOMER,'(SNO INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,CUSTOMERID INTEGER,UNIT_NO INTEGER(4) UNSIGNED ZEROFILL,CUSTOMERNAME VARCHAR(70),CED_REC_VER INTEGER,STARTDATE DATE,ENDDATE DATE,PRETERMINATE_DATE DATE,PAYMENT CHAR(4),DEPOSIT CHAR(4),PROCESSINGFEE CHAR(4),CUST_ENDDATE DATE)'));
	PREPARE TEMP_NONPAIDCUSTOMER_CREATESTMT FROM @TEMP_NONPAIDCUSTOMER_CREATEQUERY;
	EXECUTE TEMP_NONPAIDCUSTOMER_CREATESTMT;
	SET @CUST_MINIDSTMT=(SELECT CONCAT('SELECT MAX(SNO) INTO @TEMPMINID FROM ',TEMP_OPL_ACTIVECUSTOMER_TABLE));
	PREPARE CUST_MINID_STATEMENT FROM @CUST_MINIDSTMT;
	EXECUTE CUST_MINID_STATEMENT;
	SET TMPMAXID=@TEMPMINID;
WHILE TMPMAXID!=0 DO
	SET @TEMP_CUST_ID=(SELECT CONCAT('SELECT CUSTOMERID INTO @TEMP_CUSTOMERID FROM ',TEMP_OPL_ACTIVECUSTOMER_TABLE,' WHERE SNO=',TMPMAXID));
	PREPARE CUSTOMERID_STMT FROM @TEMP_CUST_ID;
	EXECUTE CUSTOMERID_STMT;
	SET @CUST_ID=@TEMP_CUSTOMERID;
		SET @RECVERQUERY=(SELECT CONCAT('SELECT CED_REC_VER INTO @TEMP_CED_REC_VER FROM ',TEMP_OPL_ACTIVECUSTOMER_TABLE,' WHERE SNO=',TMPMAXID));
	PREPARE RECVER_STMT FROM @RECVERQUERY;
	EXECUTE RECVER_STMT;
		SET @UNITNOQUERY=(SELECT CONCAT('SELECT UNIT_NO INTO @TEMP_UNIT FROM ',TEMP_OPL_ACTIVECUSTOMER_TABLE,' WHERE CUSTOMERID=@CUST_ID AND CED_REC_VER=@TEMP_CED_REC_VER'));
	PREPARE UNITNO_STMT FROM @UNITNOQUERY;
	EXECUTE UNITNO_STMT;
		SET @TEMP_PAYMENTQUERY=(SELECT CONCAT('SELECT ACT.CUSTOMERID INTO @TEMP_PAYMENTID FROM ',TEMP_OPL_ACTIVECUSTOMER_TABLE,' ACT,',TEMP_NONPAID_CUSTOMER,' TNPC WHERE ACT.CUSTOMERID=TNPC.CUSTOMERID AND ACT.CED_REC_VER=TNPC.CED_REC_VER AND TNPC.CUSTOMERID=@CUST_ID AND ACT.CED_REC_VER=@TEMP_CED_REC_VER'));
	PREPARE TEMP_PAYMENT_STMT FROM @TEMP_PAYMENTQUERY;
	EXECUTE TEMP_PAYMENT_STMT;
	SET PAYMENT=@TEMP_PAYMENTID;
	SET @TEMP_DEPOSITQUERY=(SELECT CONCAT('SELECT ACT.CUSTOMERID INTO @TEMP_DEPOSITID FROM ',TEMP_OPL_ACTIVECUSTOMER_TABLE,' ACT,',TEMP_DEPOSITNONPAID_CUSTOMER,' TDNPC WHERE ACT.CUSTOMERID=TDNPC.CUSTOMERID AND ACT.CED_REC_VER=TDNPC.CED_REC_VER AND TDNPC.CUSTOMERID=@CUST_ID AND ACT.CED_REC_VER=@TEMP_CED_REC_VER'));
	PREPARE TEMP_DEPOSIT_STMT FROM @TEMP_DEPOSITQUERY;
	EXECUTE TEMP_DEPOSIT_STMT;
	SET DEPOSIT=@TEMP_DEPOSITID;
	SET @TEMP_PROCESSQUERY=(SELECT CONCAT('SELECT ACT.CUSTOMERID INTO @TEMP_PROCESSID FROM ',TEMP_OPL_ACTIVECUSTOMER_TABLE,' ACT,',TEMP_PROCESSFEENONPAID_CUSTOMER,' TPNPC WHERE ACT.CUSTOMERID=TPNPC.CUSTOMERID AND ACT.CED_REC_VER=TPNPC.CED_REC_VER AND TPNPC.CUSTOMERID=@CUST_ID AND ACT.CED_REC_VER=@TEMP_CED_REC_VER'));
	PREPARE TEMP_PROCESS_STMT FROM @TEMP_PROCESSQUERY;
	EXECUTE TEMP_PROCESS_STMT;
	SET PROCESS=@TEMP_PROCESSID;
	SET @STARTDATEQUERY=(SELECT CONCAT('SELECT STARTDATE INTO @TEMP_STARTDATE FROM ',TEMP_OPL_ACTIVECUSTOMER_TABLE,' WHERE CUSTOMERID=@CUST_ID AND CED_REC_VER=@TEMP_CED_REC_VER'));
	PREPARE STARTDATE_STMT FROM @STARTDATEQUERY;
	EXECUTE STARTDATE_STMT;
	SET @ENDDATEQUERY=(SELECT CONCAT('SELECT ENDDATE INTO @TEMP_ENDDATE FROM ',TEMP_OPL_ACTIVECUSTOMER_TABLE,' WHERE CUSTOMERID=@CUST_ID AND CED_REC_VER=@TEMP_CED_REC_VER'));
	PREPARE ENDDATE_STMT FROM @ENDDATEQUERY;
	EXECUTE ENDDATE_STMT;
	SET @PRETERMINATEDATEQUERY=(SELECT CONCAT('SELECT PRETERMINATEDATE INTO @TEMP_PTDDATE FROM ',TEMP_OPL_ACTIVECUSTOMER_TABLE,' WHERE CUSTOMERID=@CUST_ID AND CED_REC_VER=@TEMP_CED_REC_VER'));
	PREPARE PRETERMINATEDATE_STMT FROM @PRETERMINATEDATEQUERY;
	EXECUTE PRETERMINATEDATE_STMT;
	SET @TEMP_PRETERMINATEDATEQUERY=(SELECT CONCAT('SELECT PRETERMINATEDATE INTO @PTDDATE FROM ',TEMP_OPL_ACTIVECUSTOMER_TABLE,' WHERE (PRETERMINATEDATE BETWEEN ','"',MONTHSTARTDATE,'"',' AND ','"',MONTHENDDATE,'"',' OR PRETERMINATEDATE IS NULL) AND CUSTOMERID=@CUST_ID AND CED_REC_VER=@TEMP_CED_REC_VER'));
	PREPARE TEMP_PTDDATE_STMT FROM @TEMP_PRETERMINATEDATEQUERY;
	EXECUTE TEMP_PTDDATE_STMT;
	IF @PTDDATE IS NULL THEN
		SET @PRE_TERMDATE=@TEMP_ENDDATE;
	ELSE
		SET @PRE_TERMDATE=@PTDDATE;
	END IF;
	  IF @TEMP_PTDDATE IS NULL THEN
	SET @TEMP_PTDDATE=NULL;
  END IF; 
	IF PAYMENT IS NOT NULL THEN
	SET @PAYMENTID='X';
ELSE
	SET @PAYMENTID='NULL';
END IF;
IF DEPOSIT IS NOT NULL THEN
	SET @DEPOSITID='X';
ELSE
	SET @DEPOSITID='NULL';
END IF;
IF PROCESS IS NOT NULL THEN
	SET @PROCESSID='X';
ELSE
	SET @PROCESSID='NULL';
END IF;
IF(@PAYMENTID='X' OR @DEPOSITID='X' OR @PROCESSID='X')THEN
	SET @CUSTOMER_NAME=(SELECT CONCAT(CUSTOMER_FIRST_NAME,' ',CUSTOMER_LAST_NAME) AS CUSTOMERNAME FROM CUSTOMER WHERE CUSTOMER_ID=@CUST_ID);
	SET @TEMP_NONPAIDCUSTOMER_INSERT_QUERY=(SELECT CONCAT('INSERT INTO ',TEMP_NONPAIDCUSTOMER,'(CUSTOMERID,UNIT_NO,CUSTOMERNAME,CED_REC_VER,STARTDATE,ENDDATE,PRETERMINATE_DATE,PAYMENT,DEPOSIT,PROCESSINGFEE,CUST_ENDDATE)VALUES(@CUST_ID,@TEMP_UNIT,@CUSTOMER_NAME,@TEMP_CED_REC_VER,@TEMP_STARTDATE,@TEMP_ENDDATE,@TEMP_PTDDATE,@PAYMENTID,@DEPOSITID,@PROCESSID,@PRE_TERMDATE)')); 
	PREPARE TEMP_NONPAIDCUSTOMER_INSERTQUERY_STMT FROM @TEMP_NONPAIDCUSTOMER_INSERT_QUERY;
	EXECUTE TEMP_NONPAIDCUSTOMER_INSERTQUERY_STMT;
END IF;
	SET @TEMP_PAYMENTID=NULL;
	SET @TEMP_DEPOSITID=NULL;
	SET @TEMP_PROCESSID=NULL;
	SET @PRE_TERMDATE=NULL;
	SET TMPMAXID=TMPMAXID-1;
END WHILE;
	SET TEMP_DUP_NONPAIDCUSTOMER=(SELECT CONCAT('TEMP_DUP_NONPAIDCUSTOMER',SYSDATEANDULDID));
	SET @TEMP_DUP_NONPAIDCUSTOMER_CREATEQUERY=(SELECT CONCAT('CREATE TABLE ',TEMP_DUP_NONPAIDCUSTOMER,'(SNO INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,CUSTOMERID INTEGER,UNIT_NO INTEGER(4) UNSIGNED ZEROFILL,CUSTOMERNAME VARCHAR(70),CED_REC_VER INTEGER,STARTDATE DATE,ENDDATE DATE,PRETERMINATE_DATE DATE,PAYMENT CHAR(4),DEPOSIT CHAR(4),PROCESSINGFEE CHAR(4),CUST_ENDDATE DATE)'));
	PREPARE TEMP_DUP_NONPAIDCUSTOMER_CREATESTMT FROM @TEMP_DUP_NONPAIDCUSTOMER_CREATEQUERY;
	EXECUTE TEMP_DUP_NONPAIDCUSTOMER_CREATESTMT;
	SET @TEMP_DUP_NONPAIDCUSTOMER_INSERT_QUERY=(SELECT CONCAT('INSERT INTO ',TEMP_DUP_NONPAIDCUSTOMER,'(CUSTOMERID,UNIT_NO,CUSTOMERNAME,CED_REC_VER,STARTDATE,ENDDATE,PRETERMINATE_DATE,PAYMENT,DEPOSIT,PROCESSINGFEE,CUST_ENDDATE)SELECT CUSTOMERID,UNIT_NO,CUSTOMERNAME,CED_REC_VER,STARTDATE,ENDDATE,PRETERMINATE_DATE,PAYMENT,DEPOSIT,PROCESSINGFEE,CUST_ENDDATE FROM ',TEMP_NONPAIDCUSTOMER,' ORDER BY UNIT_NO,CUSTOMERNAME,CED_REC_VER')); 
	PREPARE TEMP_DUP_NONPAIDCUSTOMER_INSERTQUERY_STMT FROM @TEMP_DUP_NONPAIDCUSTOMER_INSERT_QUERY;
	EXECUTE TEMP_DUP_NONPAIDCUSTOMER_INSERTQUERY_STMT;
	SET @NPMAXID=(SELECT CONCAT('SELECT MAX(SNO) INTO @NPMAXID FROM ',TEMP_DUP_NONPAIDCUSTOMER));
	PREPARE NPMAXID_STATEMENT FROM @NPMAXID;
	EXECUTE NPMAXID_STATEMENT;
	SET TMPNPMAXID=@NPMAXID;
	SET @NPMINID=(SELECT CONCAT('SELECT MIN(SNO) INTO @NPMINID FROM ',TEMP_DUP_NONPAIDCUSTOMER));
	PREPARE NPMINID_STATEMENT FROM @NPMINID;
	EXECUTE NPMINID_STATEMENT;
	SET TMPNPMINID=@NPMINID;
	SET TEMP_FINAL_NONPAIDCUSTOMER=(SELECT CONCAT('TEMP_FINAL_NONPAIDCUSTOMER',SYSDATEANDULDID));
	SET @TEMP_FINAL_NONPAIDCUSTOMER_CREATEQUERY=(SELECT CONCAT('CREATE TABLE ',TEMP_FINAL_NONPAIDCUSTOMER,'(SNO INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,CUSTOMERID INTEGER,UNIT_NO INTEGER(4) UNSIGNED ZEROFILL,CUSTOMERNAME VARCHAR(70),CED_REC_VER INTEGER,STARTDATE DATE,ENDDATE DATE,PRETERMINATE_DATE DATE,PAYMENT CHAR(4),DEPOSIT CHAR(4),PROCESSINGFEE CHAR(4),CUST_ENDDATE DATE,FINAL_ENDDATE DATE)'));
	PREPARE TEMP_FINAL_NONPAIDCUSTOMER_CREATESTMT FROM @TEMP_FINAL_NONPAIDCUSTOMER_CREATEQUERY;
	EXECUTE TEMP_FINAL_NONPAIDCUSTOMER_CREATESTMT;
WHILE TMPNPMINID<= TMPNPMAXID DO
	SET @FINAL_CUSTIDQUERY=(SELECT CONCAT('SELECT CUSTOMERID INTO @FINAL_CUSTOMERID FROM ',TEMP_DUP_NONPAIDCUSTOMER,' WHERE SNO=',TMPNPMINID));
	PREPARE FINAL_CUSTID_STMT FROM @FINAL_CUSTIDQUERY;
	EXECUTE FINAL_CUSTID_STMT;
		SET @FINAL_RECVERQUERY=(SELECT CONCAT('SELECT CED_REC_VER INTO @FINAL_CED_REC_VER FROM ',TEMP_DUP_NONPAIDCUSTOMER,' WHERE SNO=',TMPNPMINID));
	PREPARE FINAL_RECVER_STMT FROM @FINAL_RECVERQUERY;
	EXECUTE FINAL_RECVER_STMT;
		SET @FINAL_UNITNOQUERY=(SELECT CONCAT('SELECT UNIT_NO INTO @FINAL_UNIT FROM ',TEMP_DUP_NONPAIDCUSTOMER,' WHERE SNO=',TMPNPMINID));
	PREPARE FINAL_UNITNO_STMT FROM @FINAL_UNITNOQUERY;
	EXECUTE FINAL_UNITNO_STMT;
		SET @FINAL_DATAMATCHQUERY=(SELECT CONCAT('SELECT CUSTOMERID INTO @AVALDATA FROM ',TEMP_FINAL_NONPAIDCUSTOMER,' WHERE CUSTOMERID=@FINAL_CUSTOMERID AND UNIT_NO=@FINAL_UNIT'));
	PREPARE FINAL_DATAMATCH_STMT FROM @FINAL_DATAMATCHQUERY;
	EXECUTE FINAL_DATAMATCH_STMT;
	IF @AVALDATA IS NULL THEN
	SET @TEMP_FINAL_NONPAIDCUSTOMER_INSERT_QUERY=(SELECT CONCAT('INSERT INTO ',TEMP_FINAL_NONPAIDCUSTOMER,'(CUSTOMERID,UNIT_NO,CUSTOMERNAME,CED_REC_VER,STARTDATE,ENDDATE,PRETERMINATE_DATE,PAYMENT,DEPOSIT,PROCESSINGFEE,CUST_ENDDATE)SELECT CUSTOMERID,UNIT_NO,CUSTOMERNAME,CED_REC_VER,STARTDATE,ENDDATE,PRETERMINATE_DATE,PAYMENT,DEPOSIT,PROCESSINGFEE,CUST_ENDDATE FROM ',TEMP_DUP_NONPAIDCUSTOMER,' WHERE SNO=',TMPNPMINID)); 
	PREPARE TEMP_FINAL_NONPAIDCUSTOMER_INSERTQUERY_STMT FROM @TEMP_FINAL_NONPAIDCUSTOMER_INSERT_QUERY;
	EXECUTE TEMP_FINAL_NONPAIDCUSTOMER_INSERTQUERY_STMT;
	ELSE
	SET @PAYMENTFLAGQUERY=(SELECT CONCAT('SELECT PAYMENT INTO @PAYMENTFLAGID FROM ',TEMP_DUP_NONPAIDCUSTOMER,' WHERE SNO= ',TMPNPMINID));
	PREPARE PAYMENTFLAG_STMT FROM @PAYMENTFLAGQUERY;
	EXECUTE PAYMENTFLAG_STMT;
	SET @DEPOSITFLAGQUERY=(SELECT CONCAT('SELECT DEPOSIT INTO @DEPOSITFLAGID FROM ',TEMP_DUP_NONPAIDCUSTOMER,' WHERE SNO= ',TMPNPMINID));
	PREPARE DEPOSITFLAG_STMT FROM @DEPOSITFLAGQUERY;
	EXECUTE DEPOSITFLAG_STMT;
	SET @PROCESSFLAGQUERY=(SELECT CONCAT('SELECT PROCESSINGFEE INTO @PROCESSFLAGID FROM ',TEMP_DUP_NONPAIDCUSTOMER,' WHERE SNO= ',TMPNPMINID));
	PREPARE PROCESSFLAG_STMT FROM @PROCESSFLAGQUERY;
	EXECUTE PROCESSFLAG_STMT;
	SET @FINAL_ENDDATEQUERY=(SELECT CONCAT('SELECT ENDDATE INTO @FINAL_ENDDATE FROM ',TEMP_DUP_NONPAIDCUSTOMER,' WHERE SNO=',TMPNPMINID));
	PREPARE FINAL_ENDDATE_STMT FROM @FINAL_ENDDATEQUERY;
	EXECUTE FINAL_ENDDATE_STMT;
	IF (@PAYMENTFLAGID='NULL')THEN
	SET @FINAL_PAYMENT='NULL';
	ELSE 
	SET @FINAL_PAYMENT=@PAYMENTFLAGID;
	END IF;
	IF (@DEPOSITFLAGID='NULL')THEN
	SET @FINAL_DEPOSIT='NULL';
	ELSE 
	SET @FINAL_DEPOSIT=@DEPOSITFLAGID;
	END IF;
	IF (@PROCESSFLAGID='NULL')THEN
	SET @FINAL_PROCESS='NULL';
	ELSE 
	SET @FINAL_PROCESS=@PROCESSFLAGID;
	END IF;
	SET @TEMP_FINAL_NONPAIDCUSTOMER_UPDATE_QUERY=(SELECT CONCAT('UPDATE ',TEMP_FINAL_NONPAIDCUSTOMER,' SET PAYMENT=@FINAL_PAYMENT,DEPOSIT=@FINAL_DEPOSIT,PROCESSINGFEE=@FINAL_PROCESS,CED_REC_VER=@FINAL_CED_REC_VER,CUST_ENDDATE=@FINAL_ENDDATE WHERE CUSTOMERID=@FINAL_CUSTOMERID AND UNIT_NO=@FINAL_UNIT'));
	PREPARE TEMP_FINAL_NONPAIDCUSTOMER_UPDATE_STMT FROM @TEMP_FINAL_NONPAIDCUSTOMER_UPDATE_QUERY;
	EXECUTE TEMP_FINAL_NONPAIDCUSTOMER_UPDATE_STMT;
	END IF;
	SET @AVALDATA=NULL;
	SET @FINAL_CUSTOMERID=NULL;
	SET @FINAL_UNIT=NULL;
	SET @PAYMENTFLAGID=NULL;
	SET @DEPOSITFLAGID=NULL;
	SET @PROCESSFLAGID=NULL;
	SET TMPNPMINID=TMPNPMINID+1;
END WHILE;
	SET @ENDNPMAXID=(SELECT CONCAT('SELECT MAX(SNO) INTO @ENDNPMAXID FROM ',TEMP_FINAL_NONPAIDCUSTOMER));
	PREPARE ENDNPMAXID_STATEMENT FROM @ENDNPMAXID;
	EXECUTE ENDNPMAXID_STATEMENT;
	SET ENDTMPNPMAXID=@ENDNPMAXID;
	SET @ENDNPMINID=(SELECT CONCAT('SELECT MIN(SNO) INTO @ENDNPMINID FROM ',TEMP_FINAL_NONPAIDCUSTOMER));
	PREPARE ENDNPMINID_STATEMENT FROM @ENDNPMINID;
	EXECUTE ENDNPMINID_STATEMENT;
	SET ENDTMPNPMINID=@ENDNPMINID;
	WHILE ENDTMPNPMINID<= ENDTMPNPMAXID DO
	SET @FINAL_CUSTENDDATEQUERY=(SELECT CONCAT('SELECT CUST_ENDDATE INTO @FINAL_CUST_ENDDATE FROM ',TEMP_FINAL_NONPAIDCUSTOMER,' WHERE CUST_ENDDATE BETWEEN ','"',MONTHSTARTDATE,'"',' AND "',MONTHENDDATE,'"',' AND SNO=',ENDTMPNPMINID));
	PREPARE FINAL_CUSTENDDATE_STMT FROM @FINAL_CUSTENDDATEQUERY;
	EXECUTE FINAL_CUSTENDDATE_STMT;
	SET @TEMP_FINAL_NONPAIDCUSTOMERUPDATE=(SELECT CONCAT('UPDATE ',TEMP_FINAL_NONPAIDCUSTOMER,' SET FINAL_ENDDATE=@FINAL_CUST_ENDDATE WHERE SNO=',ENDTMPNPMINID));
	PREPARE TEMP_FINAL_NONPAIDCUSTOMERUPDATE_STMT FROM @TEMP_FINAL_NONPAIDCUSTOMERUPDATE;
	EXECUTE TEMP_FINAL_NONPAIDCUSTOMERUPDATE_STMT;
	SET @FINAL_CUST_ENDDATE=NULL;
	SET ENDTMPNPMINID=ENDTMPNPMINID+1;
	END WHILE;
	SET @TEMP_OPL_ACTIVECUSTOMER_TABLE_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_OPL_ACTIVECUSTOMER_TABLE));
	PREPARE TEMP_OPL_ACTIVECUSTOMER_TABLE_STMT FROM @TEMP_OPL_ACTIVECUSTOMER_TABLE_DROPQUERY;
	EXECUTE TEMP_OPL_ACTIVECUSTOMER_TABLE_STMT;
	SET @TEMP_RENT_PAIDCUSTOMER_TABLE_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_RENT_PAIDCUSTOMER_TABLE));
	PREPARE TEMP_RENT_PAIDCUSTOMER_TABLE_STMT FROM @TEMP_RENT_PAIDCUSTOMER_TABLE_DROPQUERY;
	EXECUTE TEMP_RENT_PAIDCUSTOMER_TABLE_STMT;
	SET @TEMP_NONPAID_CUSTOMER_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_NONPAID_CUSTOMER));
	PREPARE TEMP_NONPAID_CUSTOMER_STMT FROM @TEMP_NONPAID_CUSTOMER_DROPQUERY;
	EXECUTE TEMP_NONPAID_CUSTOMER_STMT;
	SET @TEMP_ACTIVE_CUSTOMER_DEPOSIT_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_ACTIVE_CUSTOMER_DEPOSIT));
	PREPARE TEMP_ACTIVE_CUSTOMER_DEPOSIT_STMT FROM @TEMP_ACTIVE_CUSTOMER_DEPOSIT_DROPQUERY;
	EXECUTE TEMP_ACTIVE_CUSTOMER_DEPOSIT_STMT;
	SET @TEMP_DEPOSIT_PAIDCUSTOMER_TABLE_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_DEPOSIT_PAIDCUSTOMER_TABLE));
	PREPARE TEMP_DEPOSIT_PAIDCUSTOMER_TABLE_STMT FROM @TEMP_DEPOSIT_PAIDCUSTOMER_TABLE_DROPQUERY;
  EXECUTE TEMP_DEPOSIT_PAIDCUSTOMER_TABLE_STMT;
	SET @TEMP_DEPOSITNONPAID_CUSTOMER_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_DEPOSITNONPAID_CUSTOMER));
	PREPARE TEMP_DEPOSITNONPAID_CUSTOMER_STMT FROM @TEMP_DEPOSITNONPAID_CUSTOMER_DROPQUERY;
	EXECUTE TEMP_DEPOSITNONPAID_CUSTOMER_STMT;
	SET @TEMP_ACTIVE_CUSTOMER_PROCESSFEE_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_ACTIVE_CUSTOMER_PROCESSFEE));
	PREPARE TEMP_ACTIVE_CUSTOMER_PROCESSFEE_STMT FROM @TEMP_ACTIVE_CUSTOMER_PROCESSFEE_DROPQUERY;
	EXECUTE TEMP_ACTIVE_CUSTOMER_PROCESSFEE_STMT;
	SET @TEMP_PROCESSFEE_PAIDCUSTOMER_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_PROCESSFEE_PAIDCUSTOMER));
	PREPARE TEMP_PROCESSFEE_PAIDCUSTOMERSTMT FROM @TEMP_PROCESSFEE_PAIDCUSTOMER_DROPQUERY;
	EXECUTE TEMP_PROCESSFEE_PAIDCUSTOMERSTMT;
	SET @TEMP_PROCESSFEENONPAID_CUSTOMER_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_PROCESSFEENONPAID_CUSTOMER));
	PREPARE TEMP_PROCESSFEENONPAID_CUSTOMER_STMT FROM @TEMP_PROCESSFEENONPAID_CUSTOMER_DROPQUERY;
	EXECUTE TEMP_PROCESSFEENONPAID_CUSTOMER_STMT;
	SET @TEMP_NONPAIDCUSTOMER_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_NONPAIDCUSTOMER));
	PREPARE TEMP_NONPAIDCUSTOMER_STMT FROM @TEMP_NONPAIDCUSTOMER_DROPQUERY;
	EXECUTE TEMP_NONPAIDCUSTOMER_STMT;
	SET @TEMP_DUP_NONPAIDCUSTOMER_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_DUP_NONPAIDCUSTOMER));
	PREPARE TEMP_DUP_NONPAIDCUSTOMER_STMT FROM @TEMP_DUP_NONPAIDCUSTOMER_DROPQUERY;
	EXECUTE TEMP_DUP_NONPAIDCUSTOMER_STMT;
COMMIT;
END;