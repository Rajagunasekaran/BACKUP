-- DATE FUNCTIONS

--CURDATE()-- TODAY DATE
SELECT CURDATE(); 

--CURTIME() -- CURRNET TIME
SELECT CURTIME();

--DATE()-- RETURN DATE
SELECT DATE('2014-02-02');
SELECT DATE('2003-12-31 01:02:03');

--DAYNAME()-- RETURN DAY NAME
SELECT DAYNAME('2007-02-03');

--DAYOFMONTH()-- RETURN DAY OF GIVEN MONTH
SELECT DAYOFMONTH('2007-02-03');

--DAYOFYEAR()-- RETURN DAY OF YEAR RANGE 1-366
SELECT DAYOFYEAR('2007-02-03');

--FROM_DAYS()-- FROM DAYS MAKE DATE
SELECT FROM_DAYS(730669);

--EXTRACT()-- EXTRACT YEAR, MONTH, MINUTE FROM DATE
SELECT EXTRACT(YEAR FROM '2009-07-02');-- 2009
SELECT EXTRACT(YEAR_MONTH FROM '2009-07-02 01:02:03');-- 200907
SELECT EXTRACT(DAY_MINUTE FROM '2009-07-02 01:02:03');-- 20102

--HOUR()-- RETURN HOUR
SELECT HOUR('10:05:03');-- 10
SELECT HOUR('272:59:59');-- 272

--MAKEDATE()-- MAKE GIVEN VALUE AS DATE
SELECT MAKEDATE(2011,31), MAKEDATE(2011,32);-- '2011-01-31', '2011-02-01'

--DAY()-- RETURN DAY OF THE DATE
SELECT DAY(CURDATE());
SELECT DAY('2014-02-02');

--MONTH() -- SELECT MONTH FROM DATE
SELECT MONTH(CURDATE());
SELECT MONTH('2014-02-02');
SELECT MONTH(STR_TO_DATE('mar','%b'));
SELECT MONTH(STR_TO_DATE('JAN','%b'));
SELECT MONTH('2014-02-02') - MONTH('2011-08-02') + (12 * ( YEAR('2011-08-02') - YEAR('2014-02-02')))+1;

--YEAR()-- SELECT MONTH FROM DATE
SELECT YEAR(CURDATE()); 
SELECT YEAR ('2014-02-02');

--DATE_ADD() -- ADD DATE OR ANY TO THE GIVEN DATE
SELECT DATE_ADD('2014-02-02', INTERVAL 9 MONTH);
SELECT DATE_ADD(CURDATE(), INTERVAL 3 YEAR);
SELECT DATE_ADD(CURDATE(), INTERVAL 1 DAY);

--DATE_SUB()-- SUB DATE OR ANY TO THE GIVEN DATE
SELECT DATE_SUB('2012-04-30', INTERVAL 1 DAY);
SELECT DATE_SUB(CURDATE(), INTERVAL 3 YEAR);
SELECT DATE_SUB(CURDATE(), INTERVAL 1 DAY);

--ADDDATE()  -- IT WILL ONLY ADD THE DATE WHICH WE GIVE.
SELECT ADDDATE('2014-01-01',4);
SELECT ADDDATE(CURDATE(),INTERVAL 1 MONTH);-- ADD ONE MONTH FROM CURRENT DATE

--SUBDATE()  -- IT WILL ONLY SUB THE DATE WHICH WE GIVE.
SELECT SUBDATE('2014-01-01',4);
SELECT SUBDATE(CURDATE(),INTERVAL 1 MONTH);-- MINUS ONE MONTH FROM CURRENT DATE

--SUBTIME()-- SUBTRACT TIME FROM TIMESTAMP 
SELECT SUBTIME('2014-02-10 01:36:01','08:00:00');

--ADDTIME()-- ADD TIME FROM TIMESTAMP
SELECT ADDTIME('2013-4-7 17:06:19','08:00:00');
SELECT ADDTIME('1:06:19','08:00:00');

--TIMEDIFF() -- GIVE TIME DIFF
SELECT TIMEDIFF('2008-12-31 23:59:59.000001','2008-12-30 01:01:01.000002');-- '46:58:57.999999'

--DATEDIFF()-- GIVE DATE DIFFERENCE
SELECT DATEDIFF('2007-12-31 23:59:59','2007-12-30');

--TIMESTAMPDIFF()-- FIND TIMESTAMP DIFFERENCE.
SELECT TIMESTAMPDIFF(YEAR,'1989-01-01',CURDATE()); 

--LAST_DAY() -- GIVE THE LAST DATE OF THE GIVEN DATE.
SELECT LAST_DAY('2004-02-05');-- '2004-02-29'
SELECT LAST_DAY('2004-01-01 01:01:01');-- '2004-01-31'

--NOW()-- RETURN DATE AND TIME
SELECT NOW();

--PERIOD_ADD()-- ADD VALUE WITH GIVEN VALUES
SELECT PERIOD_ADD(200801,2);

--PERIOD_DIFF()-- GIVE DIFF B/W GIVEN VALUES
SELECT PERIOD_DIFF(200802,200703);

--TIMESTAMPADD()-- ADD TIMESTAMP
SELECT TIMESTAMPADD(MINUTE,1,'2003-01-02');-- '2003-01-02 00:01:00'
SELECT TIMESTAMPADD(WEEK,1,'2003-01-02');-- '2003-01-09'

--TIMESTAMPDIFF()-- GIVE TIMESTAMP DIFF
SELECT TIMESTAMPDIFF(MONTH,'2003-02-01','2003-05-01');-- 3
SELECT TIMESTAMPDIFF(YEAR,'2002-05-01','2001-01-01');-- -1
SELECT TIMESTAMPDIFF(MINUTE,'2003-02-01','2003-05-01 12:05:55');-- 128885

--WEEK() -- RETURN NO OF WEEKS UPTO GIVEN DATE 0-SUN,1-MON,...
SELECT WEEK('2008-02-20');-- 7
SELECT WEEK('2008-02-20',0);-- 7
SELECT WEEK('2008-02-20',1);-- 8

--DATE_FORMAT()
SELECT DATE_FORMAT('2014-01-01','%D-%M-%Y'); -- 1st-January-2014
SELECT DATE_FORMAT('2014-01-01','%d-%m-%y'); -- 01-01-14
SELECT DATE_FORMAT('2014-01-01','%d-%m-%Y'); -- 01-01-2014
SELECT DATE_FORMAT(UD_START_DATE,'%D/%M/%Y') AS UD_START_DATE FROM UNIT_DETAILS;

--STR_TO_DATE()-- STRING TO DATE 
SELECT STR_TO_DATE(CONCAT('1-', SUBSTRING('JANUARY-2014',1,3) ,'-',SUBSTRING_INDEX('JANUARY-2014','-',-1)),'%d-%b-%Y');

--UNIX_TIMESTAMP()
SELECT UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP('2007-03-19 09:50:00');

-- RETURN THE NO DAYS IN THE MONTH
SELECT DAY(LAST_DAY('2014-09-01'));
SELECT DAYOFMONTH(LAST_DAY('2014-09-01'));
SELECT RIGHT( LAST_DAY('2014-09-01') , 2 );

-- CALCULATE THE TOTAL NO DAYS IN THE YEAR
SELECT 5 * (DATEDIFF('2012-12-31', '2012-01-01') DIV 7) + MID('0123444401233334012222340111123400012345001234550', 7 * WEEKDAY('2012-01-01') + WEEKDAY('2012-12-31') + 1, 1);

-- CALCULATE THE TOTAL NO DAYS IN THE MONTH WITHOUT SUNDAY
SET @E='2012-12-31';
SET @S='2012-12-01';
SELECT 6 * (DATEDIFF('2012-12-31', '2012-01-01') DIV 7) + MID('0123444401233334012222340111123400012345001234550', 7 * WEEKDAY('2012-01-01') + WEEKDAY('2012-12-31') + 1, 1) - (SELECT COUNT(*) FROM public_holiday WHERE DAYOFWEEK(PH_DATE) < 7);
SELECT 6 * (DATEDIFF('2012-08-31', '2012-08-01') DIV 7) + MID('0123444401233334012222340111123400012345001234550', 7 * WEEKDAY('2012-08-01') + WEEKDAY('2012-08-31') + 1, 1);
SELECT 6 * (DATEDIFF(@E, @S) DIV 7) + MID('0123444401233334012222340111123400012345001234550', 7 * WEEKDAY(@S) + WEEKDAY(@E) + 1, 1);

-- CALCULATE THE TOTAL NO DAYS IN THE MONTH WITHOUT SUNDAY AND HOLIDAY
SELECT 6 * (DATEDIFF(@E, @S) DIV 7) + MID('0123444401233334012222340111123400012345001234550', 7 * WEEKDAY(@S) + WEEKDAY(@E) + 1, 1) - (SELECT COUNT(*) FROM public_holiday WHERE PH_DATE BETWEEN @S AND @E);

-- FIND SUNDAYS IN A MONTH
SELECT DATE_ADD('2014-08-01', INTERVAL ROW DAY) AS DATE, ROW+1  AS DAYOFMONTH FROM
(SELECT @ROW := @ROW + 1 AS ROW FROM 
(SELECT 0 UNION ALL SELECT 1 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6) T1,
(SELECT 0 UNION ALL SELECT 1 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6) T2, 
(SELECT @ROW:=-1) T3 LIMIT 31) B
WHERE DATE_ADD('2014-08-01', INTERVAL ROW DAY) BETWEEN '2014-08-01' AND '2014-08-31' AND DAYOFWEEK(DATE_ADD('2014-08-01', INTERVAL ROW DAY))=1;


-- STRING FUNCTION

--SUBSTRING() -- SELECT SUBSTRING FROM GIVEN
SELECT SUBSTRING('2011-08-01',1,3);
SELECT SUBSTRING('ORIGINAL STRING',1,4); -- ORIG

--SUBSTRING_INDEX()-- SELECT THE SUBSITRING FROM GIVEN
SELECT SUBSTRING_INDEX('2011-08-01','-',-1);
SELECT SUBSTRING_INDEX('January-2014','-',-1); -- 2014

--LENGTH()-- RETURN LENGTH OF STIRNG
SELECT LENGTH('RAAA');
SELECT LENGTH(3432445);

--CHAR_LENGTH()-- RETURN CHAR LENGTH
SELECT CHAR_LENGTH('RAJSA');
SELECT CHAR_LENGTH(434324);

--IFNULL() -- IF VALUE IS NULL
SELECT IFNULL(null, '0');

--LOCATE()-- FIND THE LOCATION OF THE GIVEN STRING 
SELECT LOCATE(',','USER,ADMIN');

--CONCAT()-- CONCADINAT THE GIVEN
SELECT CONCAT('A','-','B','-','C'); -- A-B-C
SELECT CONCAT(2011,'-',02,'-','01');

--REPLACE()-- REPLACE THE STRING OR ANY
SET ERRORMSG=(SELECT REPLACE(ERRORMSG,'[CUSTOMER]',CUSTOMERNAME));
SELECT REPLACE('CUSTOMER NAME [CUSTOMER]','[CUSTOMER]','RAJA');
SELECT REPLACE(REPLACE(REPLACE('REASON-DUE-TO (PERSONAL WORK)','(',''), '-', ' '),')', '');

--EXPR REGEXP PAT OR EXPR RLIKE PAT -- IT IS ALSO LIKE (LIKE KEY) PATTERN MATCHING 
-- “.” MATCHES ANY SINGLE CHARACTER.
-- A CHARACTER CLASS “[...]” MATCHES ANY CHARACTER WITHIN THE BRACKETS. FOR EXAMPLE, “[ABC]” MATCHES “A”, “B”, OR “C”. TO NAME A RANGE OF CHARACTERS, USE A DASH. “[A-Z]” MATCHES ANY LETTER, WHEREAS “[0-9]” MATCHES ANY DIGIT.
-- “*” MATCHES ZERO OR MORE INSTANCES OF THE THING PRECEDING IT. FOR EXAMPLE, “X*” MATCHES ANY NUMBER OF “X” CHARACTERS, “[0-9]*” MATCHES ANY NUMBER OF DIGITS, AND “.*” MATCHES ANY NUMBER OF ANYTHING.
-- USE “^” AND “$” TO MATCH THE BEGINNING AND END OF THE NAME:
SELECT * FROM PET WHERE NAME LIKE 'b%'; -- O/P Buffy,bowser
SELECT * FROM PET WHERE NAME REGEXP '^b'; -- O/P Buffy,bowser

-- COMPARISON TO BE CASE SENSITIVE, USE THE BINARY KEYWORD 
-- THIS QUERY MATCHES ONLY LOWERCASE “b” AT THE BEGINNING OF A NAME:
SELECT * FROM PET WHERE NAME REGEXP BINARY '^b'; -- O/P bowser

-- TO FIND NAMES CONTAINING EXACTLY FIVE CHARACTERS,AND FIVE INSTANCES OF “.” IN BETWEEN:
SELECT * FROM PET WHERE NAME REGEXP '^.....$';-- O/P Buffy,Claws
SELECT * FROM pet WHERE name REGEXP '^.{5}$';
SELECT "+123-456 78.90" REGEXP '.*1[^0-9]*2[^0-9]*3';

-- AGGRIGATION FUNCTION

--AVG() -- GIVE AVERAGE VALUE
SELECT AVG(BUYPRICE) AVERAGE_BUY_PRICE FROM PRODUCTS;

--SUM() -- GIVE AVERAGE VALUE
SELECT SUM(BUYPRICE) SUM_BUY_PRICE FROM PRODUCTS;

--MAX()-- GIVE MAX VALUES OF COLUMN
SELECT MAX(BUYPRICE) HIGHEST_PRICE FROM PRODUCTS;

--MIN()-- GIVE MIN VALUES OF COLUMN
SELECT MIN(BUYPRICE) LOWEST_PRICE FROM PRODUCTS;

--MOD() -- MODULES OF GIVEN VALUE
SELECT MOD(8,12);
SELECT MOD(MONTH(CURDATE()) , 12) + 1;

-- CONVERSIONS

--CAST()-- RETURN AS DECIAML VALUE
SELECT CAST(6/4 AS DECIMAL(3,1));

--CONVERT()
SELECT CONVERT('JHGFD' USING utf8);
SELECT (2 + CONVERT('2', UNSIGNED))/2;