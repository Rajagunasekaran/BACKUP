DROP PROCEDURE IF EXISTS SP_TS_DAILY_REPORT_INSERT;
CREATE PROCEDURE SP_TS_DAILY_REPORT_INSERT(
IN REPORT TEXT,
IN REASON TEXT,
IN SINGLE_DATE DATE, 
IN SECOND_DATE DATE,
IN URCID INT(11), 
IN LOGIN_ID TEXT, 
IN URE_PERMISSION VARCHAR(10),
IN URE_ATTENDANCE VARCHAR(10),
IN URE_PSID TEXT, 
IN URE_MORNING_SESSION VARCHAR(20), 
IN URE_AFTERNOON_SESSION VARCHAR(20),
IN BANDWIDTH DECIMAL(6,2),
IN LOCATION TEXT, 
IN URE_ULD_ID TEXT,
OUT REPORT_SUCCESS TEXT)
BEGIN
	DECLARE ULDID INTEGER;
	DECLARE URE_ULDID INTEGER;
	DECLARE MIN_DATE DATE;
	DECLARE MAX_DATE DATE;
	DECLARE WEEKEND VARCHAR(10);
	DECLARE PUBLICHOLIDAY DATE;
	DECLARE ONDUTY DATE;
	DECLARE MINID INTEGER;
	DECLARE MAXID INTEGER;
	DECLARE LOGINID INTEGER;
	DECLARE TEMPLOGINID TEXT;
	DECLARE TEMP_LOGINID TEXT;
	DECLARE PERMID INTEGER;
	DECLARE ERROR_MSG TEXT;
	DECLARE ATTENID INTEGER;
	DECLARE SESSION_ID INTEGER;
	DECLARE REPORTDATE TEXT;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
		ROLLBACK;
		IF REPORT_SUCCESS=' ' THEN
		SET REPORT_SUCCESS=0;
		END IF;
	END;
	SET AUTOCOMMIT=0;
	START TRANSACTION;
	CALL SP_TS_CHANGE_USERSTAMP_AS_ULDID(LOGIN_ID,@ULD_ID);
	SET ULDID=@ULD_ID;
	CALL SP_TS_CHANGE_USERSTAMP_AS_ULDID(URE_ULD_ID,@ULD_ID);
	SET URE_ULDID=@ULD_ID;
	IF REPORT='' THEN
		SET REPORT=NULL;
	END IF;
	IF REASON='' THEN
		SET REASON=NULL;
	END IF;
	IF URE_PERMISSION ='' THEN
		SET URE_PERMISSION=NULL;
	END IF;
	IF URE_PSID='' THEN
		SET URE_PSID= NULL;
	END IF;
	IF LOGIN_ID='' THEN
		SET LOGIN_ID=NULL;
	END IF;
	IF SECOND_DATE='' THEN
		SET SECOND_DATE=NULL;
	END IF;
	SET MIN_DATE=SINGLE_DATE;
	SET MAX_DATE=SECOND_DATE;
SET TEMPLOGINID=(SELECT CONCAT('TEMP_LOGINID',SYSDATE()));
SET TEMPLOGINID=(SELECT REPLACE(TEMPLOGINID,' ',''));
SET TEMPLOGINID=(SELECT REPLACE(TEMPLOGINID,'-',''));
SET TEMPLOGINID=(SELECT REPLACE(TEMPLOGINID,':',''));
SET TEMP_LOGINID=(SELECT CONCAT(TEMPLOGINID,'_',URE_ULDID));
SET REPORT_SUCCESS=' ';
SET PERMID=(SELECT AC_ID FROM ATTENDANCE_CONFIGURATION WHERE CGN_ID=6 AND AC_DATA=URE_PERMISSION);
SET ATTENID=(SELECT AC_ID FROM ATTENDANCE_CONFIGURATION WHERE CGN_ID=5 AND AC_DATA=URE_ATTENDANCE);
SET SESSION_ID=(SELECT AC_ID FROM ATTENDANCE_CONFIGURATION WHERE CGN_ID=4 AND AC_DATA=URE_MORNING_SESSION);
IF (URE_PERMISSION IS NOT NULL) THEN
      IF  (PERMID NOT BETWEEN 9 AND 14) THEN
        SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 19);
     	SET REPORT_SUCCESS = (SELECT CONCAT(REPORT_SUCCESS,',',ERROR_MSG));
      END IF;
END IF;
IF (URE_ATTENDANCE IS NOT NULL) THEN
	IF  (ATTENID NOT BETWEEN 4 AND 8) THEN
         SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 20);
         SET REPORT_SUCCESS =(SELECT CONCAT(REPORT_SUCCESS,',',ERROR_MSG));
    END IF;
END IF;
IF(URE_MORNING_SESSION  IS NOT NULL OR URE_AFTERNOON_SESSION IS NOT NULL) THEN
       IF  ( SESSION_ID NOT BETWEEN 1 AND 3) THEN
         	SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 21);
        	SET REPORT_SUCCESS =(SELECT CONCAT(REPORT_SUCCESS,',',ERROR_MSG));
       END IF;
END IF;
IF (REPORT IS NULL AND REASON IS NULL) THEN
    SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 23);
    SET REPORT_SUCCESS = (SELECT CONCAT(REPORT_SUCCESS,',',ERROR_MSG));
END IF;
IF (BANDWIDTH IS NOT NULL) THEN
    	SET @BANDWIDTH_VALUE=(SELECT SUBSTRING_INDEX(BANDWIDTH, '.', 1));
        IF(LENGTH(@BANDWIDTH_VALUE) > 4) THEN
            SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 24);
         	SET REPORT_SUCCESS = (SELECT CONCAT(REPORT_SUCCESS,',',ERROR_MSG));
        END IF;
        IF BANDWIDTH>1000 THEN
          SET ERROR_MSG=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=67);
          SET ERROR_MSG=(SELECT REPLACE(ERROR_MSG,'[BW]',BANDWIDTH));
          SET REPORT_SUCCESS = (SELECT CONCAT(REPORT_SUCCESS,',',ERROR_MSG));
        END IF;
END IF;
IF(URE_ATTENDANCE IS NOT NULL) THEN
    IF (ATTENID=4)THEN
        IF (REPORT IS NULL AND REASON IS NULL) THEN
            SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 25);
           	SET REPORT_SUCCESS = (SELECT CONCAT(REPORT_SUCCESS,',',ERROR_MSG));
        END IF;
        IF (URE_PSID IS NULL) THEN
           SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 26);
           SET REPORT_SUCCESS = (SELECT CONCAT(REPORT_SUCCESS,',',ERROR_MSG));
        END IF;
    END IF;
    IF (ATTENID=5)THEN
        IF (URE_PSID IS NULL) THEN
           SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 27);
           SET REPORT_SUCCESS = (SELECT CONCAT(REPORT_SUCCESS,',',ERROR_MSG));
         END IF;
        IF (REPORT IS NULL) THEN
            SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 30);
          	SET REPORT_SUCCESS = (SELECT CONCAT(REPORT_SUCCESS,',',ERROR_MSG));
        END IF;
    END IF;
    IF (ATTENID=6)THEN
        IF (URE_PERMISSION IS NOT NULL) THEN
           	SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 28);
          	SET REPORT_SUCCESS = (SELECT CONCAT(REPORT_SUCCESS,',',ERROR_MSG));
        END IF;
        IF (REASON IS NULL) THEN
       		SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 31);
          	SET REPORT_SUCCESS = (SELECT CONCAT(REPORT_SUCCESS,',',ERROR_MSG));
       	END IF;
      	IF (URE_PSID IS NOT NULL) THEN
       		SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 32);
          	SET REPORT_SUCCESS = (SELECT CONCAT(REPORT_SUCCESS,',',ERROR_MSG));
      	END IF;
    END IF;
    IF (ATTENID=7)THEN
          IF (URE_PERMISSION IS NOT NULL) THEN
           	 	SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 29);
          		SET REPORT_SUCCESS = (SELECT CONCAT(REPORT_SUCCESS,',',ERROR_MSG));
          END IF;
          IF (URE_PSID IS NOT NULL) THEN
            SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 33);
          	SET REPORT_SUCCESS = (SELECT CONCAT(REPORT_SUCCESS,',',ERROR_MSG));
          END IF;
    END IF;
END IF;
IF SINGLE_DATE IS NOT NULL AND SECOND_DATE IS NULL THEN
	IF EXISTS (SELECT UARD_REPORT FROM USER_ADMIN_REPORT_DETAILS WHERE ULD_ID = ULDID AND UARD_DATE = SINGLE_DATE) THEN
        SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 22);
        SET REPORT_SUCCESS = (SELECT CONCAT(REPORT_SUCCESS,',',ERROR_MSG));
    END IF;
END IF;
IF SINGLE_DATE IS NOT NULL AND SECOND_DATE IS NOT NULL AND LOGIN_ID IS NOT NULL THEN
	IF EXISTS(SELECT * FROM USER_ADMIN_REPORT_DETAILS WHERE UARD_DATE BETWEEN SINGLE_DATE AND SECOND_DATE AND ULD_ID=ULDID)THEN
		SET REPORTDATE=(SELECT GROUP_CONCAT(DATE_FORMAT(UARD_DATE, '%d-%m-%Y'))  FROM USER_ADMIN_REPORT_DETAILS WHERE UARD_DATE BETWEEN SINGLE_DATE AND SECOND_DATE AND ULD_ID=ULDID);
		SET ERROR_MSG=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 68);
		SET ERROR_MSG=(SELECT REPLACE(ERROR_MSG,'[DD/MM/YY]',REPORTDATE));
		SET ERROR_MSG=(SELECT REPLACE(ERROR_MSG,'[LOGIN]',LOGIN_ID));
		SET REPORT_SUCCESS = (SELECT CONCAT(REPORT_SUCCESS,',',ERROR_MSG));
	END IF;
END IF;
IF SINGLE_DATE IS NOT NULL AND SECOND_DATE IS NOT NULL AND LOGIN_ID IS NULL AND URCID=1 THEN 
		SET @DROP_TEMP_TABLE=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_LOGINID));
		PREPARE DROP_TEMP_TABLE_STMT FROM @DROP_TEMP_TABLE;
		EXECUTE DROP_TEMP_TABLE_STMT;
		SET @CREATE_TEMP_TABLE=(SELECT CONCAT('CREATE TABLE ',TEMP_LOGINID,'(ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,ULDID INTEGER,LOGINID TEXT)'));
		PREPARE CREATE_TEMP_TABLE_STMT FROM @CREATE_TEMP_TABLE;
		EXECUTE CREATE_TEMP_TABLE_STMT;
		SET @INSERT_TEMP_TABLE=(SELECT CONCAT('INSERT INTO ',TEMP_LOGINID,'(ULDID,LOGINID) SELECT U.ULD_ID,V.ULD_LOGINID FROM VW_ACCESS_RIGHTS_TERMINATE_LOGINID V,USER_LOGIN_DETAILS U WHERE U.ULD_LOGINID=V.ULD_LOGINID AND V.URC_ID!=2'));
		PREPARE INSERT_TEMP_TABLE_STMT FROM @INSERT_TEMP_TABLE;
		EXECUTE INSERT_TEMP_TABLE_STMT;
		SET @TEMPTABLE=TEMP_LOGINID;
		SET @SET_MINID=(SELECT CONCAT('SELECT MIN(ID) INTO @MIN_ID FROM ',TEMP_LOGINID));
		PREPARE SET_MINID_STMT FROM @SET_MINID;
		EXECUTE SET_MINID_STMT;
		SET MINID=@MIN_ID;
		SET @SET_MAXID=(SELECT CONCAT('SELECT MAX(ID) INTO @MAX_ID FROM ',TEMP_LOGINID));
		PREPARE SET_MAXID_STMT FROM @SET_MAXID;
		EXECUTE SET_MAXID_STMT;
		SET MAXID=@MAX_ID;
		SET @COUNT=1;
		WHILE MINID<=MAXID DO
			SET @SET_LOGIN_ID=(SELECT CONCAT('SELECT ULDID INTO @ULDID FROM ',TEMP_LOGINID,' WHERE ID=',MINID));
			PREPARE LOGIN_ID_STMT FROM @SET_LOGIN_ID;
			EXECUTE LOGIN_ID_STMT;
			SET LOGINID=@ULDID;
			IF EXISTS(SELECT * FROM USER_ADMIN_REPORT_DETAILS WHERE UARD_DATE BETWEEN SINGLE_DATE AND SECOND_DATE AND ULD_ID=LOGINID)THEN
				SET REPORTDATE=(SELECT GROUP_CONCAT(DATE_FORMAT(UARD_DATE, '%d-%m-%Y'))  FROM USER_ADMIN_REPORT_DETAILS WHERE UARD_DATE BETWEEN SINGLE_DATE AND SECOND_DATE AND ULD_ID=LOGINID);
				SET ERROR_MSG=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 68);
				SET ERROR_MSG=(SELECT REPLACE(ERROR_MSG,'[DD/MM/YY]',REPORTDATE));
				SET ERROR_MSG=(SELECT REPLACE(ERROR_MSG,'[LOGIN]',(SELECT ULD_LOGINID FROM USER_LOGIN_DETAILS WHERE ULD_ID=LOGINID)));
				SET REPORT_SUCCESS = (SELECT CONCAT(REPORT_SUCCESS,',',ERROR_MSG));
			END IF;
			SET MINID=MINID+1;
			SET @COUNT=@COUNT+1;
		END WHILE;
END IF;
SET REPORT_SUCCESS=(SELECT SUBSTRING(REPORT_SUCCESS,3));
IF REPORT_SUCCESS=' ' OR REPORT_SUCCESS IS NULL THEN
	IF (SECOND_DATE IS NULL) THEN
		IF NOT EXISTS(SELECT UARD_DATE FROM USER_ADMIN_REPORT_DETAILS WHERE ULD_ID=ULDID AND UARD_DATE=SINGLE_DATE)THEN 
			INSERT INTO USER_ADMIN_REPORT_DETAILS (UARD_REPORT,UARD_REASON,UARD_DATE,URC_ID,ULD_ID,UARD_PERMISSION,UARD_ATTENDANCE,UARD_PSID,UARD_AM_SESSION,UARD_PM_SESSION,UARD_BANDWIDTH,UARD_USERSTAMP_ID)
			VALUES (REPORT,REASON,SINGLE_DATE,URCID,ULDID,(SELECT AC_ID FROM ATTENDANCE_CONFIGURATION WHERE CGN_ID=6 AND AC_DATA=URE_PERMISSION),(SELECT AC_ID FROM ATTENDANCE_CONFIGURATION WHERE CGN_ID=5 AND AC_DATA=URE_ATTENDANCE),URE_PSID,
			(SELECT AC_ID FROM ATTENDANCE_CONFIGURATION WHERE CGN_ID=4 AND AC_DATA=URE_MORNING_SESSION),(SELECT AC_ID FROM ATTENDANCE_CONFIGURATION WHERE CGN_ID=4 AND AC_DATA =URE_AFTERNOON_SESSION),BANDWIDTH,URE_ULDID);
			SET REPORT_SUCCESS=1; 
		END IF;
	END IF;
	IF ((URE_ATTENDANCE='0' OR URE_ATTENDANCE='OD') AND LOGIN_ID IS NOT NULL) THEN
		IF (SECOND_DATE IS NOT NULL) THEN
			WHILE(MIN_DATE<=MAX_DATE)DO
				SET WEEKEND=(SELECT DATE_FORMAT(MIN_DATE,'%W'));      
				SET PUBLICHOLIDAY=(SELECT PH_DATE FROM PUBLIC_HOLIDAY WHERE PH_DATE=MIN_DATE);
				SET ONDUTY=(SELECT OED_DATE FROM ONDUTY_ENTRY_DETAILS WHERE OED_DATE=MIN_DATE);
				IF(WEEKEND!='Sunday')THEN
					IF(PUBLICHOLIDAY IS NULL)THEN
						IF(ONDUTY IS NULL)THEN
							IF NOT EXISTS(SELECT UARD_DATE FROM USER_ADMIN_REPORT_DETAILS WHERE ULD_ID=ULDID AND UARD_DATE=MIN_DATE)THEN
								INSERT INTO USER_ADMIN_REPORT_DETAILS (UARD_REPORT,UARD_REASON,UARD_DATE,URC_ID,ULD_ID,UARD_PERMISSION,UARD_ATTENDANCE,UARD_PSID,UARD_AM_SESSION,UARD_PM_SESSION,UARD_BANDWIDTH,UARD_USERSTAMP_ID)
								VALUES (REPORT,REASON,MIN_DATE,URCID,ULDID,(SELECT AC_ID FROM ATTENDANCE_CONFIGURATION WHERE CGN_ID=6 AND AC_DATA=URE_PERMISSION),(SELECT AC_ID FROM ATTENDANCE_CONFIGURATION WHERE CGN_ID=5 AND AC_DATA=URE_ATTENDANCE),URE_PSID,
								(SELECT AC_ID FROM ATTENDANCE_CONFIGURATION WHERE CGN_ID=4 AND AC_DATA=URE_MORNING_SESSION),(SELECT AC_ID FROM ATTENDANCE_CONFIGURATION WHERE CGN_ID=4 AND AC_DATA =URE_AFTERNOON_SESSION),BANDWIDTH,URE_ULDID);
								SET REPORT_SUCCESS=1;
							END IF;
						END IF;
					END IF;
				END IF;      
				SET MIN_DATE=ADDDATE(MIN_DATE,1);      
			END WHILE;
		END IF;
	END IF;
	IF LOGIN_ID IS NULL AND SINGLE_DATE IS NOT NULL AND SECOND_DATE IS NOT NULL AND URCID=1 THEN
	SET @TEST=1;
		SET @DROP_TEMP_TABLE=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_LOGINID));
		PREPARE DROP_TEMP_TABLE_STMT FROM @DROP_TEMP_TABLE;
		EXECUTE DROP_TEMP_TABLE_STMT;
		SET @CREATE_TEMP_TABLE=(SELECT CONCAT('CREATE TABLE ',TEMP_LOGINID,'(ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,ULDID INTEGER,LOGINID TEXT)'));
		PREPARE CREATE_TEMP_TABLE_STMT FROM @CREATE_TEMP_TABLE;
		EXECUTE CREATE_TEMP_TABLE_STMT;
		SET @INSERT_TEMP_TABLE=(SELECT CONCAT('INSERT INTO ',TEMP_LOGINID,'(ULDID,LOGINID) SELECT U.ULD_ID,V.ULD_LOGINID FROM VW_ACCESS_RIGHTS_TERMINATE_LOGINID V,USER_LOGIN_DETAILS U WHERE U.ULD_LOGINID=V.ULD_LOGINID AND V.URC_ID!=2'));
		PREPARE INSERT_TEMP_TABLE_STMT FROM @INSERT_TEMP_TABLE;
		EXECUTE INSERT_TEMP_TABLE_STMT;
		SET @SET_MINID=(SELECT CONCAT('SELECT MIN(ID) INTO @MIN_ID FROM ',TEMP_LOGINID));
		PREPARE SET_MINID_STMT FROM @SET_MINID;
		EXECUTE SET_MINID_STMT;
		SET MINID=@MIN_ID;
		SET @SET_MAXID=(SELECT CONCAT('SELECT MAX(ID) INTO @MAX_ID FROM ',TEMP_LOGINID));
		PREPARE SET_MAXID_STMT FROM @SET_MAXID;
		EXECUTE SET_MAXID_STMT;
		SET MAXID=@MAX_ID;
		set @FLAG=10;
		WHILE MINID<=MAXID DO
			SET @FLAG=15;
			SET @SET_LOGIN_ID=(SELECT CONCAT('SELECT ULDID INTO @ULDID FROM ',TEMP_LOGINID,' WHERE ID=',MINID));
			PREPARE LOGIN_ID_STMT FROM @SET_LOGIN_ID;
			EXECUTE LOGIN_ID_STMT;
			SET LOGINID=@ULDID;
			IF (URE_ATTENDANCE='0' OR URE_ATTENDANCE='OD') THEN
					WHILE(MIN_DATE<=MAX_DATE)DO
						SET WEEKEND=(SELECT DATE_FORMAT(MIN_DATE,'%W'));      
						SET PUBLICHOLIDAY=(SELECT PH_DATE FROM PUBLIC_HOLIDAY WHERE PH_DATE=MIN_DATE);
						SET ONDUTY=(SELECT OED_DATE FROM ONDUTY_ENTRY_DETAILS WHERE OED_DATE=MIN_DATE);
						IF(WEEKEND!='Sunday')THEN
							IF(PUBLICHOLIDAY IS NULL)THEN
								IF(ONDUTY IS NULL)THEN
									IF NOT EXISTS(SELECT UARD_DATE FROM USER_ADMIN_REPORT_DETAILS WHERE ULD_ID=LOGINID AND UARD_DATE=MIN_DATE)THEN
										INSERT INTO USER_ADMIN_REPORT_DETAILS (UARD_REPORT,UARD_REASON,UARD_DATE,URC_ID,ULD_ID,UARD_PERMISSION,UARD_ATTENDANCE,UARD_PSID,UARD_AM_SESSION,UARD_PM_SESSION,UARD_BANDWIDTH,UARD_USERSTAMP_ID)
										VALUES (REPORT,REASON,MIN_DATE,URCID,LOGINID,(SELECT AC_ID FROM ATTENDANCE_CONFIGURATION WHERE CGN_ID=6 AND AC_DATA=URE_PERMISSION),(SELECT AC_ID FROM ATTENDANCE_CONFIGURATION WHERE CGN_ID=5 AND AC_DATA=URE_ATTENDANCE),URE_PSID,
										(SELECT AC_ID FROM ATTENDANCE_CONFIGURATION WHERE CGN_ID=4 AND AC_DATA=URE_MORNING_SESSION),(SELECT AC_ID FROM ATTENDANCE_CONFIGURATION WHERE CGN_ID=4 AND AC_DATA =URE_AFTERNOON_SESSION),BANDWIDTH,URE_ULDID);
										SET REPORT_SUCCESS=1;
									END IF;
								END IF;
							END IF;
						END IF;      
						SET MIN_DATE=ADDDATE(MIN_DATE,1);      
					END WHILE;
			END IF;
			SET MIN_DATE=SINGLE_DATE;
			SET MAX_DATE=SECOND_DATE;
			SET MINID=MINID+1;
		END WHILE;
		SET @DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_LOGINID));
		PREPARE DROPQUERYSTMT FROM @DROPQUERY;
		EXECUTE DROPQUERYSTMT;
	END IF;
END IF;
IF LOCATION IS NOT NULL THEN
	UPDATE EMPLOYEE_CHECK_IN_OUT_DETAILS SET ECIOD_CHECK_OUT_TIME=(SELECT CURTIME()),ECIOD_CHECK_OUT_LOCATION=LOCATION,ECIOD_USERSTAMP_ID=URE_ULDID WHERE ULD_ID=ULDID AND ECIOD_DATE=SINGLE_DATE;
END IF;
IF REPORT_SUCCESS=' ' THEN
	SET REPORT_SUCCESS=0;
END IF;
COMMIT;
END;