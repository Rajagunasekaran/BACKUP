-- VERSION 0.2 STARTDATE:01/10/2014 ENDDATE:01/10/2014 ISSUE NO:80 COMMENT NO:36  DESC:ADDED THE 'AND TABLE_SCHEMA=(SELECT DATABASE()'. DONE BY :RAJA
-- VERSION 0.1 STARTDATE:17/09/2014 ENDDATE:17/09/2014 ISSUE NO:84 COMMENT NO:10 DESC:SP FOR DELETING PARTICULAR ROW FROM TABLE AND SAVING THAT VALUES IN TICKLER HISTORY TABLE. DONE BY :RAJA
DROP PROCEDURE IF EXISTS SP_TS_SINGLE_TABLE_ROW_DELETION;
CREATE PROCEDURE SP_TS_SINGLE_TABLE_ROW_DELETION(
IN TABLE_ID INT, 
IN ROW_ID INT,
IN USERSTAMP VARCHAR(50), 
OUT DELETION_FLAG SMALLINT(1))
BEGIN
	DECLARE V_TABLE_NAME TEXT;
	DECLARE V_TEMP_TABLE_NAME TEXT;
	DECLARE i INT DEFAULT 1;
	DECLARE V_COLUMN_VALUE TEXT;
	DECLARE FINAL_DATA TEXT DEFAULT '';
	DECLARE ULDID TEXT;	
	DECLARE USERSTAMP_ID INTEGER(2);
	DECLARE SYSDATEANDTIME VARCHAR(50);
	DECLARE SYSDATEANDULDID VARCHAR(50);
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;
		IF (V_TEMP_TABLE_NAME IS NOT NULL)THEN
			SET @DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',V_TEMP_TABLE_NAME));
			PREPARE DROPQUERYSTMT FROM @DROPQUERY;
			EXECUTE DROPQUERYSTMT;
		END IF;
		SET DELETION_FLAG=0;
	END;	
	SET AUTOCOMMIT=0;	
	START TRANSACTION;

	CALL SP_TS_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULDID);
	SET USERSTAMP_ID=(SELECT @ULDID);

	-- QUERY FOR CREATE DYNAMIC TEMP TABLE	
	SET SYSDATEANDTIME=(SELECT SYSDATE());
	SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,' ',''));
	SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,'-',''));
	SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,':',''));
	SET SYSDATEANDULDID=(SELECT CONCAT(SYSDATEANDTIME,'_',USERSTAMP_ID));

	-- GETTING TABLE NAME USING TABLE ID
	SELECT TRIM(TTIP_DATA) INTO V_TABLE_NAME FROM TICKLER_TABID_PROFILE WHERE TTIP_ID=TABLE_ID;

	-- GETTING COLUMN NAMES OF TABLE
	SET @SQL1=CONCAT('SELECT DISTINCT COLUMN_NAME INTO @V_TABLE_PRIMAY_COLUMN_ID FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME=''',V_TABLE_NAME,''' AND COLUMN_KEY=''PRI'' AND TABLE_SCHEMA=(SELECT DATABASE())');
	PREPARE S1 FROM @SQL1;
	EXECUTE S1;
	DEALLOCATE PREPARE S1;

	SET @SQL2=CONCAT('SELECT COUNT(*) INTO @ROW_COUNT FROM ',V_TABLE_NAME,' WHERE ',@V_TABLE_PRIMAY_COLUMN_ID,'=',ROW_ID);
	PREPARE s2 FROM @SQL2;
	EXECUTE s2;
	DEALLOCATE PREPARE s2;

	IF(@ROW_COUNT > 0) THEN

		SET V_TEMP_TABLE_NAME=(SELECT CONCAT('TEMP_',TABLE_ID,'_COLUMN_NAMES','_',SYSDATEANDULDID));

		-- CREATING TEMP TABLE FOR SAVING TABLE COLUMN NAMES
		SET @SQL3=CONCAT('CREATE TABLE ',V_TEMP_TABLE_NAME,' (ID INT NOT NULL AUTO_INCREMENT, COLUMN_NAME VARCHAR(30), PRIMARY KEY (ID))');
		PREPARE S3 FROM @SQL3;
		EXECUTE S3;
		DEALLOCATE PREPARE S3;

		-- INSERTING TABLE COLUMN NAMES IN TEMP TABLE
		SET @SQL4=CONCAT('INSERT INTO ',V_TEMP_TABLE_NAME,'(COLUMN_NAME) SELECT DISTINCT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME=''',V_TABLE_NAME,''' AND TABLE_SCHEMA=(SELECT DATABASE())');
		PREPARE S4 FROM @SQL4;
		EXECUTE S4;
		DEALLOCATE PREPARE S4;

		-- GETTING COUNT OF COLUMN NAMES FROM TEMP TABLE
		SET @SQL5=CONCAT('SELECT COUNT(*) INTO @V_COLUMN_COUNT FROM ',V_TEMP_TABLE_NAME);
		PREPARE S5 FROM @SQL5;
		EXECUTE S5;
		DEALLOCATE PREPARE S5;

		-- ITERATE TEMP TABLE AND GET COLUMN NAMES FROM TEMP TABLE/ ALSO GETTING COLUMN VALUES FROM ORIGINAL TABLE.
		WHILE (@V_COLUMN_COUNT >= i) DO
			-- GETTING COLUMN NAMES FROM TEMP TABLE
			SET @SQL6=CONCAT('SELECT COLUMN_NAME INTO @V_COLUMN_NAME FROM ',V_TEMP_TABLE_NAME,' WHERE ID=',i);
			PREPARE S6 FROM @SQL6;
			EXECUTE S6;
			DEALLOCATE PREPARE S6;
			-- GETTING COLUMN VALUES FROM ORIGINAL TABLE.
			SET @SQL7=CONCAT('SELECT ',@V_COLUMN_NAME,' INTO @V_VALUE FROM ',V_TABLE_NAME,' WHERE ',@V_TABLE_PRIMAY_COLUMN_ID,'=',ROW_ID);
			PREPARE s7 FROM @SQL7;
			EXECUTE s7;
			DEALLOCATE PREPARE s7;

			IF (@V_VALUE IS NULL) THEN
				SET V_COLUMN_VALUE='<NULL>';
			ELSE
				SET V_COLUMN_VALUE=@V_VALUE;
			END IF;

			-- CONCATENATING EACH COLUMN NAME AND COLUMN VALUES
			SET FINAL_DATA=CONCAT(FINAL_DATA,@V_COLUMN_NAME,'=',V_COLUMN_VALUE,',');
			IF (@V_COLUMN_NAME='ULD_ID' AND V_COLUMN_VALUE!='<NULL>')THEN
				SET ULDID=V_COLUMN_VALUE;
			END IF;
			SET i=i + 1;
		END WHILE;
		-- REMOVING COMMA FROM THE END OF THE FINAL_DATA
		SET FINAL_DATA=SUBSTRING(FINAL_DATA,1,CHAR_LENGTH(FINAL_DATA)-1);
		IF (FINAL_DATA IS NOT NULL) THEN
			-- DELETING PARTICULAR ROW FROM ORIGINAL TABLE
			SET @SQL8=CONCAT('DELETE FROM ',V_TABLE_NAME,' WHERE ',@V_TABLE_PRIMAY_COLUMN_ID,'=',ROW_ID);
			PREPARE s8 FROM @SQL8;
			EXECUTE s8;
			DEALLOCATE PREPARE s8;

			-- INSERTING DELETED VALUES FROM ORIGINAL TABLE IN TICKLER_HISTORY TABLE
			IF (ULDID IS NOT NULL) THEN	
				INSERT INTO TICKLER_HISTORY (TP_ID,TTIP_ID,ULD_ID,TH_OLD_VALUE,TH_USERSTAMP_ID) VALUES (2,TABLE_ID,ULDID,FINAL_DATA,USERSTAMP_ID);
				SET DELETION_FLAG=1;
			ELSE		
				INSERT INTO TICKLER_HISTORY (TP_ID,TTIP_ID,TH_OLD_VALUE,TH_USERSTAMP_ID) VALUES (2,TABLE_ID,FINAL_DATA,USERSTAMP_ID);
				SET DELETION_FLAG=1;
			END IF;
		ELSE
			SET DELETION_FLAG=0;
		END IF;		
	ELSE
		SET DELETION_FLAG=0;
	END IF;
	IF (V_TEMP_TABLE_NAME IS NOT NULL)THEN
		SET @DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',V_TEMP_TABLE_NAME));
		PREPARE DROPQUERYSTMT FROM @DROPQUERY;
		EXECUTE DROPQUERYSTMT;
	END IF;
	COMMIT;
END;
/*
CALL SP_TS_SINGLE_TABLE_ROW_DELETION(2,7901,'dhandapani.sattanathan@ssomens.com',@FLAG);
*/