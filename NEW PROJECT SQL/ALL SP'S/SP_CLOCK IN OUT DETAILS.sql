DROP PROCEDURE IF EXISTS SP_TS_EMPLOYEE_CHECK_IN_OUT_DETAILS_INSERT_UPDATE;
CREATE PROCEDURE SP_TS_EMPLOYEE_CHECK_IN_OUT_DETAILS_INSERT_UPDATE(
IN OPTION_ID INTEGER,
IN ULDID INTEGER,
IN CHECK_DATE DATE,
IN IN_TIME TIME,
IN LOCATION TEXT,
IN USERSTAMP_ID INTEGER,
OUT SUCCESS_FLAG TEXT)
BEGIN
	DECLARE LOCATION_ID INTEGER;
	DECLARE ECIODID INTEGER;
	DECLARE FLAG INTEGER;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
		ROLLBACK;
		SET SUCCESS_FLAG = 0;
	END;
	SET AUTOCOMMIT=0;
	START TRANSACTION;
	SET FLAG = 1;
	SET SUCCESS_FLAG = 0;
	IF(LOCATION IS NOT NULL) THEN
		IF(LOCATION = "undefined") THEN
			SET SUCCESS_FLAG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 123);
			SET FLAG = 0;
		END IF;
	END IF;
	SET LOCATION_ID = (SELECT CIORL_ID FROM CLOCK_IN_OUT_REPORT_LOCATION WHERE CIORL_LOCATION = LOCATION);
	IF(FLAG = 1) THEN
		IF EXISTS(SELECT * FROM CLOCK_IN_OUT_REPORT_LOCATION WHERE CIORL_LOCATION = LOCATION) THEN
	        SET LOCATION_ID = (SELECT CIORL_ID FROM CLOCK_IN_OUT_REPORT_LOCATION WHERE CIORL_LOCATION = LOCATION);
	    ELSE
	        INSERT INTO CLOCK_IN_OUT_REPORT_LOCATION(CIORL_LOCATION,ULD_ID) VALUES (LOCATION,ULDID);
	        SET LOCATION_ID = (SELECT CIORL_ID FROM CLOCK_IN_OUT_REPORT_LOCATION WHERE CIORL_LOCATION = LOCATION);
	    END IF;
	END IF;
    IF(FLAG = 1) THEN
		IF(OPTION_ID = 1) THEN
			IF(ULDID IS NOT NULL AND CHECK_DATE IS NOT NULL AND IN_TIME IS NOT NULL AND LOCATION IS NOT NULL 
            AND USERSTAMP_ID IS NOT NULL) THEN
				IF NOT EXISTS (SELECT * FROM EMPLOYEE_CHECK_IN_OUT_DETAILS WHERE ECIOD_DATE = CHECK_DATE AND 
                ULD_ID = ULDID) THEN
					INSERT INTO EMPLOYEE_CHECK_IN_OUT_DETAILS(ULD_ID,ECIOD_DATE,ECIOD_CHECK_IN_TIME,
                    ECIOD_CHECK_IN_LOCATION,ECIOD_USERSTAMP_ID) VALUES
					(ULDID,CHECK_DATE,IN_TIME,LOCATION_ID,USERSTAMP_ID);
					SET SUCCESS_FLAG = 1;
				END IF;
			END IF;
		END IF;
	END IF;
	IF(FLAG = 1) THEN
		IF(OPTION_ID = 2) THEN
			IF(ULDID IS NOT NULL AND CHECK_DATE IS NOT NULL AND IN_TIME IS NOT NULL AND LOCATION IS NOT NULL 
            AND USERSTAMP_ID IS NOT NULL) THEN
				SET ECIODID = (SELECT ECIOD_ID FROM EMPLOYEE_CHECK_IN_OUT_DETAILS WHERE ULD_ID = ULDID 
                AND ECIOD_DATE = CHECK_DATE);
				UPDATE EMPLOYEE_CHECK_IN_OUT_DETAILS SET ECIOD_CHECK_OUT_TIME = IN_TIME, 
                ECIOD_CHECK_OUT_LOCATION = LOCATION_ID WHERE ECIOD_ID = ECIODID;
				SET SUCCESS_FLAG = 1;
			END IF;
		END IF;
	END IF;
	COMMIT;
END;