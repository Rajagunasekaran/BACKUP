DROP PROCEDURE IF EXISTS SP_ACCESS_RIGHTS_TERMINATE_REJOIN_LOGINID;
CREATE PROCEDURE SP_ACCESS_RIGHTS_TERMINATE_REJOIN_LOGINID()
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
		ROLLBACK;
	END;
	START TRANSACTION;
	CREATE OR REPLACE VIEW VW_SUB_ACCESS_RIGHTS_MAXRECVER AS SELECT ULD_ID,MAX(UA_REC_VER) AS RECVER 
	FROM USER_ACCESS GROUP BY ULD_ID;
	CREATE OR REPLACE VIEW VW_ACCESS_RIGHTS_TERMINATE_LOGINID AS
	SELECT ULD.ULD_LOGINID,URCN.URC_ID,URCN.URC_DATA,UA.UA_JOIN_DATE FROM USER_LOGIN_DETAILS ULD,USER_ACCESS UA,
	VW_SUB_ACCESS_RIGHTS_MAXRECVER V,USER_RIGHTS_CONFIGURATION URCN,ROLE_CREATION RC 
	WHERE ULD.ULD_ID=UA.ULD_ID AND UA.UA_REC_VER=V.RECVER AND V.ULD_ID=UA.ULD_ID AND V.ULD_ID=ULD.ULD_ID AND 
	UA.RC_ID=RC.RC_ID AND RC.URC_ID=URCN.URC_ID AND UA.UA_TERMINATE IS NULL GROUP BY ULD.ULD_ID;
	CREATE OR REPLACE VIEW VW_ACCESS_RIGHTS_REJOIN_LOGINID AS
	SELECT ULD.ULD_LOGINID,UA.UA_JOIN_DATE FROM USER_LOGIN_DETAILS ULD,USER_ACCESS UA,VW_SUB_ACCESS_RIGHTS_MAXRECVER V 
	WHERE ULD.ULD_ID=UA.ULD_ID AND UA.UA_REC_VER=V.RECVER AND V.ULD_ID=UA.ULD_ID AND V.ULD_ID=ULD.ULD_ID AND 
	UA.UA_TERMINATE IS NOT NULL GROUP BY ULD.ULD_ID;
	COMMIT;
END;