-- version:0.3 --sdate:11/10/2014 --edate:13/10/2014 --issue:78 -- comment:#125 --desc: changes in sp for bandwidth value greater than 1000 --done by:Bhavani.R
-- version:0.2 --sdate:25/09/2014 --edate:26/09/2014 --issue:78 -- comment:#97 --desc: changing sp for values in gb  --done by:Bhavani.R
-- version:0.1 --sdate:30/08/2014 --edate:02/09/2014 --issue:78 -- comment:#27 --desc: Bandwidth migration sp for user_admin_report_details  --done by:Bhavani.R
DROP PROCEDURE IF EXISTS SP_TS_MIG_BANDWIDTH_INSERT;
CREATE PROCEDURE SP_TS_MIG_BANDWIDTH_INSERT(
IN SOURCESCHEMA VARCHAR(40),
IN DESTINATIONSCHEMA VARCHAR(40)
)
BEGIN
DECLARE MINID INTEGER;
DECLARE MAXID INTEGER;
DECLARE ULDID INTEGER;
DECLARE MIN_EMP_COUNT INTEGER;
DECLARE MAX_EMP_COUNT INTEGER;
DECLARE MAX_COLUMNID INTEGER;
DECLARE MIN_COLUMNID INTEGER;
DECLARE BANDWIDTH_DATE_VALUE TEXT;
DECLARE BANDWIDTH_VALUE DECIMAL(6,2);
DECLARE BANDWIDTH_RECORD TEXT;
DECLARE BANDWIDTH_DATE DATE;
DECLARE EMPLOYEE_NAME VARCHAR(100);
DECLARE BW_TABLENAME VARCHAR (200);
DECLARE LOGIN_MAIL_ID VARCHAR (200);
DECLARE REG_EXP_VALUE INTEGER;
DECLARE REPORT_COMMENTS TEXT;
DECLARE STR_COUNT TEXT;
DECLARE STR_EXP TEXT;
DECLARE STR_VALUE INTEGER;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        ROLLBACK;
    SET @DROP_TEMP_BWIDTH_TABLES=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TEMP_BWIDTH_TABLES'));
    PREPARE DROP_TEMP_BWIDTH_TABLES_STMT FROM @DROP_TEMP_BWIDTH_TABLES;
    EXECUTE DROP_TEMP_BWIDTH_TABLES_STMT;
    SET @DROP_TEMP_COLUMN_NAMES=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TEMP_COLUMN_NAMES'));
    PREPARE DROP_TEMP_COLUMN_NAMES_STMT FROM @DROP_TEMP_COLUMN_NAMES;
    EXECUTE DROP_TEMP_COLUMN_NAMES_STMT;
    SET @DROP_TEMP_ROW_NAMES=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TEMP_ROW_NAMES'));
    PREPARE DROP_TEMP_ROW_NAMES_STMT FROM @DROP_TEMP_ROW_NAMES;
    EXECUTE DROP_TEMP_ROW_NAMES_STMT;
    END;
    SET AUTOCOMMIT = 0;
    START TRANSACTION;
    SET FOREIGN_KEY_CHECKS=0;
    SET @DROP_TEMP_BWIDTH_TABLES=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TEMP_BWIDTH_TABLES'));
    PREPARE DROP_TEMP_BWIDTH_TABLES_STMT FROM @DROP_TEMP_BWIDTH_TABLES;
    EXECUTE DROP_TEMP_BWIDTH_TABLES_STMT;
    SET @CREATE_TEMP_BWIDTH_TABLES=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.TEMP_BWIDTH_TABLES(
    ID INTEGER NOT NULL AUTO_INCREMENT,
    TABLENAME   VARCHAR(250) NOT NULL,
    PRIMARY KEY(ID))'));
    PREPARE CREATE_TEMP_BWIDTH_TABLES_STMT FROM @CREATE_TEMP_BWIDTH_TABLES;
    EXECUTE CREATE_TEMP_BWIDTH_TABLES_STMT;
    SET  @INSERT_TEMP_BWIDTH_TABLES=(SELECT CONCAT('INSERT INTO  ',DESTINATIONSCHEMA,'.TEMP_BWIDTH_TABLES (TABLENAME) (SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME LIKE ''%BANDWIDTH%'' AND TABLE_SCHEMA="',SOURCESCHEMA,'")'));
   PREPARE INSERT_TEMP_BWIDTH_TABLES_STMT FROM @INSERT_TEMP_BWIDTH_TABLES;
    EXECUTE INSERT_TEMP_BWIDTH_TABLES_STMT;
    SET @MIN_TEMP_BWIDTH_TABLES=(SELECT CONCAT('SELECT MIN(ID) INTO @MIN_ID FROM ',DESTINATIONSCHEMA,'.TEMP_BWIDTH_TABLES'));
      PREPARE MIN_TEMP_BWIDTH_TABLES_STMT FROM @MIN_TEMP_BWIDTH_TABLES;
      EXECUTE MIN_TEMP_BWIDTH_TABLES_STMT;
      SET MINID = @MIN_ID;
      SET @MAX_TEMP_BWIDTH_TABLES=(SELECT CONCAT('SELECT MAX(ID) INTO @MAX_ID FROM ',DESTINATIONSCHEMA,'.TEMP_BWIDTH_TABLES'));
      PREPARE MAX_TEMP_BWIDTH_TABLES_STMT FROM @MAX_TEMP_BWIDTH_TABLES;
      EXECUTE MAX_TEMP_BWIDTH_TABLES_STMT;
    SET MAXID = @MAX_ID;
    WHILE(MINID<=MAXID)DO
    SET @SELECT_BWTABLENAME=(SELECT CONCAT('SELECT TABLENAME INTO @BW_TABLE_NAME FROM ',DESTINATIONSCHEMA,'.TEMP_BWIDTH_TABLES WHERE ID=',MINID));
      PREPARE SELECT_BWTABLENAME_STMT FROM @SELECT_BWTABLENAME;
      EXECUTE SELECT_BWTABLENAME_STMT;
    SET BW_TABLENAME= @BW_TABLE_NAME;
    SET @DROP_TEMP_COLUMN_NAMES=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TEMP_COLUMN_NAMES'));
    PREPARE DROP_TEMP_COLUMN_NAMES_STMT FROM @DROP_TEMP_COLUMN_NAMES;
    EXECUTE DROP_TEMP_COLUMN_NAMES_STMT;
    SET @CREATE_TEMP_COLUMN_NAMES=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.TEMP_COLUMN_NAMES(
    ID INTEGER NOT NULL AUTO_INCREMENT,
    COLUMNNAME  TEXT NOT NULL,
    PRIMARY KEY(ID))'));
    PREPARE CREATE_TEMP_COLUMN_NAMES_STMT FROM @CREATE_TEMP_COLUMN_NAMES;
    EXECUTE CREATE_TEMP_COLUMN_NAMES_STMT;
    SET @INSERT_TEMP_COLUMN_NAMES=(SELECT CONCAT('INSERT INTO  ',DESTINATIONSCHEMA,'.TEMP_COLUMN_NAMES (COLUMNNAME) (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA="',SOURCESCHEMA,'" AND TABLE_NAME="',BW_TABLENAME,'" AND COLUMN_NAME NOT LIKE ''%EMPLOYEE%'' AND COLUMN_NAME NOT LIKE ''%TOTAL%''AND COLUMN_NAME NOT LIKE ''%ULD_ID%'')'));
    PREPARE INSERT_TEMP_COLUMN_NAMES_STMT FROM @INSERT_TEMP_COLUMN_NAMES;
    EXECUTE INSERT_TEMP_COLUMN_NAMES_STMT;
    SET @MIN_TEMP_COLUMN_NAMES=(SELECT CONCAT('SELECT MIN(ID) INTO @MIN_COLUMN_ID FROM ',DESTINATIONSCHEMA,'.TEMP_COLUMN_NAMES'));
    PREPARE MIN_TEMP_COLUMN_NAMES_STMT FROM @MIN_TEMP_COLUMN_NAMES;
    EXECUTE MIN_TEMP_COLUMN_NAMES_STMT;
    SET MIN_COLUMNID = @MIN_COLUMN_ID;
      SET @MAX_TEMP_COLUMN_NAMES=(SELECT CONCAT('SELECT MAX(ID) INTO @MAX_COLUMN_ID FROM ',DESTINATIONSCHEMA,'.TEMP_COLUMN_NAMES'));
      PREPARE MAX_TEMP_COLUMN_NAMES_STMT FROM @MAX_TEMP_COLUMN_NAMES;
      EXECUTE MAX_TEMP_COLUMN_NAMES_STMT;
      SET MAX_COLUMNID = @MAX_COLUMN_ID;
    SET @DROP_TEMP_ROW_NAMES=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TEMP_ROW_NAMES'));
    PREPARE DROP_TEMP_ROW_NAMES_STMT FROM @DROP_TEMP_ROW_NAMES;
    EXECUTE DROP_TEMP_ROW_NAMES_STMT;
    SET @CREATE_TEMP_ROW_NAMES=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.TEMP_ROW_NAMES(
    ID INTEGER NOT NULL AUTO_INCREMENT,
    ROWNAME TEXT NOT NULL,
    PRIMARY KEY(ID))'));
    PREPARE CREATE_TEMP_ROW_NAMES_STMT FROM @CREATE_TEMP_ROW_NAMES;
    EXECUTE CREATE_TEMP_ROW_NAMES_STMT;
    SET @INSERT_TEMP_ROW_NAMES=(SELECT CONCAT('INSERT INTO  ',DESTINATIONSCHEMA,'.TEMP_ROW_NAMES (ROWNAME) (SELECT EMPLOYEE FROM ',SOURCESCHEMA,'.',BW_TABLENAME,' WHERE EMPLOYEE NOT LIKE ''%TOTAL%'')'));
    PREPARE INSERT_TEMP_ROW_NAMES_STMT FROM @INSERT_TEMP_ROW_NAMES;
    EXECUTE INSERT_TEMP_ROW_NAMES_STMT;
    SET @MIN_EMPLOYEE_COUNT=(SELECT CONCAT('SELECT MIN(ID) INTO @MIN_EMP_ID FROM ',DESTINATIONSCHEMA,'.TEMP_ROW_NAMES'));
       PREPARE MIN_EMPLOYEE_COUNT_STMT FROM @MIN_EMPLOYEE_COUNT;
       EXECUTE MIN_EMPLOYEE_COUNT_STMT;
    SET MIN_EMP_COUNT = @MIN_EMP_ID;
    SET @MAX_EMPLOYEE_COUNT=(SELECT CONCAT('SELECT MAX(ID) INTO @MAX_EMP_ID FROM ',DESTINATIONSCHEMA,'.TEMP_ROW_NAMES'));
       PREPARE MAX_EMPLOYEE_COUNT_STMT FROM @MAX_EMPLOYEE_COUNT;
       EXECUTE MAX_EMPLOYEE_COUNT_STMT;
    SET MAX_EMP_COUNT = @MAX_EMP_ID;
    WHILE(MIN_EMP_COUNT<=MAX_EMP_COUNT)DO
    SET @SELECT_BWEMPNAME=(SELECT CONCAT('SELECT ROWNAME INTO @BW_EMPLOYEE FROM ',DESTINATIONSCHEMA,'.TEMP_ROW_NAMES WHERE ID=',MIN_EMP_COUNT));
    PREPARE SELECT_BWEMPNAME_STMT FROM @SELECT_BWEMPNAME;
    EXECUTE SELECT_BWEMPNAME_STMT;
    SET EMPLOYEE_NAME = @BW_EMPLOYEE;
    SET @SELECT_BWULDID=(SELECT CONCAT('SELECT ULD_ID INTO @ULDID_VALUE FROM ',SOURCESCHEMA,'.',BW_TABLENAME,' WHERE EMPLOYEE ="',EMPLOYEE_NAME,'"'));
    PREPARE SELECT_BWULDID_STMT FROM @SELECT_BWULDID;
     EXECUTE SELECT_BWULDID_STMT;
    SET ULDID=@ULDID_VALUE;
    WHILE(MIN_COLUMNID<=MAX_COLUMNID)DO
    SET @SELECT_BWCOLUMNNAME=(SELECT CONCAT('SELECT COLUMNNAME INTO @BW_DATE FROM ',DESTINATIONSCHEMA,'.TEMP_COLUMN_NAMES WHERE ID=',MIN_COLUMNID));
     PREPARE SELECT_BWCOLUMNNAME_STMT FROM @SELECT_BWCOLUMNNAME;
     EXECUTE SELECT_BWCOLUMNNAME_STMT;
    SET BANDWIDTH_DATE_VALUE = @BW_DATE;
    SET @SELECT_DATECONVERSION=(SELECT CONCAT('SELECT  STR_TO_DATE("',BANDWIDTH_DATE_VALUE,'",','"%d/%m/%Y")INTO @BWDATE'));
    PREPARE SELECT_DATECONVERSION_STMT FROM @SELECT_DATECONVERSION;
     EXECUTE SELECT_DATECONVERSION_STMT;
    SET BANDWIDTH_DATE =  @BWDATE;
    SET @SELECT_BWVALUE=(SELECT CONCAT('SELECT IF(`',BANDWIDTH_DATE_VALUE,'` IS NULL ,"0",`',BANDWIDTH_DATE_VALUE,'`) INTO @BW_VALUE FROM ',SOURCESCHEMA,'.',BW_TABLENAME,' WHERE EMPLOYEE="',EMPLOYEE_NAME,'"'));
    PREPARE SELECT_BWVALUE_STMT FROM @SELECT_BWVALUE;
       EXECUTE SELECT_BWVALUE_STMT;
    SET BANDWIDTH_RECORD = @BW_VALUE;
    SET REG_EXP_VALUE = (SELECT BANDWIDTH_RECORD REGEXP 'GB');
    IF (REG_EXP_VALUE = 1) THEN
    SET STR_COUNT = (SELECT LOCATE ('GB',BANDWIDTH_RECORD));
    SET STR_EXP = (SELECT SUBSTRING(BANDWIDTH_RECORD,STR_COUNT));
    SET STR_VALUE=(SELECT SUBSTRING_INDEX(BANDWIDTH_RECORD,STR_EXP,+1));
    SET BANDWIDTH_VALUE = (SELECT STR_VALUE * 1024);
    ELSEIF (REG_EXP_VALUE != 1) THEN
    SET BANDWIDTH_VALUE = BANDWIDTH_RECORD;
    END IF;
    IF BANDWIDTH_VALUE > 1000 THEN
    SET  @SELECT_REPORT_COMMENTS = (SELECT CONCAT('SELECT IF (UARD_REPORT IS NULL,"NULL",UARD_REPORT) INTO @REPORT FROM ',DESTINATIONSCHEMA,'.USER_ADMIN_REPORT_DETAILS WHERE UARD_DATE="',BANDWIDTH_DATE,'" AND ULD_ID=',ULDID));
    PREPARE SELECT_REPORT_COMMENTS_STMT FROM @SELECT_REPORT_COMMENTS;
       EXECUTE SELECT_REPORT_COMMENTS_STMT;
    SET REPORT_COMMENTS = @REPORT;
    IF (REPORT_COMMENTS IS NOT NULL) THEN
    SET REPORT_COMMENTS = (SELECT CONCAT (REPORT_COMMENTS,'\r\n',' ORIGINAL BANDWIDTH IS ',BANDWIDTH_VALUE,'MB'));
    SET @UPDATE_REPORT=(SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'.USER_ADMIN_REPORT_DETAILS SET UARD_REPORT="',REPORT_COMMENTS,'", UARD_TIMESTAMP=UARD_TIMESTAMP WHERE UARD_DATE="',BANDWIDTH_DATE,'" AND ULD_ID=',ULDID));
    PREPARE UPDATE_REPORT_STMT FROM @UPDATE_REPORT;
       EXECUTE UPDATE_REPORT_STMT;
    END IF;
    SET BANDWIDTH_VALUE = 1000;
    END IF;
    IF ULDID IS NOT NULL THEN 
    SET @UPDATE_USER_ADMIN_REPORT_DETAILS=(SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'.USER_ADMIN_REPORT_DETAILS SET UARD_BANDWIDTH=',BANDWIDTH_VALUE,', UARD_TIMESTAMP=UARD_TIMESTAMP WHERE UARD_DATE="',BANDWIDTH_DATE,'" AND ULD_ID=',ULDID));
    PREPARE UPDATE_USER_ADMIN_REPORT_DETAILS_STMT FROM @UPDATE_USER_ADMIN_REPORT_DETAILS;
       EXECUTE UPDATE_USER_ADMIN_REPORT_DETAILS_STMT;
    END IF;
    SET MIN_COLUMNID= MIN_COLUMNID+1;
    END WHILE;
    SET MIN_EMP_COUNT= MIN_EMP_COUNT+1;
    SET MIN_COLUMNID = 1;
    END WHILE;
    SET MINID=MINID+1;
    SET MIN_EMP_COUNT = 1;
    END WHILE;
    SET @DROP_TEMP_BWIDTH_TABLES=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TEMP_BWIDTH_TABLES'));
    PREPARE DROP_TEMP_BWIDTH_TABLES_STMT FROM @DROP_TEMP_BWIDTH_TABLES;
    EXECUTE DROP_TEMP_BWIDTH_TABLES_STMT;
    SET @DROP_TEMP_COLUMN_NAMES=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TEMP_COLUMN_NAMES'));
    PREPARE DROP_TEMP_COLUMN_NAMES_STMT FROM @DROP_TEMP_COLUMN_NAMES;
    EXECUTE DROP_TEMP_COLUMN_NAMES_STMT;
    SET @DROP_TEMP_ROW_NAMES=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TEMP_ROW_NAMES'));
    PREPARE DROP_TEMP_ROW_NAMES_STMT FROM @DROP_TEMP_ROW_NAMES;
    EXECUTE DROP_TEMP_ROW_NAMES_STMT;
    COMMIT;
    END;