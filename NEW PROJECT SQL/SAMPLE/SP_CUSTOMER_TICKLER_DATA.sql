DROP PROCEDURE IF EXISTS SP_CUSTOMER_TICKLER_DATA;
CREATE PROCEDURE SP_CUSTOMER_TICKLER_DATA(IN USERSTAMP VARCHAR(50),OUT CUSTOMER_TICKLER_HISTORY_TMPTBL TEXT)
BEGIN
DECLARE COUNT_TICKLER_HISTORY INT;
DECLARE TICKLERVALUE INTEGER;
DECLARE CUSTOMER_TICKLER_HISTORY_TBL TEXT;
DECLARE CUSTOMER_TICKLER_VALUES_TBL TEXT;
DECLARE CUSTOMER_TICKLER_VALUES_TMPTBL TEXT;
DECLARE USERSTAMP_ID INT;
DECLARE MINID INTEGER;
DECLARE MAXID INTEGER;
DECLARE CUSTOMER_VALUE TEXT;
DECLARE POSTAPID_VALUE INTEGER;
DECLARE STR_FIRSTNAME TEXT;
DECLARE STR_LASTNAME TEXT;
DECLARE STR_TOTALNAME TEXT;
DECLARE STR_CUSTOMERID TEXT;
DECLARE MAX_ID INTEGER;
DECLARE STR_HEADER_FIRST TEXT;
DECLARE FIRSTNAME TEXT;
DECLARE STR_HEADER_LAST TEXT;
DECLARE LASTNAME TEXT;
DECLARE STR_CUSTOMER TEXT;
DECLARE CUSTOMERID TEXT;
DECLARE IDFORCUSTOMER TEXT;
DECLARE TEMP_TICKLER_UPDATION TEXT;
DECLARE TEMP_TICKLER_DELETION TEXT;
DECLARE TEMP_INTERMEDIATE_DELETION TEXT;
DECLARE TEMP_CUSTOMER_DELETED TEXT;
DECLARE INTERMEDIATE_TEMP_TICKLER TEXT;
DECLARE CUSTOMER_TEMP_TBL TEXT;
DECLARE TEMP_TICKLER_SPLITTED_UPDATION TEXT;
DECLARE TEMP_TICKLER_SPLITTED_DELETION TEXT;
DECLARE TEMP_INTERMEDIATE_SPLITTED_DELETION TEXT;
DECLARE TEMP_CUSTOMER_DELETED_INTERMEDIATE TEXT;
DECLARE MAIN_INTERMEDIATE_TEMP_TICKLER_VALUES TEXT;
DECLARE TEMP_CUSTOMER TEXT;
DECLARE FIRST_NAME_VALUE TEXT;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
  ROLLBACK;
 IF CUSTOMER_TICKLER_VALUES_TMPTBL IS NOT NULL THEN
	SET @DROP_TEMP_TICKLER_VALUES=(SELECT CONCAT('DROP TABLE IF EXISTS ',CUSTOMER_TICKLER_VALUES_TMPTBL));
	PREPARE DROP_TEMP_TICKLER_VALUES_STMT FROM @DROP_TEMP_TICKLER_VALUES;
	EXECUTE DROP_TEMP_TICKLER_VALUES_STMT;
	END IF;
 IF TEMP_TICKLER_SPLITTED_UPDATION IS NOT NULL THEN
  SET @DROP_TEMP_TICKLER_SPLITTED_UPDATION=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_TICKLER_SPLITTED_UPDATION));
		PREPARE DROP_TEMP_TICKLER_SPLITTED_UPDATION_STMT FROM @DROP_TEMP_TICKLER_SPLITTED_UPDATION;
		EXECUTE DROP_TEMP_TICKLER_SPLITTED_UPDATION_STMT;
  END IF;
  IF TEMP_TICKLER_SPLITTED_DELETION IS NOT NULL THEN
  SET @DROP_TEMP_TICKLER_SPLITTED_DELETION=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_TICKLER_SPLITTED_DELETION));
		PREPARE DROP_TEMP_TICKLER_SPLITTED_DELETION_STMT FROM @DROP_TEMP_TICKLER_SPLITTED_DELETION;
		EXECUTE DROP_TEMP_TICKLER_SPLITTED_DELETION_STMT;
  END IF;
  IF TEMP_INTERMEDIATE_SPLITTED_DELETION IS NOT NULL THEN
  SET @DROP_TEMP_INTERMEDIATE_SPLITTED_DELETION=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_INTERMEDIATE_SPLITTED_DELETION));
		PREPARE DROP_TEMP_INTERMEDIATE_SPLITTED_DELETION_STMT FROM @DROP_TEMP_INTERMEDIATE_SPLITTED_DELETION;
		EXECUTE DROP_TEMP_INTERMEDIATE_SPLITTED_DELETION_STMT;
  END IF;
  IF TEMP_CUSTOMER_DELETED_INTERMEDIATE IS NOT NULL THEN
  SET @DROP_TEMP_CUSTOMER_DELETED_INTERMEDIATE=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_CUSTOMER_DELETED_INTERMEDIATE));
		PREPARE DROP_TEMP_CUSTOMER_DELETED_INTERMEDIATE_STMT FROM @DROP_TEMP_CUSTOMER_DELETED_INTERMEDIATE;
		EXECUTE DROP_TEMP_CUSTOMER_DELETED_INTERMEDIATE_STMT;
  END IF;
  IF MAIN_INTERMEDIATE_TEMP_TICKLER_VALUES IS NOT NULL THEN
  SET @DROP_MAIN_INTERMEDIATE_TEMP_TICKLER_VALUES=(SELECT CONCAT('DROP TABLE IF EXISTS ',MAIN_INTERMEDIATE_TEMP_TICKLER_VALUES));
		PREPARE DROP_MAIN_INTERMEDIATE_TEMP_TICKLER_VALUES_STMT FROM @DROP_MAIN_INTERMEDIATE_TEMP_TICKLER_VALUES;
		EXECUTE DROP_MAIN_INTERMEDIATE_TEMP_TICKLER_VALUES_STMT;
  END IF;
  IF TEMP_CUSTOMER IS NOT NULL THEN
  SET @DROP_TEMP_CUSTOMER=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_CUSTOMER));
		PREPARE DROP_TEMP_CUSTOMER_STMT FROM @DROP_TEMP_CUSTOMER;
		EXECUTE DROP_TEMP_CUSTOMER_STMT;
  END IF;
 END;
		CALL SP_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULDID);
		SET USERSTAMP_ID=(SELECT @ULDID);
		SET CUSTOMER_TICKLER_HISTORY_TBL=(SELECT CONCAT('TEMP_TICKLER_HISTORY',SYSDATE()));
  SET CUSTOMER_TICKLER_VALUES_TBL=(SELECT CONCAT('TEMP_TICKLER_VALUES',SYSDATE()));
		SET TEMP_TICKLER_UPDATION=(SELECT CONCAT('TEMP_TICKLER_SPLITTED_UPDATION',SYSDATE()));
  SET TEMP_TICKLER_DELETION=(SELECT CONCAT('TEMP_TICKLER_SPLITTED_DELETION',SYSDATE()));
		SET TEMP_INTERMEDIATE_DELETION=(SELECT CONCAT('TEMP_INTERMEDIATE_SPLITTED_DELETION',SYSDATE()));
		SET TEMP_CUSTOMER_DELETED=(SELECT CONCAT('TEMP_INTERMEDIATE_CUSTOMER_DELETED',SYSDATE()));
		SET INTERMEDIATE_TEMP_TICKLER=(SELECT CONCAT('MAIN_INTERMEDIATE_TEMP_TICKLER_VALUES',SYSDATE()));
		SET CUSTOMER_TEMP_TBL=(SELECT CONCAT('TEMP_CUSTOMER',SYSDATE()));
		SET CUSTOMER_TICKLER_HISTORY_TBL=(SELECT REPLACE(CUSTOMER_TICKLER_HISTORY_TBL,' ',''));
		SET CUSTOMER_TICKLER_HISTORY_TBL=(SELECT REPLACE(CUSTOMER_TICKLER_HISTORY_TBL,'-',''));
		SET CUSTOMER_TICKLER_HISTORY_TBL=(SELECT REPLACE(CUSTOMER_TICKLER_HISTORY_TBL,':',''));
		SET CUSTOMER_TICKLER_HISTORY_TMPTBL=(SELECT CONCAT(CUSTOMER_TICKLER_HISTORY_TBL,'_',USERSTAMP_ID)); 
		SET CUSTOMER_TICKLER_VALUES_TBL=(SELECT REPLACE(CUSTOMER_TICKLER_VALUES_TBL,' ',''));
		SET CUSTOMER_TICKLER_VALUES_TBL=(SELECT REPLACE(CUSTOMER_TICKLER_VALUES_TBL,'-',''));
		SET CUSTOMER_TICKLER_VALUES_TBL=(SELECT REPLACE(CUSTOMER_TICKLER_VALUES_TBL,':',''));
		SET CUSTOMER_TICKLER_VALUES_TMPTBL=(SELECT CONCAT(CUSTOMER_TICKLER_VALUES_TBL,'_',USERSTAMP_ID));
		SET TEMP_TICKLER_UPDATION=(SELECT REPLACE(TEMP_TICKLER_UPDATION,' ',''));
		SET TEMP_TICKLER_UPDATION=(SELECT REPLACE(TEMP_TICKLER_UPDATION,'-',''));
		SET TEMP_TICKLER_UPDATION=(SELECT REPLACE(TEMP_TICKLER_UPDATION,':',''));
		SET TEMP_TICKLER_SPLITTED_UPDATION=(SELECT CONCAT(TEMP_TICKLER_UPDATION,'_',USERSTAMP_ID));
		SET TEMP_TICKLER_DELETION=(SELECT REPLACE(TEMP_TICKLER_DELETION,' ',''));
		SET TEMP_TICKLER_DELETION=(SELECT REPLACE(TEMP_TICKLER_DELETION,'-',''));
		SET TEMP_TICKLER_DELETION=(SELECT REPLACE(TEMP_TICKLER_DELETION,':',''));
		SET TEMP_TICKLER_SPLITTED_DELETION=(SELECT CONCAT(TEMP_TICKLER_DELETION,'_',USERSTAMP_ID));
		SET TEMP_INTERMEDIATE_DELETION=(SELECT REPLACE(TEMP_INTERMEDIATE_DELETION,' ',''));
		SET TEMP_INTERMEDIATE_DELETION=(SELECT REPLACE(TEMP_INTERMEDIATE_DELETION,'-',''));
		SET TEMP_INTERMEDIATE_DELETION=(SELECT REPLACE(TEMP_INTERMEDIATE_DELETION,':',''));
		SET TEMP_INTERMEDIATE_SPLITTED_DELETION=(SELECT CONCAT(TEMP_INTERMEDIATE_DELETION,'_',USERSTAMP_ID));
		SET TEMP_CUSTOMER_DELETED=(SELECT REPLACE(TEMP_CUSTOMER_DELETED,' ',''));
		SET TEMP_CUSTOMER_DELETED=(SELECT REPLACE(TEMP_CUSTOMER_DELETED,'-',''));
		SET TEMP_CUSTOMER_DELETED=(SELECT REPLACE(TEMP_CUSTOMER_DELETED,':',''));
		SET TEMP_CUSTOMER_DELETED_INTERMEDIATE=(SELECT CONCAT(TEMP_CUSTOMER_DELETED,'_',USERSTAMP_ID));
		SET INTERMEDIATE_TEMP_TICKLER=(SELECT REPLACE(INTERMEDIATE_TEMP_TICKLER,' ',''));
		SET INTERMEDIATE_TEMP_TICKLER=(SELECT REPLACE(INTERMEDIATE_TEMP_TICKLER,'-',''));
		SET INTERMEDIATE_TEMP_TICKLER=(SELECT REPLACE(INTERMEDIATE_TEMP_TICKLER,':',''));
		SET MAIN_INTERMEDIATE_TEMP_TICKLER_VALUES=(SELECT CONCAT(INTERMEDIATE_TEMP_TICKLER,'_',USERSTAMP_ID));
		SET CUSTOMER_TEMP_TBL=(SELECT REPLACE(CUSTOMER_TEMP_TBL,' ',''));
		SET CUSTOMER_TEMP_TBL=(SELECT REPLACE(CUSTOMER_TEMP_TBL,'-',''));
		SET CUSTOMER_TEMP_TBL=(SELECT REPLACE(CUSTOMER_TEMP_TBL,':',''));
		SET TEMP_CUSTOMER=(SELECT CONCAT(CUSTOMER_TEMP_TBL,'_',USERSTAMP_ID));
		SET @CREATE_TEMP_TICKLER_VALUES=(SELECT CONCAT('CREATE TABLE ',CUSTOMER_TICKLER_VALUES_TMPTBL,'(ID INT NOT NULL AUTO_INCREMENT,TH_ID INT,CUSTOMER_ID INT,CUSTOMER_FIRST_NAME CHAR(30),CUSTOMER_LAST_NAME CHAR(30),TP_ID INT,POSTAP_ID INT, TH_OLD_VALUE TEXT,TH_NEW_VALUE TEXT,TH_USERSTAMP VARCHAR(40),TH_TIMESTAMP TIMESTAMP, PRIMARY KEY (ID))'));
		PREPARE CREATE_TEMP_TICKLER_VALUES_STMT FROM @CREATE_TEMP_TICKLER_VALUES;
		EXECUTE CREATE_TEMP_TICKLER_VALUES_STMT;
  SET @CREATE_TEMP_TICKLER_SPLITTED_UPDATION=(SELECT CONCAT('CREATE TABLE ',TEMP_TICKLER_SPLITTED_UPDATION,' (ID INT NOT NULL AUTO_INCREMENT,TH_ID INT,CUSTOMER_ID INT,CUSTOMER_FIRST_NAME CHAR(30),CUSTOMER_LAST_NAME CHAR(30),TP_ID INT,POSTAP_ID INT, TH_OLD_VALUE TEXT,TH_NEW_VALUE TEXT,TH_USERSTAMP VARCHAR(40),TH_TIMESTAMP TIMESTAMP, PRIMARY KEY (ID))'));
		PREPARE CREATE_TEMP_TICKLER_SPLITTED_UPDATION_STMT FROM @CREATE_TEMP_TICKLER_SPLITTED_UPDATION;
		EXECUTE CREATE_TEMP_TICKLER_SPLITTED_UPDATION_STMT;
  SET @CREATE_TEMP_TICKLER_SPLITTED_DELETION=(SELECT CONCAT('CREATE TABLE ',TEMP_TICKLER_SPLITTED_DELETION,' (ID INT NOT NULL AUTO_INCREMENT,TH_ID INT,CUSTOMER_ID INT,TP_ID INT,POSTAP_ID INT, TH_OLD_VALUE TEXT,TH_NEW_VALUE TEXT,TH_USERSTAMP VARCHAR(40),TH_TIMESTAMP TIMESTAMP, PRIMARY KEY (ID))'));
		PREPARE CREATE_TEMP_TICKLER_SPLITTED_DELETION_STMT FROM @CREATE_TEMP_TICKLER_SPLITTED_DELETION;
		EXECUTE CREATE_TEMP_TICKLER_SPLITTED_DELETION_STMT;
  SET @CREATE_TEMP_INTERMEDIATE_SPLITTED_DELETION=(SELECT CONCAT('CREATE TABLE ',TEMP_INTERMEDIATE_SPLITTED_DELETION,' (ID INT NOT NULL AUTO_INCREMENT,TH_ID INT,CUSTOMER_ID INT,CUSTOMER_FIRST_NAME CHAR(30),CUSTOMER_LAST_NAME CHAR(30),TP_ID INT,POSTAP_ID INT, TH_OLD_VALUE TEXT,TH_NEW_VALUE TEXT,TH_USERSTAMP VARCHAR(40),TH_TIMESTAMP TIMESTAMP, PRIMARY KEY (ID))'));
		PREPARE CREATE_TEMP_INTERMEDIATE_SPLITTED_DELETION_STMT FROM @CREATE_TEMP_INTERMEDIATE_SPLITTED_DELETION;
		EXECUTE CREATE_TEMP_INTERMEDIATE_SPLITTED_DELETION_STMT;
		SET @CREATE_TEMP_CUSTOMER_DELETED_INTERMEDIATE=(SELECT CONCAT('CREATE TABLE ',TEMP_CUSTOMER_DELETED_INTERMEDIATE,' (ID INT NOT NULL AUTO_INCREMENT,TH_ID INT,CUSTOMER_ID INT,TP_ID INT,POSTAP_ID INT, TH_OLD_VALUE TEXT,TH_NEW_VALUE TEXT,TH_USERSTAMP VARCHAR(40),TH_TIMESTAMP TIMESTAMP, PRIMARY KEY (ID))'));
		PREPARE CREATE_TEMP_CUSTOMER_DELETED_INTERMEDIATE_STMT FROM @CREATE_TEMP_CUSTOMER_DELETED_INTERMEDIATE;
		EXECUTE CREATE_TEMP_CUSTOMER_DELETED_INTERMEDIATE_STMT;
    SET @CREATE_MAIN_INTERMEDIATE_TEMP_TICKLER_VALUES=(SELECT CONCAT('CREATE TABLE ',MAIN_INTERMEDIATE_TEMP_TICKLER_VALUES,' (ID INT NOT NULL AUTO_INCREMENT,TH_ID INT,CUSTOMER_ID INT,CUSTOMER_FIRST_NAME CHAR(30),CUSTOMER_LAST_NAME CHAR(30),TP_ID INT,POSTAP_ID INT, TH_OLD_VALUE TEXT,TH_NEW_VALUE TEXT,TH_USERSTAMP VARCHAR(40),TH_TIMESTAMP TIMESTAMP, PRIMARY KEY (ID))'));
		PREPARE CREATE_MAIN_INTERMEDIATE_TEMP_TICKLER_VALUES_STMT FROM @CREATE_MAIN_INTERMEDIATE_TEMP_TICKLER_VALUES;
		EXECUTE CREATE_MAIN_INTERMEDIATE_TEMP_TICKLER_VALUES_STMT;
  SET @CREATE_TEMP_CUSTOMER=(SELECT CONCAT('CREATE TABLE ',TEMP_CUSTOMER,' (ID INT NOT NULL AUTO_INCREMENT,CUSTOMER_ID INT,CUSTOMER_FIRST_NAME VARCHAR (50),CUSTOMER_LAST_NAME VARCHAR (50),PRIMARY KEY (ID))'));
		PREPARE CREATE_TEMP_CUSTOMER_STMT FROM @CREATE_TEMP_CUSTOMER;
		EXECUTE CREATE_TEMP_CUSTOMER_STMT;
  SET @INSERT_TEMP_TICKLER_SPLITTED_UPDATION=(SELECT CONCAT('INSERT INTO ',TEMP_TICKLER_SPLITTED_UPDATION,' (TH_ID,CUSTOMER_ID,CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME,TP_ID,POSTAP_ID,TH_OLD_VALUE,TH_NEW_VALUE,TH_USERSTAMP,TH_TIMESTAMP) SELECT T.TH_ID,T.CUSTOMER_ID,C.CUSTOMER_FIRST_NAME,C.CUSTOMER_LAST_NAME,T.TP_ID,T.TTIP_ID,T.TH_OLD_VALUE,T.TH_NEW_VALUE,ULD.ULD_LOGINID,T.TH_TIMESTAMP FROM TICKLER_HISTORY T,USER_LOGIN_DETAILS ULD,CUSTOMER C WHERE T.TP_ID = 1 AND ULD.ULD_ID=T.ULD_ID AND C.CUSTOMER_ID=T.CUSTOMER_ID AND C.CUSTOMER_ID IS NOT NULL'));
		PREPARE INSERT_TEMP_TICKLER_SPLITTED_UPDATION_STMT FROM @INSERT_TEMP_TICKLER_SPLITTED_UPDATION;
		EXECUTE INSERT_TEMP_TICKLER_SPLITTED_UPDATION_STMT;
  SET @INSERT_TEMP_TICKLER_SPLITTED_DELETION=(SELECT CONCAT('INSERT INTO ',TEMP_TICKLER_SPLITTED_DELETION,' (TH_ID,CUSTOMER_ID,TP_ID,POSTAP_ID,TH_OLD_VALUE,TH_NEW_VALUE,TH_USERSTAMP,TH_TIMESTAMP) SELECT T.TH_ID,T.CUSTOMER_ID,T.TP_ID,T.TTIP_ID,T.TH_OLD_VALUE,T.TH_NEW_VALUE,ULD.ULD_LOGINID,T.TH_TIMESTAMP FROM TICKLER_HISTORY T,USER_LOGIN_DETAILS ULD WHERE T.TP_ID = 2 AND ULD.ULD_ID=T.ULD_ID AND T.CUSTOMER_ID IS NOT NULL'));
		PREPARE INSERT_TEMP_TICKLER_SPLITTED_DELETION_STMT FROM @INSERT_TEMP_TICKLER_SPLITTED_DELETION;
		EXECUTE INSERT_TEMP_TICKLER_SPLITTED_DELETION_STMT;
  SET @INSERT_TEMP_INTERMEDIATE_SPLITTED_DELETION=(SELECT CONCAT('INSERT INTO ',TEMP_INTERMEDIATE_SPLITTED_DELETION,' (TH_ID,CUSTOMER_ID,CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME,TP_ID,POSTAP_ID,TH_OLD_VALUE,TH_NEW_VALUE,TH_USERSTAMP,TH_TIMESTAMP) SELECT T.TH_ID,T.CUSTOMER_ID,C.CUSTOMER_FIRST_NAME,C.CUSTOMER_LAST_NAME,T.TP_ID,T.POSTAP_ID,T.TH_OLD_VALUE,T.TH_NEW_VALUE,ULD.ULD_LOGINID,T.TH_TIMESTAMP FROM ',TEMP_TICKLER_SPLITTED_DELETION,' T,USER_LOGIN_DETAILS ULD,CUSTOMER C WHERE ULD.ULD_LOGINID = T.TH_USERSTAMP AND C.CUSTOMER_ID=T.CUSTOMER_ID AND C.CUSTOMER_ID IS NOT NULL'));
		PREPARE INSERT_TEMP_INTERMEDIATE_SPLITTED_DELETION_STMT FROM @INSERT_TEMP_INTERMEDIATE_SPLITTED_DELETION;
		EXECUTE INSERT_TEMP_INTERMEDIATE_SPLITTED_DELETION_STMT;
   SET @INSERT_TEMP_TICKLER_VALUES=(SELECT CONCAT('INSERT INTO ',TEMP_CUSTOMER_DELETED_INTERMEDIATE,' (TH_ID,CUSTOMER_ID,TP_ID,POSTAP_ID,TH_OLD_VALUE,TH_NEW_VALUE,TH_USERSTAMP,TH_TIMESTAMP) SELECT TH_ID,CUSTOMER_ID,TP_ID,POSTAP_ID,TH_OLD_VALUE,TH_NEW_VALUE,TH_USERSTAMP,TH_TIMESTAMP FROM ',TEMP_TICKLER_SPLITTED_DELETION,' WHERE TH_ID NOT IN (SELECT TH_ID FROM ',TEMP_INTERMEDIATE_SPLITTED_DELETION,')'));
		PREPARE INSERT_TEMP_TICKLER_VALUES_STMT FROM @INSERT_TEMP_TICKLER_VALUES;
		EXECUTE INSERT_TEMP_TICKLER_VALUES_STMT;
   SET @MIN_ID_TICKLER_VALUES4=(SELECT CONCAT('SELECT MIN(ID) INTO @MIN_ID FROM ',TEMP_CUSTOMER_DELETED_INTERMEDIATE));
	  PREPARE MIN_ID_TICKLER_VALUES4_STMT FROM @MIN_ID_TICKLER_VALUES4;
	  EXECUTE MIN_ID_TICKLER_VALUES4_STMT;
	  SET MINID = @MIN_ID;
	  SET @MAX_ID_TICKLER_VALUES4=(SELECT CONCAT('SELECT MAX(ID) INTO @MAX_ID FROM ',TEMP_CUSTOMER_DELETED_INTERMEDIATE));
	  PREPARE MAX_ID_TICKLER_VALUES4_STMT FROM @MAX_ID_TICKLER_VALUES4;
	  EXECUTE MAX_ID_TICKLER_VALUES4_STMT;
   SET MAXID = @MAX_ID;
   WHILE(MINID<=MAXID)DO
  SET @SELECT_POSTAP_ID=(SELECT CONCAT('SELECT POSTAP_ID INTO @POSTAPID FROM ',TEMP_CUSTOMER_DELETED_INTERMEDIATE,' WHERE ID = ',MINID));
		PREPARE SELECT_POSTAP_ID_STMT FROM @SELECT_POSTAP_ID;
		EXECUTE SELECT_POSTAP_ID_STMT;
  SET POSTAPID_VALUE = @POSTAPID;
  IF (POSTAPID_VALUE = 8) THEN
  SET @SELECT_TICKLER_DATA=(SELECT CONCAT('SELECT TH_OLD_VALUE INTO @OLDVALUE FROM TICKLER_HISTORY WHERE CUSTOMER_ID=(SELECT CUSTOMER_ID FROM ',TEMP_CUSTOMER_DELETED_INTERMEDIATE,' WHERE POSTAP_ID = 8 AND ID = ',MINID,') AND TTIP_ID = 8'));
  PREPARE SELECT_TICKLER_DATA_STMT FROM @SELECT_TICKLER_DATA;
		EXECUTE SELECT_TICKLER_DATA_STMT;
  SET @SELECT_CUSTOMER_ID=(SELECT CONCAT('SELECT CUSTOMER_ID INTO @IDCUSTOMER FROM ',TEMP_CUSTOMER_DELETED_INTERMEDIATE,' WHERE POSTAP_ID = 8 AND ID = ',MINID));
  PREPARE SELECT_CUSTOMER_ID_STMT FROM @SELECT_CUSTOMER_ID;
		EXECUTE SELECT_CUSTOMER_ID_STMT;
 SET CUSTOMERID=@IDCUSTOMER;
SET CUSTOMER_VALUE =@OLDVALUE;
SET STR_FIRSTNAME=(SELECT SUBSTRING_INDEX(CUSTOMER_VALUE,',',+1));
SET STR_LASTNAME=(SELECT SUBSTRING_INDEX(CUSTOMER_VALUE,',',-1));
SET STR_HEADER_FIRST = (SELECT SUBSTRING_INDEX(STR_FIRSTNAME,'=',+1));
IF (STR_HEADER_FIRST ='CUSTOMER_ID')THEN
SET STR_TOTALNAME=(SELECT SUBSTRING_INDEX(CUSTOMER_VALUE,',',2));
SET STR_CUSTOMERID=(SELECT SUBSTRING_INDEX(STR_TOTALNAME,',',+1));
SET STR_FIRSTNAME=(SELECT SUBSTRING_INDEX(STR_TOTALNAME,',',-1));
SET IDFORCUSTOMER = (SELECT SUBSTRING_INDEX(STR_CUSTOMERID,'=',-1));
SET FIRSTNAME = (SELECT SUBSTRING_INDEX(STR_FIRSTNAME,'=',-1));
END IF;
IF (STR_HEADER_FIRST = 'CUSTOMER_FIRST_NAME') THEN
SET FIRSTNAME = (SELECT SUBSTRING_INDEX(STR_FIRSTNAME,'=',-1));
END IF;
SET STR_HEADER_LAST = (SELECT SUBSTRING_INDEX(STR_LASTNAME,'=',+1));
SET LASTNAME = (SELECT SUBSTRING_INDEX(STR_LASTNAME,'=',-1));
 SET @LAST_NAME = LASTNAME;
 SET @FIRST_NAME = FIRSTNAME;
  SET @INSERT_TEMP_CUSTOMER=(SELECT CONCAT('INSERT INTO ',TEMP_CUSTOMER,' (CUSTOMER_ID,CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME)VALUES (',CUSTOMERID,',"',FIRSTNAME,'","',LASTNAME,'")'));
  PREPARE INSERT_TEMP_CUSTOMER_STMT FROM @INSERT_TEMP_CUSTOMER;
		EXECUTE INSERT_TEMP_CUSTOMER_STMT;
END IF;
SET MINID = MINID + 1;
END WHILE;
  SET @INSERT_MAIN_INTERMEDIATE_TEMP_TICKLER_VALUES=(SELECT CONCAT('INSERT INTO ',MAIN_INTERMEDIATE_TEMP_TICKLER_VALUES,' (TH_ID,CUSTOMER_ID,CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME,TP_ID,POSTAP_ID,TH_OLD_VALUE,TH_NEW_VALUE,TH_USERSTAMP,TH_TIMESTAMP) SELECT T.TH_ID,T.CUSTOMER_ID,C.CUSTOMER_FIRST_NAME,C.CUSTOMER_LAST_NAME,T.TP_ID,T.POSTAP_ID,T.TH_OLD_VALUE,T.TH_NEW_VALUE,T.TH_USERSTAMP,T.TH_TIMESTAMP FROM ',TEMP_CUSTOMER_DELETED_INTERMEDIATE,' T,USER_LOGIN_DETAILS ULD,',TEMP_CUSTOMER,' C WHERE ULD.ULD_LOGINID=T.TH_USERSTAMP AND C.CUSTOMER_ID=T.CUSTOMER_ID AND C.CUSTOMER_ID IS NOT NULL'));
  PREPARE INSERT_MAIN_INTERMEDIATE_TEMP_TICKLER_VALUES_STMT FROM @INSERT_MAIN_INTERMEDIATE_TEMP_TICKLER_VALUES;
		EXECUTE INSERT_MAIN_INTERMEDIATE_TEMP_TICKLER_VALUES_STMT;
		SET @CREATE_TEMP_TICKLER_HISTORY=(SELECT CONCAT('CREATE TABLE ',CUSTOMER_TICKLER_HISTORY_TMPTBL,'(TH_ID INT,CUSTOMER_ID INT,CUSTOMER_FIRST_NAME CHAR(30),CUSTOMER_LAST_NAME CHAR(30),UPDATION_DELETION CHAR(10),TABLE_NAME VARCHAR(70), TH_OLD_VALUE TEXT,TH_NEW_VALUE TEXT,TH_USERSTAMP  VARCHAR(40),TH_TIMESTAMP TIMESTAMP)'));
		PREPARE CREATE_TEMP_TICKLER_HISTORY_STMT FROM @CREATE_TEMP_TICKLER_HISTORY;
		EXECUTE CREATE_TEMP_TICKLER_HISTORY_STMT;
	 SELECT COUNT(*) INTO COUNT_TICKLER_HISTORY FROM TICKLER_HISTORY WHERE CUSTOMER_ID IS NOT NULL;
IF COUNT_TICKLER_HISTORY > 0 THEN
  SET @INSERT_TEMP_TICKLER_VALUES=(SELECT CONCAT('INSERT INTO ',CUSTOMER_TICKLER_VALUES_TMPTBL,' (TH_ID,CUSTOMER_ID,CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME,TP_ID,POSTAP_ID,TH_OLD_VALUE,TH_NEW_VALUE,TH_USERSTAMP,TH_TIMESTAMP) SELECT T.TH_ID,T.CUSTOMER_ID,T.CUSTOMER_FIRST_NAME,T.CUSTOMER_LAST_NAME,T.TP_ID,T.POSTAP_ID,T.TH_OLD_VALUE,T.TH_NEW_VALUE,T.TH_USERSTAMP,T.TH_TIMESTAMP FROM ',TEMP_TICKLER_SPLITTED_UPDATION,' T'));
		PREPARE INSERT_TEMP_TICKLER_VALUES_STMT FROM @INSERT_TEMP_TICKLER_VALUES;
		EXECUTE INSERT_TEMP_TICKLER_VALUES_STMT;
   SET @MAXID = (SELECT CONCAT('SELECT MAX(ID) INTO @TEMP_TICKLER_VALUES_MAXID FROM ',CUSTOMER_TICKLER_VALUES_TMPTBL));
   PREPARE MAX_ID_STMT FROM @MAXID;
   EXECUTE MAX_ID_STMT;
   SET MAX_ID=@TEMP_TICKLER_VALUES_MAXID;
   IF (MAX_ID IS NOT NULL) THEN    
     SET @ALTER_TEMP_TICKLER_VALUES =(SELECT CONCAT('ALTER TABLE ',CUSTOMER_TICKLER_VALUES_TMPTBL,' AUTO_INCREMENT=',MAX_ID));
     PREPARE ALTER_TEMP_TICKLER_VALUES_STMT FROM @ALTER_TEMP_TICKLER_VALUES;
     EXECUTE ALTER_TEMP_TICKLER_VALUES_STMT;
   END IF;
  SET @INSERT_TEMP_TICKLER_VALUES=(SELECT CONCAT('INSERT INTO ',CUSTOMER_TICKLER_VALUES_TMPTBL,' (TH_ID,CUSTOMER_ID,CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME,TP_ID,POSTAP_ID,TH_OLD_VALUE,TH_NEW_VALUE,TH_USERSTAMP,TH_TIMESTAMP) SELECT T.TH_ID,T.CUSTOMER_ID,T.CUSTOMER_FIRST_NAME,T.CUSTOMER_LAST_NAME,T.TP_ID,T.POSTAP_ID,T.TH_OLD_VALUE,T.TH_NEW_VALUE,T.TH_USERSTAMP,T.TH_TIMESTAMP FROM ',TEMP_INTERMEDIATE_SPLITTED_DELETION,' T'));
		PREPARE INSERT_TEMP_TICKLER_VALUES_STMT FROM @INSERT_TEMP_TICKLER_VALUES;
		EXECUTE INSERT_TEMP_TICKLER_VALUES_STMT;
     SET @MAXID = (SELECT CONCAT('SELECT MAX(ID) INTO @TEMP_TICKLER_VALUES_MAXID FROM ',CUSTOMER_TICKLER_VALUES_TMPTBL));
   PREPARE MAX_ID_STMT FROM @MAXID;
   EXECUTE MAX_ID_STMT;
   SET MAX_ID=@TEMP_TICKLER_VALUES_MAXID;
   IF (MAX_ID IS NOT NULL) THEN    
     SET @ALTER_TEMP_TICKLER_VALUES1 =(SELECT CONCAT('ALTER TABLE ',CUSTOMER_TICKLER_VALUES_TMPTBL,' AUTO_INCREMENT=',MAX_ID));
     PREPARE ALTER_TEMP_TICKLER_VALUES1_STMT FROM @ALTER_TEMP_TICKLER_VALUES1;
     EXECUTE ALTER_TEMP_TICKLER_VALUES1_STMT;
   END IF;
  SET @INSERT_TEMP_TICKLER_VALUES=(SELECT CONCAT('INSERT INTO ',CUSTOMER_TICKLER_VALUES_TMPTBL,' (TH_ID,CUSTOMER_ID,CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME,TP_ID,POSTAP_ID,TH_OLD_VALUE,TH_NEW_VALUE,TH_USERSTAMP,TH_TIMESTAMP) SELECT T.TH_ID,T.CUSTOMER_ID,T.CUSTOMER_FIRST_NAME,T.CUSTOMER_LAST_NAME,T.TP_ID,T.POSTAP_ID,T.TH_OLD_VALUE,T.TH_NEW_VALUE,T.TH_USERSTAMP,T.TH_TIMESTAMP FROM ',MAIN_INTERMEDIATE_TEMP_TICKLER_VALUES,' T'));
		PREPARE INSERT_TEMP_TICKLER_VALUES_STMT FROM @INSERT_TEMP_TICKLER_VALUES;
		EXECUTE INSERT_TEMP_TICKLER_VALUES_STMT;
     SET @MAXID = (SELECT CONCAT('SELECT MAX(ID) INTO @TEMP_TICKLER_VALUES_MAXID FROM ',CUSTOMER_TICKLER_VALUES_TMPTBL));
   PREPARE MAX_ID_STMT FROM @MAXID;
   EXECUTE MAX_ID_STMT;
   SET MAX_ID=@TEMP_TICKLER_VALUES_MAXID;
   IF (MAX_ID IS NOT NULL) THEN    
     SET @ALTER_TEMP_TICKLER_VALUES2 =(SELECT CONCAT('ALTER TABLE ',CUSTOMER_TICKLER_VALUES_TMPTBL,' AUTO_INCREMENT=',MAX_ID));
     PREPARE ALTER_TEMP_TICKLER_VALUES2_STMT FROM @ALTER_TEMP_TICKLER_VALUES2;
     EXECUTE ALTER_TEMP_TICKLER_VALUES2_STMT;
   END IF;
    WHILE COUNT_TICKLER_HISTORY > 0 DO
		SET @SELECT_TEMP_TICKLER_VALUES=(SELECT CONCAT('SELECT TH_ID,CUSTOMER_ID,CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME,TP_ID,POSTAP_ID,TH_OLD_VALUE,TH_NEW_VALUE,TH_USERSTAMP,TH_TIMESTAMP INTO @TH_ID,@CUSTOMER_ID,@CUSTOMER_FIRST_NAME,@CUSTOMER_LAST_NAME,@TP_ID,@TTIP_ID,@TH_OLD_VALUE,@TH_NEW_VALUE,@TH_USERSTAMP,@TH_TIMESTAMP FROM ',CUSTOMER_TICKLER_VALUES_TMPTBL,' WHERE ID = ',COUNT_TICKLER_HISTORY));
  PREPARE  SELECT_TEMP_TICKLER_VALUES_STMT FROM @SELECT_TEMP_TICKLER_VALUES;
		EXECUTE SELECT_TEMP_TICKLER_VALUES_STMT;
		SET @V_TEMP_OLD_VALUE = @TH_OLD_VALUE;
		SET @V_TEMP_NEW_VALUE = @TH_NEW_VALUE;
		IF (@TTIP_ID = 9) THEN
				CCD_OV_CS_LOOP : LOOP
					CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES(',',@TH_OLD_VALUE,@VALUE,@REMAINING_STRING);
					SELECT @REMAINING_STRING INTO @TH_OLD_VALUE;
					CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('=',@VALUE,@COLUMN_NAME,@COLUMN_VALUE);
						IF UPPER(@COLUMN_NAME) = 'CUSTOMER_ID' THEN
       IF EXISTS (SELECT CUSTOMER_FIRST_NAME FROM CUSTOMER WHERE CUSTOMER_ID = @COLUMN_VALUE) THEN
								SELECT CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME INTO @FIRST_NAME_VALUE,@LAST_NAME_VALUE FROM CUSTOMER WHERE CUSTOMER_ID = @COLUMN_VALUE;
        END IF;
        SET @SELECT_CUSTOMER_FIRST_NAME=(SELECT CONCAT('SELECT CUSTOMER_FIRST_NAME INTO @FIRSTNAMEVALUE FROM ',TEMP_CUSTOMER,' WHERE CUSTOMER_ID = @COLUMN_VALUE'));
        PREPARE SELECT_CUSTOMER_FIRST_NAME_STMT FROM @SELECT_CUSTOMER_FIRST_NAME;
        EXECUTE SELECT_CUSTOMER_FIRST_NAME_STMT;
        SET FIRST_NAME_VALUE=@FIRSTNAMEVALUE;
        IF (FIRST_NAME_VALUE IS NOT NULL) THEN
				SET @SELECT_CUSTOMER_NAME=(SELECT CONCAT ('SELECT CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME INTO @FIRST_NAME_VALUE,@LAST_NAME_VALUE FROM ',TEMP_CUSTOMER,' WHERE CUSTOMER_ID = @COLUMN_VALUE'));
				PREPARE SELECT_CUSTOMER_NAME_STMT FROM @SELECT_CUSTOMER_NAME;
        		EXECUTE SELECT_CUSTOMER_NAME_STMT;
        END IF;
								SET @REPLACE_STRING = CONCAT('CUSTOMER_FIRST_NAME=',@FIRST_NAME_VALUE,',CUSTOMER_LAST_NAME=',@LAST_NAME_VALUE);
								SELECT REPLACE(@V_TEMP_OLD_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_OLD_VALUE;
						END IF;
						IF UPPER(@COLUMN_NAME) = 'ULD_ID' THEN
							SELECT ULD_LOGINID INTO @OLDULDLOGINIDCOMPANY FROM USER_LOGIN_DETAILS WHERE ULD_ID = @COLUMN_VALUE;
							SET @REPLACE_STRING = CONCAT('ULD_LOGINID=',@OLDULDLOGINIDCOMPANY);
							SELECT REPLACE(@V_TEMP_OLD_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_OLD_VALUE;
							LEAVE  CCD_OV_CS_LOOP;
						END IF;
						IF @TH_OLD_VALUE IS NULL THEN
							LEAVE  CCD_OV_CS_LOOP;
						END IF;
				END LOOP;           
			IF @TH_NEW_VALUE IS NOT NULL THEN
					CCD_NV_CS_LOOP : LOOP
						CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES(',',@TH_NEW_VALUE,@VALUE,@REMAINING_STRING);
						SELECT @REMAINING_STRING INTO @TH_NEW_VALUE;
						CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('=',@VALUE,@COLUMN_NAME,@COLUMN_VALUE);
						IF UPPER(@COLUMN_NAME) = 'CUSTOMER_ID' THEN
							      IF EXISTS (SELECT CUSTOMER_FIRST_NAME FROM CUSTOMER WHERE CUSTOMER_ID = @COLUMN_VALUE) THEN
								SELECT CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME INTO @FIRST_NAME_VALUE,@LAST_NAME_VALUE FROM CUSTOMER WHERE CUSTOMER_ID = @COLUMN_VALUE;
        END IF;
        SET @SELECT_CUSTOMER_FIRST_NAME=(SELECT CONCAT('SELECT CUSTOMER_FIRST_NAME INTO @FIRSTNAMEVALUE FROM ',TEMP_CUSTOMER,' WHERE CUSTOMER_ID = @COLUMN_VALUE'));
        PREPARE SELECT_CUSTOMER_FIRST_NAME_STMT FROM @SELECT_CUSTOMER_FIRST_NAME;
        EXECUTE SELECT_CUSTOMER_FIRST_NAME_STMT;
        SET FIRST_NAME_VALUE=@FIRSTNAMEVALUE;
        IF (FIRST_NAME_VALUE IS NOT NULL) THEN
				SET @SELECT_CUSTOMER_NAME=(SELECT CONCAT ('SELECT CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME INTO @FIRST_NAME_VALUE,@LAST_NAME_VALUE FROM ',TEMP_CUSTOMER,' WHERE CUSTOMER_ID = @COLUMN_VALUE'));
				PREPARE SELECT_CUSTOMER_NAME_STMT FROM @SELECT_CUSTOMER_NAME;
        		EXECUTE SELECT_CUSTOMER_NAME_STMT;
        END IF;
                  			SET @REPLACE_STRING = CONCAT('CUSTOMER_FIRST_NAME=',@FIRST_NAME_VALUE,',CUSTOMER_LAST_NAME=',@LAST_NAME_VALUE);
							SELECT REPLACE(@V_TEMP_NEW_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_NEW_VALUE;
						END IF;  
						IF UPPER(@COLUMN_NAME) = 'ULD_ID' THEN
							SELECT ULD_LOGINID INTO @NEWULDLOGINIDCOMPANY FROM USER_LOGIN_DETAILS WHERE ULD_ID = @COLUMN_VALUE;
                  			SET @REPLACE_STRING = CONCAT('ULD_LOGINID=',@NEWULDLOGINIDCOMPANY);
							SELECT REPLACE(@V_TEMP_NEW_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_NEW_VALUE;
							LEAVE  CCD_NV_CS_LOOP;
						END IF;				  
						IF @TH_NEW_VALUE IS NULL THEN
							LEAVE  CCD_NV_CS_LOOP;
						END IF;
					END LOOP;  
			END IF;
		ELSEIF (@TTIP_ID = 10) THEN 
              CALL SP_CUSTOMER_TICKLER_ENTRY_DETAILS();
		ELSEIF (@TTIP_ID = 12) THEN     
		CALL SP_CUSTOMER_TICKLER_FEE_DETAILS();
		ELSEIF (@TTIP_ID = 13) THEN 
            CACD_OV_CS_LOOP : LOOP
              CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES(',',@TH_OLD_VALUE,@VALUE,@REMAINING_STRING);
              SELECT @REMAINING_STRING INTO @TH_OLD_VALUE;
              CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('=',@VALUE,@COLUMN_NAME,@COLUMN_VALUE);
				IF UPPER(@COLUMN_NAME) = 'CUSTOMER_ID' THEN
                        IF EXISTS (SELECT CUSTOMER_FIRST_NAME FROM CUSTOMER WHERE CUSTOMER_ID = @COLUMN_VALUE) THEN
								SELECT CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME INTO @FIRST_NAME_VALUE,@LAST_NAME_VALUE FROM CUSTOMER WHERE CUSTOMER_ID = @COLUMN_VALUE;
        END IF;
        SET @SELECT_CUSTOMER_FIRST_NAME=(SELECT CONCAT('SELECT CUSTOMER_FIRST_NAME INTO @FIRSTNAMEVALUE FROM ',TEMP_CUSTOMER,' WHERE CUSTOMER_ID = @COLUMN_VALUE'));
        PREPARE SELECT_CUSTOMER_FIRST_NAME_STMT FROM @SELECT_CUSTOMER_FIRST_NAME;
        EXECUTE SELECT_CUSTOMER_FIRST_NAME_STMT;
        SET FIRST_NAME_VALUE=@FIRSTNAMEVALUE;
        IF (FIRST_NAME_VALUE IS NOT NULL) THEN
				SET @SELECT_CUSTOMER_NAME=(SELECT CONCAT ('SELECT CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME INTO @FIRST_NAME_VALUE,@LAST_NAME_VALUE FROM ',TEMP_CUSTOMER,' WHERE CUSTOMER_ID = @COLUMN_VALUE'));
				PREPARE SELECT_CUSTOMER_NAME_STMT FROM @SELECT_CUSTOMER_NAME;
        		EXECUTE SELECT_CUSTOMER_NAME_STMT;        
        		END IF;
                  SET @REPLACE_STRING = CONCAT('CUSTOMER_FIRST_NAME=',@FIRST_NAME_VALUE,',CUSTOMER_LAST_NAME=',@LAST_NAME_VALUE);
                  SELECT REPLACE(@V_TEMP_OLD_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_OLD_VALUE;
				END IF;
				IF UPPER(@COLUMN_NAME) = 'UASD_ID' THEN
                    SELECT UASD_ACCESS_CARD INTO @UASD_ACCESS_CARD FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ID=@COLUMN_VALUE;
                    SET @REPLACE_STRING = CONCAT('UASD_ACCESS_CARD=',IFNULL(@UASD_ACCESS_CARD,'NULL'));
                    SELECT REPLACE(@V_TEMP_OLD_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_OLD_VALUE;
				END IF;
				IF UPPER(@COLUMN_NAME) = 'ACN_ID' THEN
                 IF (@COLUMN_VALUE IS NOT NULL AND UPPER(@COLUMN_VALUE) != 'NULL') THEN
					SELECT ACN_DATA INTO @ACN_DATA FROM ACCESS_CONFIGURATION WHERE ACN_ID = @COLUMN_VALUE;
					SET @REPLACE_STRING = CONCAT('ACN_DATA=',IFNULL(@ACN_DATA,'NULL'));
					SELECT REPLACE(@V_TEMP_OLD_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_OLD_VALUE;
                 END IF; 
				END IF;
			   IF UPPER(@COLUMN_NAME) = 'ULD_ID' THEN
					SELECT ULD_LOGINID INTO @OLDULDLOGINIDACCESS FROM USER_LOGIN_DETAILS WHERE ULD_ID = @COLUMN_VALUE;
                  	SET @REPLACE_STRING = CONCAT('ULD_LOGINID=',@OLDULDLOGINIDACCESS);
					SELECT REPLACE(@V_TEMP_OLD_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_OLD_VALUE;
					LEAVE CACD_OV_CS_LOOP;
                END IF;	
                IF @TH_OLD_VALUE IS NULL THEN
  			          LEAVE  CACD_OV_CS_LOOP;
  		          END IF;
	           END LOOP; 
           IF @TH_NEW_VALUE IS NOT NULL THEN
				SET @V_TEMP_NEW_VALUE = @TH_NEW_VALUE;
				CACD_NV_CS_LOOP : LOOP
					CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES(',',@TH_NEW_VALUE,@VALUE,@REMAINING_STRING);
					SELECT @REMAINING_STRING INTO @TH_NEW_VALUE;
					CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('=',@VALUE,@COLUMN_NAME,@COLUMN_VALUE);
					IF UPPER(@COLUMN_NAME) = 'CUSTOMER_ID' THEN
						      IF EXISTS (SELECT CUSTOMER_FIRST_NAME FROM CUSTOMER WHERE CUSTOMER_ID = @COLUMN_VALUE) THEN
								SELECT CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME INTO @FIRST_NAME_VALUE,@LAST_NAME_VALUE FROM CUSTOMER WHERE CUSTOMER_ID = @COLUMN_VALUE;
        END IF;
        SET @SELECT_CUSTOMER_FIRST_NAME=(SELECT CONCAT('SELECT CUSTOMER_FIRST_NAME INTO @FIRSTNAMEVALUE FROM ',TEMP_CUSTOMER,' WHERE CUSTOMER_ID = @COLUMN_VALUE'));
        PREPARE SELECT_CUSTOMER_FIRST_NAME_STMT FROM @SELECT_CUSTOMER_FIRST_NAME;
        EXECUTE SELECT_CUSTOMER_FIRST_NAME_STMT;
        SET FIRST_NAME_VALUE=@FIRSTNAMEVALUE;
        IF (FIRST_NAME_VALUE IS NOT NULL) THEN
				SET @SELECT_CUSTOMER_NAME=(SELECT CONCAT ('SELECT CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME INTO @FIRST_NAME_VALUE,@LAST_NAME_VALUE FROM ',TEMP_CUSTOMER,' WHERE CUSTOMER_ID = @COLUMN_VALUE'));
				PREPARE SELECT_CUSTOMER_NAME_STMT FROM @SELECT_CUSTOMER_NAME;
        		EXECUTE SELECT_CUSTOMER_NAME_STMT;
         END IF;
						SET @REPLACE_STRING = CONCAT('CUSTOMER_FIRST_NAME=',@FIRST_NAME_VALUE,',CUSTOMER_LAST_NAME=',@LAST_NAME_VALUE);
						SELECT REPLACE(@V_TEMP_NEW_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_NEW_VALUE;
					END IF;
					IF UPPER(@COLUMN_NAME) = 'UASD_ID' THEN
                      SELECT UASD_ACCESS_CARD INTO @UASD_ACCESS_CARD FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ID=@COLUMN_VALUE;
                      SET @REPLACE_STRING = CONCAT('UASD_ACCESS_CARD=',IFNULL(@UASD_ACCESS_CARD,'NULL'));
                      SELECT REPLACE(@V_TEMP_NEW_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_NEW_VALUE;
					END IF;
					IF UPPER(@COLUMN_NAME) = 'ACN_ID' THEN
						IF (@COLUMN_VALUE IS NOT NULL AND UPPER(@COLUMN_VALUE) != 'NULL') THEN
						SELECT ACN_DATA INTO @ACN_DATA FROM ACCESS_CONFIGURATION WHERE ACN_ID = @COLUMN_VALUE;
						SET @REPLACE_STRING = CONCAT('ACN_DATA=',IFNULL(@ACN_DATA,'NULL'));
						SELECT REPLACE(@V_TEMP_NEW_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_NEW_VALUE;
						END IF; 
					END IF;  
					IF UPPER(@COLUMN_NAME) = 'ULD_ID' THEN
						SELECT ULD_LOGINID INTO @NEWULDLOGINIDACCESS FROM USER_LOGIN_DETAILS WHERE ULD_ID = @COLUMN_VALUE;
						SET @REPLACE_STRING = CONCAT('ULD_LOGINID=',@NEWULDLOGINIDACCESS);
						SELECT REPLACE(@V_TEMP_NEW_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_NEW_VALUE;
						LEAVE CACD_NV_CS_LOOP;
					END IF;
					IF @TH_NEW_VALUE IS NULL THEN
			          LEAVE  CACD_NV_CS_LOOP;
					END IF;
				END LOOP;  
           ELSE
             SET @V_TEMP_NEW_VALUE = NULL;
           END IF;     
		ELSEIF (@TTIP_ID = 14) THEN 
            CTD_OV_CS_LOOP : LOOP
              CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES(',',@TH_OLD_VALUE,@VALUE,@REMAINING_STRING);
              SELECT @REMAINING_STRING INTO @TH_OLD_VALUE;
              CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('=',@VALUE,@COLUMN_NAME,@COLUMN_VALUE);
				IF UPPER(@COLUMN_NAME) = 'CUSTOMER_ID' THEN
                        IF EXISTS (SELECT CUSTOMER_FIRST_NAME FROM CUSTOMER WHERE CUSTOMER_ID = @COLUMN_VALUE) THEN
								SELECT CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME INTO @FIRST_NAME_VALUE,@LAST_NAME_VALUE FROM CUSTOMER WHERE CUSTOMER_ID = @COLUMN_VALUE;
        END IF;
        SET @SELECT_CUSTOMER_FIRST_NAME=(SELECT CONCAT('SELECT CUSTOMER_FIRST_NAME INTO @FIRSTNAMEVALUE FROM ',TEMP_CUSTOMER,' WHERE CUSTOMER_ID = @COLUMN_VALUE'));
        PREPARE SELECT_CUSTOMER_FIRST_NAME_STMT FROM @SELECT_CUSTOMER_FIRST_NAME;
        EXECUTE SELECT_CUSTOMER_FIRST_NAME_STMT;
        SET FIRST_NAME_VALUE=@FIRSTNAMEVALUE;
        IF (FIRST_NAME_VALUE IS NOT NULL) THEN
				SET @SELECT_CUSTOMER_NAME=(SELECT CONCAT ('SELECT CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME INTO @FIRST_NAME_VALUE,@LAST_NAME_VALUE FROM ',TEMP_CUSTOMER,' WHERE CUSTOMER_ID = @COLUMN_VALUE'));
				PREPARE SELECT_CUSTOMER_NAME_STMT FROM @SELECT_CUSTOMER_NAME;
        		EXECUTE SELECT_CUSTOMER_NAME_STMT;
            END IF;
                  SET @REPLACE_STRING = CONCAT('CUSTOMER_FIRST_NAME=',@FIRST_NAME_VALUE,',CUSTOMER_LAST_NAME=',@LAST_NAME_VALUE);
                  SELECT REPLACE(@V_TEMP_OLD_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_OLD_VALUE;
				END IF;
              IF UPPER(@COLUMN_NAME) = 'UASD_ID' THEN
					IF (@COLUMN_VALUE IS NOT NULL AND UPPER(@COLUMN_VALUE) != 'NULL') THEN
                      SELECT UASD_ACCESS_CARD INTO @UASD_ACCESS_CARD FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ID=@COLUMN_VALUE;
                      SET @REPLACE_STRING = CONCAT('UASD_ACCESS_CARD=',IFNULL(@UASD_ACCESS_CARD,'NULL'));
                      SELECT REPLACE(@V_TEMP_OLD_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_OLD_VALUE;
					END IF;
              END IF;
				IF UPPER(@COLUMN_NAME) = 'ULD_ID' THEN
					SELECT ULD_LOGINID INTO @OLDULDLOGINIDLP FROM USER_LOGIN_DETAILS WHERE ULD_ID = @COLUMN_VALUE;
                  	SET @REPLACE_STRING = CONCAT('ULD_USERSTAMP=',@OLDULDLOGINIDLP);
					SELECT REPLACE(@V_TEMP_OLD_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_OLD_VALUE;
					LEAVE CTD_OV_CS_LOOP;
                END IF;	
                IF @TH_OLD_VALUE IS NULL THEN
  			          LEAVE  CTD_OV_CS_LOOP;
  		        END IF;
	        END LOOP; 
           IF @TH_NEW_VALUE IS NOT NULL THEN
				SET @V_TEMP_NEW_VALUE = @TH_NEW_VALUE;
				CTD_NV_CS_LOOP : LOOP
					CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES(',',@TH_NEW_VALUE,@VALUE,@REMAINING_STRING);
					SELECT @REMAINING_STRING INTO @TH_NEW_VALUE;
					CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('=',@VALUE,@COLUMN_NAME,@COLUMN_VALUE);
					IF UPPER(@COLUMN_NAME) = 'CUSTOMER_ID' THEN
						      IF EXISTS (SELECT CUSTOMER_FIRST_NAME FROM CUSTOMER WHERE CUSTOMER_ID = @COLUMN_VALUE) THEN
								SELECT CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME INTO @FIRST_NAME_VALUE,@LAST_NAME_VALUE FROM CUSTOMER WHERE CUSTOMER_ID = @COLUMN_VALUE;
        END IF;
        SET @SELECT_CUSTOMER_FIRST_NAME=(SELECT CONCAT('SELECT CUSTOMER_FIRST_NAME INTO @FIRSTNAMEVALUE FROM ',TEMP_CUSTOMER,' WHERE CUSTOMER_ID = @COLUMN_VALUE'));
        PREPARE SELECT_CUSTOMER_FIRST_NAME_STMT FROM @SELECT_CUSTOMER_FIRST_NAME;
        EXECUTE SELECT_CUSTOMER_FIRST_NAME_STMT;
        SET FIRST_NAME_VALUE=@FIRSTNAMEVALUE;
        IF (FIRST_NAME_VALUE IS NOT NULL) THEN
				SET @SELECT_CUSTOMER_NAME=(SELECT CONCAT ('SELECT CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME INTO @FIRST_NAME_VALUE,@LAST_NAME_VALUE FROM ',TEMP_CUSTOMER,' WHERE CUSTOMER_ID = @COLUMN_VALUE'));
				PREPARE SELECT_CUSTOMER_NAME_STMT FROM @SELECT_CUSTOMER_NAME;
        		EXECUTE SELECT_CUSTOMER_NAME_STMT;
         END IF;
						SET @REPLACE_STRING = CONCAT('CUSTOMER_FIRST_NAME=',@FIRST_NAME_VALUE,',CUSTOMER_LAST_NAME=',@LAST_NAME_VALUE);
						SELECT REPLACE(@V_TEMP_NEW_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_NEW_VALUE;
					END IF;
					IF UPPER(@COLUMN_NAME) = 'UASD_ID' THEN
						IF (@COLUMN_VALUE IS NOT NULL AND UPPER(@COLUMN_VALUE) != 'NULL') THEN
							SELECT UASD_ACCESS_CARD INTO @UASD_ACCESS_CARD FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ID=@COLUMN_VALUE;
							SET @REPLACE_STRING = CONCAT('UASD_ACCESS_CARD=',IFNULL(@UASD_ACCESS_CARD,'NULL'));
							SELECT REPLACE(@V_TEMP_NEW_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_NEW_VALUE;
						END IF; 
					END IF;   
					IF UPPER(@COLUMN_NAME) = 'ULD_ID' THEN
						SELECT ULD_LOGINID INTO @NEWULDLOGINIDLP FROM USER_LOGIN_DETAILS WHERE ULD_ID = @COLUMN_VALUE;
						SET @REPLACE_STRING = CONCAT('ULD_LOGINID=',@NEWULDLOGINIDLP);
						SELECT REPLACE(@V_TEMP_NEW_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_NEW_VALUE;
						LEAVE CTD_NV_CS_LOOP;
					END IF;	
					IF @TH_NEW_VALUE IS NULL THEN
			          LEAVE  CTD_NV_CS_LOOP;
					END IF;
	           END LOOP;  
           ELSE
				SET @V_TEMP_NEW_VALUE = NULL;
           END IF;     
		ELSEIF (@TTIP_ID = 15) THEN     
          CPD_OV_CS_LOOP : LOOP
              CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES(',',@TH_OLD_VALUE,@VALUE,@REMAINING_STRING);
              SELECT @REMAINING_STRING INTO @TH_OLD_VALUE;
              CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('=',@VALUE,@COLUMN_NAME,@COLUMN_VALUE);
				IF UPPER(@COLUMN_NAME) = 'CUSTOMER_ID' THEN
					      IF EXISTS (SELECT CUSTOMER_FIRST_NAME FROM CUSTOMER WHERE CUSTOMER_ID = @COLUMN_VALUE) THEN
								SELECT CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME INTO @FIRST_NAME_VALUE,@LAST_NAME_VALUE FROM CUSTOMER WHERE CUSTOMER_ID = @COLUMN_VALUE;
        END IF;
        SET @SELECT_CUSTOMER_FIRST_NAME=(SELECT CONCAT('SELECT CUSTOMER_FIRST_NAME INTO @FIRSTNAMEVALUE FROM ',TEMP_CUSTOMER,' WHERE CUSTOMER_ID = @COLUMN_VALUE'));
        PREPARE SELECT_CUSTOMER_FIRST_NAME_STMT FROM @SELECT_CUSTOMER_FIRST_NAME;
        EXECUTE SELECT_CUSTOMER_FIRST_NAME_STMT;
        SET FIRST_NAME_VALUE=@FIRSTNAMEVALUE;
        IF (FIRST_NAME_VALUE IS NOT NULL) THEN
				SET @SELECT_CUSTOMER_NAME=(SELECT CONCAT ('SELECT CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME INTO @FIRST_NAME_VALUE,@LAST_NAME_VALUE FROM ',TEMP_CUSTOMER,' WHERE CUSTOMER_ID = @COLUMN_VALUE'));
				PREPARE SELECT_CUSTOMER_NAME_STMT FROM @SELECT_CUSTOMER_NAME;
        		EXECUTE SELECT_CUSTOMER_NAME_STMT;
        		        END IF;
					SET @REPLACE_STRING = CONCAT('CUSTOMER_FIRST_NAME=',@FIRST_NAME_VALUE,',CUSTOMER_LAST_NAME=',@LAST_NAME_VALUE);
					SELECT REPLACE(@V_TEMP_OLD_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_OLD_VALUE;
				END IF;
        IF UPPER(@COLUMN_NAME) = 'NC_ID' THEN
					SELECT NC_DATA INTO @NC_DATA FROM NATIONALITY_CONFIGURATION WHERE NC_ID = @COLUMN_VALUE;
					SET @REPLACE_STRING = CONCAT('NC_DATA=',@NC_DATA);
					SELECT REPLACE(@V_TEMP_OLD_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_OLD_VALUE;
				END IF;
        IF UPPER(@COLUMN_NAME) = 'ULD_ID' THEN
					SELECT ULD_LOGINID INTO @OLDULDLOGINIDPERSONAL FROM USER_LOGIN_DETAILS WHERE ULD_ID = @COLUMN_VALUE;
                  	SET @REPLACE_STRING = CONCAT('ULD_LOGINID=',@OLDULDLOGINIDPERSONAL);
					SELECT REPLACE(@V_TEMP_OLD_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_OLD_VALUE;
					LEAVE CPD_OV_CS_LOOP;
                END IF;	
				IF @TH_OLD_VALUE IS NULL THEN
			        LEAVE  CPD_OV_CS_LOOP;
		        END IF;
	        END LOOP;             
			IF @TH_NEW_VALUE IS NOT NULL THEN
				SET @V_TEMP_NEW_VALUE = @TH_NEW_VALUE;
				CPD_NV_CS_LOOP : LOOP
					CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES(',',@TH_NEW_VALUE,@VALUE,@REMAINING_STRING);
					SELECT @REMAINING_STRING INTO @TH_NEW_VALUE;
					CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('=',@VALUE,@COLUMN_NAME,@COLUMN_VALUE);
					IF UPPER(@COLUMN_NAME) = 'CUSTOMER_ID' THEN
						      IF EXISTS (SELECT CUSTOMER_FIRST_NAME FROM CUSTOMER WHERE CUSTOMER_ID = @COLUMN_VALUE) THEN
								SELECT CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME INTO @FIRST_NAME_VALUE,@LAST_NAME_VALUE FROM CUSTOMER WHERE CUSTOMER_ID = @COLUMN_VALUE;
        END IF;
        SET @SELECT_CUSTOMER_FIRST_NAME=(SELECT CONCAT('SELECT CUSTOMER_FIRST_NAME INTO @FIRSTNAMEVALUE FROM ',TEMP_CUSTOMER,' WHERE CUSTOMER_ID = @COLUMN_VALUE'));
        PREPARE SELECT_CUSTOMER_FIRST_NAME_STMT FROM @SELECT_CUSTOMER_FIRST_NAME;
        EXECUTE SELECT_CUSTOMER_FIRST_NAME_STMT;
        SET FIRST_NAME_VALUE=@FIRSTNAMEVALUE;
        IF (FIRST_NAME_VALUE IS NOT NULL) THEN
				SET @SELECT_CUSTOMER_NAME=(SELECT CONCAT ('SELECT CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME INTO @FIRST_NAME_VALUE,@LAST_NAME_VALUE FROM ',TEMP_CUSTOMER,' WHERE CUSTOMER_ID = @COLUMN_VALUE'));
				PREPARE SELECT_CUSTOMER_NAME_STMT FROM @SELECT_CUSTOMER_NAME;
        		EXECUTE SELECT_CUSTOMER_NAME_STMT;
        		        END IF;
						SET @REPLACE_STRING = CONCAT('CUSTOMER_FIRST_NAME=',@FIRST_NAME_VALUE,',CUSTOMER_LAST_NAME=',@LAST_NAME_VALUE);
						SELECT REPLACE(@V_TEMP_NEW_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_NEW_VALUE;
					END IF;
					IF UPPER(@COLUMN_NAME) = 'NC_ID' THEN
						SELECT NC_DATA INTO @NC_DATA FROM NATIONALITY_CONFIGURATION WHERE NC_ID = @COLUMN_VALUE;
						SET @REPLACE_STRING = CONCAT('NC_DATA=',@NC_DATA);
						SELECT REPLACE(@V_TEMP_NEW_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_NEW_VALUE;
					END IF; 
					IF UPPER(@COLUMN_NAME) = 'ULD_ID' THEN
						SELECT ULD_LOGINID INTO @NEWULDLOGINIDPERSONAL FROM USER_LOGIN_DETAILS WHERE ULD_ID = @COLUMN_VALUE;
						SET @REPLACE_STRING = CONCAT('ULD_LOGINID=',@NEWULDLOGINIDPERSONAL);
						SELECT REPLACE(@V_TEMP_NEW_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_NEW_VALUE;
						LEAVE CPD_NV_CS_LOOP;
					END IF;	
					IF @TH_NEW_VALUE IS NULL THEN
			          LEAVE  CPD_NV_CS_LOOP; 
					END IF;
	           END LOOP;  
           ELSE
             SET @V_TEMP_NEW_VALUE = NULL;
           END IF;            
		ELSEIF (@TTIP_ID = 18) THEN     
			CALL SP_CUSTOMER_TICKLER_PAYMENT_DETAILS();
		ELSEIF (@TTIP_ID = 51) THEN     
          EU_OV_CS_LOOP : LOOP
				CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES(',',@TH_OLD_VALUE,@VALUE,@REMAINING_STRING);
				SELECT @REMAINING_STRING INTO @TH_OLD_VALUE;
				CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('=',@VALUE,@COLUMN_NAME,@COLUMN_VALUE);
				IF UPPER(@COLUMN_NAME) = 'UNIT_ID' THEN
					SELECT UNIT_NO INTO @UNIT_NO FROM UNIT WHERE UNIT_ID = @COLUMN_VALUE;
					SET @REPLACE_STRING = CONCAT('UNIT_NO=',@UNIT_NO);
					SELECT REPLACE(@V_TEMP_OLD_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_OLD_VALUE;
				END IF;
				IF UPPER(@COLUMN_NAME) = 'ECN_ID' THEN
					SELECT ECN_DATA INTO @OLDECNATA FROM EXPENSE_CONFIGURATION WHERE ECN_ID = @COLUMN_VALUE;
					SET @REPLACE_STRING = CONCAT('ECN_DATA=',@OLDECNATA);
					SELECT REPLACE(@V_TEMP_OLD_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_OLD_VALUE;
				END IF;
				LABEL1: BEGIN
					IF UPPER(@COLUMN_NAME) = 'CUSTOMER_ID' THEN
						SET @OLD_TICKLER=(SELECT CONCAT('SELECT TH_OLD_VALUE INTO @OLDTICKLER FROM TICKLER_HISTORY WHERE TH_ID=',@TH_ID));
						PREPARE OLDTICKLER_STMT FROM @OLD_TICKLER;
						EXECUTE OLDTICKLER_STMT;
						SET TICKLERVALUE=(SELECT LOCATE('CUSTOMER_ID=<NULL>',@OLDTICKLER,1));
						IF(TICKLERVALUE=0) THEN
							IF EXISTS (SELECT CUSTOMER_FIRST_NAME FROM CUSTOMER WHERE CUSTOMER_ID = @COLUMN_VALUE) THEN
								SELECT CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME INTO @FIRST_NAME_VALUE,@LAST_NAME_VALUE FROM CUSTOMER WHERE CUSTOMER_ID = @COLUMN_VALUE;
        END IF;
        SET @SELECT_CUSTOMER_FIRST_NAME=(SELECT CONCAT('SELECT CUSTOMER_FIRST_NAME INTO @FIRSTNAMEVALUE FROM ',TEMP_CUSTOMER,' WHERE CUSTOMER_ID = @COLUMN_VALUE'));
        PREPARE SELECT_CUSTOMER_FIRST_NAME_STMT FROM @SELECT_CUSTOMER_FIRST_NAME;
        EXECUTE SELECT_CUSTOMER_FIRST_NAME_STMT;
        SET FIRST_NAME_VALUE=@FIRSTNAMEVALUE;
        IF (FIRST_NAME_VALUE IS NOT NULL) THEN
				SET @SELECT_CUSTOMER_NAME=(SELECT CONCAT ('SELECT CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME INTO @FIRST_NAME_VALUE,@LAST_NAME_VALUE FROM ',TEMP_CUSTOMER,' WHERE CUSTOMER_ID = @COLUMN_VALUE'));
				PREPARE SELECT_CUSTOMER_NAME_STMT FROM @SELECT_CUSTOMER_NAME;
        		EXECUTE SELECT_CUSTOMER_NAME_STMT;
        		        END IF;
							SET @REPLACE_STRING = CONCAT('CUSTOMER_FIRST_NAME=',@FIRST_NAME_VALUE,',CUSTOMER_LAST_NAME=',@LAST_NAME_VALUE);
							SELECT REPLACE(@V_TEMP_OLD_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_OLD_VALUE;
						ELSE
							LEAVE LABEL1;
						END IF;
					END IF;
				END LABEL1;
				IF UPPER(@COLUMN_NAME) = 'ULD_ID' THEN
					SELECT ULD_LOGINID INTO @OLDLOGINIDEXPENSE FROM USER_LOGIN_DETAILS WHERE ULD_ID = @COLUMN_VALUE;
                  	SET @REPLACE_STRING = CONCAT('ULD_LOGINID=',@OLDLOGINIDEXPENSE);
					SELECT REPLACE(@V_TEMP_OLD_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_OLD_VALUE;
					LEAVE EU_OV_CS_LOOP;
                END IF;	
				IF @TH_OLD_VALUE IS NULL THEN
			        LEAVE  EU_OV_CS_LOOP;
		        END IF;
	        END LOOP;             
           IF @TH_NEW_VALUE IS NOT NULL THEN
				SET @V_TEMP_NEW_VALUE = @TH_NEW_VALUE;
				EU_NV_CS_LOOP : LOOP
					CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES(',',@TH_NEW_VALUE,@VALUE,@REMAINING_STRING);
					SELECT @REMAINING_STRING INTO @TH_NEW_VALUE;
					CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('=',@VALUE,@COLUMN_NAME,@COLUMN_VALUE);
				IF UPPER(@COLUMN_NAME) = 'UNIT_ID' THEN
					SELECT UNIT_NO INTO @NEWUNIT_NO FROM UNIT WHERE UNIT_ID = @COLUMN_VALUE;
					SET @REPLACE_STRING = CONCAT('UNIT_NO=',@NEWUNIT_NO);
					SELECT REPLACE(@V_TEMP_NEW_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_NEW_VALUE;
				END IF;
				IF UPPER(@COLUMN_NAME) = 'ECN_ID' THEN
					SELECT ECN_DATA INTO @NEWECNATA FROM EXPENSE_CONFIGURATION WHERE ECN_ID = @COLUMN_VALUE;
					SET @REPLACE_STRING = CONCAT('ECN_DATA=',@NEWECNATA);
					SELECT REPLACE(@V_TEMP_NEW_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_NEW_VALUE;
				END IF;
				IF UPPER(@COLUMN_NAME) = 'CUSTOMER_ID' THEN
					IF EXISTS (SELECT CUSTOMER_FIRST_NAME FROM CUSTOMER WHERE CUSTOMER_ID = @COLUMN_VALUE) THEN
								SELECT CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME INTO @FIRST_NAME_VALUE,@LAST_NAME_VALUE FROM CUSTOMER WHERE CUSTOMER_ID = @COLUMN_VALUE;
        END IF;
       SET @SELECT_CUSTOMER_FIRST_NAME=(SELECT CONCAT('SELECT CUSTOMER_FIRST_NAME INTO @FIRSTNAMEVALUE FROM ',TEMP_CUSTOMER,' WHERE CUSTOMER_ID = @COLUMN_VALUE'));
        PREPARE SELECT_CUSTOMER_FIRST_NAME_STMT FROM @SELECT_CUSTOMER_FIRST_NAME;
        EXECUTE SELECT_CUSTOMER_FIRST_NAME_STMT;
        SET FIRST_NAME_VALUE=@FIRSTNAMEVALUE;
        IF (FIRST_NAME_VALUE IS NOT NULL) THEN
				SET @SELECT_CUSTOMER_NAME=(SELECT CONCAT ('SELECT CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME INTO @FIRST_NAME_VALUE,@LAST_NAME_VALUE FROM ',TEMP_CUSTOMER,' WHERE CUSTOMER_ID = @COLUMN_VALUE'));
				PREPARE SELECT_CUSTOMER_NAME_STMT FROM @SELECT_CUSTOMER_NAME;
        		EXECUTE SELECT_CUSTOMER_NAME_STMT;
        		        END IF;
					SET @REPLACE_STRING = CONCAT('CUSTOMER_FIRST_NAME=',@FIRST_NAME_VALUE,',CUSTOMER_LAST_NAME=',@LAST_NAME_VALUE);
					SELECT REPLACE(@V_TEMP_NEW_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_NEW_VALUE;
				END IF;
				IF UPPER(@COLUMN_NAME) = 'ULD_ID' THEN
					SELECT ULD_LOGINID INTO @NEWLOGINIDEXPENSE FROM USER_LOGIN_DETAILS WHERE ULD_ID = @COLUMN_VALUE;
                  	SET @REPLACE_STRING = CONCAT('ULD_LOGINID=',@NEWLOGINIDEXPENSE);
					SELECT REPLACE(@V_TEMP_NEW_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_NEW_VALUE;
					LEAVE EU_NV_CS_LOOP;
                END IF;
				IF @TH_NEW_VALUE IS NULL THEN
			        LEAVE  EU_NV_CS_LOOP; 
		        END IF;
	        END LOOP;  
			ELSE
				SET @V_TEMP_NEW_VALUE = NULL;
			END IF;
		END IF;
		IF(@CUSTOMER_ID IS NOT NULL AND @V_TEMP_OLD_VALUE IS NOT NULL)THEN
		IF @V_TEMP_NEW_VALUE IS NULL THEN
    SET @V_TEMP_NEW_VALUE='NULL';
    END IF;
		SET @INSERT_TEMP_TICKLER_HISTORY=(SELECT CONCAT('INSERT INTO ',CUSTOMER_TICKLER_HISTORY_TMPTBL,' SELECT ',@TH_ID,',',@CUSTOMER_ID,',','"',@CUSTOMER_FIRST_NAME,'"',',','"',@CUSTOMER_LAST_NAME,'"',',(SELECT TP_TYPE FROM TICKLER_PROFILE WHERE TP_ID = ',@TP_ID,'),(SELECT TTIP_DATA FROM TICKLER_TABID_PROFILE WHERE TTIP_ID=',@TTIP_ID,'),','"',REPLACE(@V_TEMP_OLD_VALUE,'"','\\"'),'"',',','"',REPLACE(@V_TEMP_NEW_VALUE,'"','\\"'),'"',',','"',@TH_USERSTAMP,'"',',','"',@TH_TIMESTAMP,'"'));
		PREPARE INSERT_TEMP_TICKLER_HISTORY_STMT FROM @INSERT_TEMP_TICKLER_HISTORY;
		EXECUTE INSERT_TEMP_TICKLER_HISTORY_STMT;
		END IF;
    SET COUNT_TICKLER_HISTORY = COUNT_TICKLER_HISTORY - 1;
    END WHILE;
 END IF;
 		SET @DROP_TEMP_TICKLER_VALUES=(SELECT CONCAT('DROP TABLE IF EXISTS ',CUSTOMER_TICKLER_VALUES_TMPTBL));
		PREPARE DROP_TEMP_TICKLER_VALUES_STMT FROM @DROP_TEMP_TICKLER_VALUES;
		EXECUTE DROP_TEMP_TICKLER_VALUES_STMT;
  SET @DROP_TEMP_TICKLER_SPLITTED_UPDATION=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_TICKLER_SPLITTED_UPDATION));
		PREPARE DROP_TEMP_TICKLER_SPLITTED_UPDATION_STMT FROM @DROP_TEMP_TICKLER_SPLITTED_UPDATION;
		EXECUTE DROP_TEMP_TICKLER_SPLITTED_UPDATION_STMT;
  SET @DROP_TEMP_TICKLER_SPLITTED_DELETION=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_TICKLER_SPLITTED_DELETION));
		PREPARE DROP_TEMP_TICKLER_SPLITTED_DELETION_STMT FROM @DROP_TEMP_TICKLER_SPLITTED_DELETION;
		EXECUTE DROP_TEMP_TICKLER_SPLITTED_DELETION_STMT;
  SET @DROP_TEMP_INTERMEDIATE_SPLITTED_DELETION=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_INTERMEDIATE_SPLITTED_DELETION));
		PREPARE DROP_TEMP_INTERMEDIATE_SPLITTED_DELETION_STMT FROM @DROP_TEMP_INTERMEDIATE_SPLITTED_DELETION;
		EXECUTE DROP_TEMP_INTERMEDIATE_SPLITTED_DELETION_STMT;
  SET @DROP_TEMP_CUSTOMER_DELETED_INTERMEDIATE=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_CUSTOMER_DELETED_INTERMEDIATE));
		PREPARE DROP_TEMP_CUSTOMER_DELETED_INTERMEDIATE_STMT FROM @DROP_TEMP_CUSTOMER_DELETED_INTERMEDIATE;
		EXECUTE DROP_TEMP_CUSTOMER_DELETED_INTERMEDIATE_STMT;
  SET @DROP_MAIN_INTERMEDIATE_TEMP_TICKLER_VALUES=(SELECT CONCAT('DROP TABLE IF EXISTS ',MAIN_INTERMEDIATE_TEMP_TICKLER_VALUES));
		PREPARE DROP_MAIN_INTERMEDIATE_TEMP_TICKLER_VALUES_STMT FROM @DROP_MAIN_INTERMEDIATE_TEMP_TICKLER_VALUES;
		EXECUTE DROP_MAIN_INTERMEDIATE_TEMP_TICKLER_VALUES_STMT;
   		SET @DROP_TEMP_CUSTOMER=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_CUSTOMER));
		PREPARE DROP_TEMP_CUSTOMER_STMT FROM @DROP_TEMP_CUSTOMER;
		EXECUTE DROP_TEMP_CUSTOMER_STMT;
COMMIT;
END;