DROP PROCEDURE IF EXISTS SP_TS_TRG_USER_ADMIN_REPORT_DETAILS_VALIDATION;
CREATE PROCEDURE SP_TS_TRG_USER_ADMIN_REPORT_DETAILS_VALIDATION(
IN UARDID INTEGER,
IN REPORT TEXT,
IN REASON TEXT,
IN REPORT_DATE DATE,
IN URCID INT(2),
IN ULDID INT(2),
IN PERMISSION INT(11),
IN ATTENDANCE INT(11),
IN PDID TEXT,
IN AM_SESSION INT(11),
IN PM_SESSION INT (11),
IN BANDWIDTH DECIMAL(6,2),
IN USERSTAMP_ID INT(11),
IN PROCESS TEXT)
BEGIN
  DECLARE PERMISSION_DATA_ERROR_MSG TEXT;
  DECLARE ATTENDANCE_DATA_ERROR_MSG TEXT;
  DECLARE AM_SESSION_DATA_ERROR_MSG TEXT;
  DECLARE PM_SESSION_DATA_ERROR_MSG TEXT;
  DECLARE USER_REPORT_DATA_ERROR_MSG TEXT;
  DECLARE BANDWIDTH_ERROR_MSG TEXT;
  DECLARE REPORT_AND_REASON_ERROR_MSG TEXT;
  DECLARE REPORT_AND_REASON_HALFDAY_ERROR_MSG TEXT;
  DECLARE PD_ID_HALFADAY_ERROR_MSG TEXT;
  DECLARE PERMISSION_ABSENT_ERROR_MSG TEXT;
  DECLARE PERMISSION_ONDUTY_ERROR_MSG TEXT;
  DECLARE REPORT_ERROR_MSG TEXT;
  DECLARE REASON_ERROR_MSG TEXT;
  DECLARE PD_ID_ABSENT_DATA TEXT;
  DECLARE ONDUTY_ATTENDANCE_DATA TEXT;
  DECLARE PDID_ATTENDANCE_ERROR_MSG TEXT;
  DECLARE MESSAGE_TEXT VARCHAR(50);
	IF(PROCESS = 'INSERT') OR (PROCESS='UPDATE')THEN
		IF(PERMISSION IS NOT NULL) THEN
			IF  (PERMISSION NOT BETWEEN 9 AND 14) THEN
			  SET PERMISSION_DATA_ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 19);
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = PERMISSION_DATA_ERROR_MSG;
		  END IF;
	  END IF;
    		IF(ATTENDANCE IS NOT NULL) THEN
			    IF  (ATTENDANCE NOT BETWEEN 4 AND 8) THEN
			        SET ATTENDANCE_DATA_ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 20);
               SIGNAL SQLSTATE '45000'
               SET MESSAGE_TEXT = ATTENDANCE_DATA_ERROR_MSG;
		      END IF;
	      END IF;
        IF(AM_SESSION  IS NOT NULL) THEN
			    IF  ( AM_SESSION NOT BETWEEN 1 AND 3) THEN
              SET AM_SESSION_DATA_ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 21);
              SIGNAL SQLSTATE '45000'
              SET MESSAGE_TEXT = AM_SESSION_DATA_ERROR_MSG;
		      END IF;
	      END IF;
        IF(PM_SESSION  IS NOT NULL) THEN
			    IF (PM_SESSION NOT BETWEEN 1 AND 3) THEN
              SET PM_SESSION_DATA_ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 21);
              SIGNAL SQLSTATE '45000'
              SET MESSAGE_TEXT = PM_SESSION_DATA_ERROR_MSG;
		      END IF;
	      END IF;
        IF(REPORT IS NOT NULL )THEN
          IF EXISTS (SELECT UARD_REPORT FROM USER_ADMIN_REPORT_DETAILS WHERE ULD_ID = ULDID AND UARD_DATE = REPORT_DATE) THEN
            SET USER_REPORT_DATA_ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 22);
            SIGNAL SQLSTATE '45000'
			      SET MESSAGE_TEXT = USER_REPORT_DATA_ERROR_MSG;
          END IF;
        END IF;
        IF (REPORT IS NULL AND REASON IS NULL) THEN
			  SET REPORT_AND_REASON_ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 23);
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = REPORT_AND_REASON_ERROR_MSG;
        END IF;
        IF (BANDWIDTH IS NOT NULL) THEN
          SET @BANDWIDTH_VALUE=(SELECT SUBSTRING_INDEX(BANDWIDTH, '.', 1));
          IF(LENGTH(@BANDWIDTH_VALUE) > 4) THEN
			      SET BANDWIDTH_ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 24);
          SIGNAL SQLSTATE '45000'
          SET MESSAGE_TEXT = BANDWIDTH_ERROR_MSG;
          END IF;
        END IF;
      IF(ATTENDANCE IS NOT NULL) THEN
      IF (ATTENDANCE=4)THEN
      IF (REPORT IS NULL AND REASON IS NULL) THEN
      SET REPORT_AND_REASON_HALFDAY_ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 25);
       SIGNAL SQLSTATE '45000'
       SET MESSAGE_TEXT = REPORT_AND_REASON_HALFDAY_ERROR_MSG;
       END IF;
       END IF;
       END IF;
      IF(ATTENDANCE IS NOT NULL) THEN
      IF (ATTENDANCE=4)THEN
      IF (PDID IS NULL) THEN
       SET PD_ID_HALFADAY_ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 26);
       SIGNAL SQLSTATE '45000'
       SET MESSAGE_TEXT = PD_ID_HALFADAY_ERROR_MSG;
       END IF;
       END IF;
       END IF;
      IF(ATTENDANCE IS NOT NULL) THEN
      IF (ATTENDANCE=5)THEN
      IF (PDID IS NULL) THEN
       SET PDID_ATTENDANCE_ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 27);
       SIGNAL SQLSTATE '45000'
       SET MESSAGE_TEXT = PDID_ATTENDANCE_ERROR_MSG;
       END IF;
       END IF;
       END IF;
     IF(ATTENDANCE IS NOT NULL) THEN
      IF (ATTENDANCE=6)THEN
      IF (PERMISSION IS NOT NULL) THEN
       SET PERMISSION_ABSENT_ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 28);
       SIGNAL SQLSTATE '45000'
       SET MESSAGE_TEXT = PERMISSION_ABSENT_ERROR_MSG;
       END IF;
       END IF;
       END IF;
      IF(ATTENDANCE IS NOT NULL) THEN
      IF (ATTENDANCE=7)THEN
      IF (PERMISSION IS NOT NULL) THEN
      SET PERMISSION_ONDUTY_ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 29);
       SIGNAL SQLSTATE '45000'
			 SET MESSAGE_TEXT = PERMISSION_ONDUTY_ERROR_MSG;
       END IF;
       IF (PDID IS NOT NULL) THEN
      SET ONDUTY_ATTENDANCE_DATA = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 33);
       SIGNAL SQLSTATE '45000'
       SET MESSAGE_TEXT = ONDUTY_ATTENDANCE_DATA;
       END IF;
       END IF;
       END IF;
      IF(ATTENDANCE IS NOT NULL) THEN
      IF (ATTENDANCE=5)THEN
      IF (REPORT IS NULL) THEN
      SET REPORT_ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 30);
       SIGNAL SQLSTATE '45000'
       SET MESSAGE_TEXT = REPORT_ERROR_MSG;
       END IF;
       END IF;
       END IF;
      IF(ATTENDANCE IS NOT NULL) THEN
      IF (ATTENDANCE=6)THEN
      IF (REASON IS NULL) THEN
       SET REASON_ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 31);
       SIGNAL SQLSTATE '45000'
       SET MESSAGE_TEXT = REASON_ERROR_MSG;
       END IF;
      IF (PDID IS NOT NULL) THEN
       SET PD_ID_ABSENT_DATA = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 32);
       SIGNAL SQLSTATE '45000'
       SET MESSAGE_TEXT = PD_ID_ABSENT_DATA;
       END IF;
       END IF;
       END IF;
       END IF;
END;